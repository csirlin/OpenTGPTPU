test/mullifier_examples/argmin/
Simulation terminated at cycle 679
PC = 0
RHM standard matrix: read host memory [0:6], write to unified buffer [0:6]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [16064     0     0     0     0     0     0     0]
 [   10     0     1     0     0    48    59    49]
 [   40   112     0     0     0     0     0     0]]

PC = 1
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: padded with 1 0-rows
Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 2
RW 16: read weight matrix 16 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 17  0  0  0  0  0  1]]

PC = 3
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 17  0  0  0  0  0  1]]
MMC output: 
[[ 0 17  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 17  0  0  0  0  0  1]]

PC = 4
RHM pc return: create curent pc vector, write to unified buffer [10]. Flags? 2
[[0. 6. 0. 0. 0. 0. 0. 4.]]

PC = 5
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 17  0  0  0  0  0  1]]
After activation:
[[ 0 17  0  0  0  0  0  1]]
Branch from 5 to 23. No write to UB.

PC = 23
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 24
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[59  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[59  0  0  0  0  0  0  0]]

PC = 25
ACT: read ACC[0:1], and write to UB[13:14]. Activation function: Before activation:
[[59  0  0  0  0  0  0  0]]
After activation:
[[59  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[59  0  0  0  0  0  0  0]]

PC = 26
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 27
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[49  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[49  0  0  0  0  0  0  0]]

PC = 28
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[49  0  0  0  0  0  0  0]]
After activation:
[[49  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[49  0  0  0  0  0  0  0]]

PC = 29
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 30
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[49  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[49  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[49  0  0  0  0  0  0  0]]

PC = 31
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 32
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[49  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[49  0  0  0  0  0  0  0]]

PC = 33
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[49  0  0  0  0  0  0  0]]
After activation:
[[49  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[49  0  0  0  0  0  0  0]]

PC = 34
RHM vec cell: read host memory [6][1] and pad with 0s, write to unified buffer [15]. Buffer addr is 49 -> [6][1]. Flags? 1
[[5. 0. 0. 0. 0. 0. 0. 0.]]

PC = 35
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 36
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[59  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[59  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[59  0  0  0  0  0  0  0]]

PC = 37
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 38
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[59  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[59  0  0  0  0  0  0  0]]

PC = 39
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[59  0  0  0  0  0  0  0]]
After activation:
[[59  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[59  0  0  0  0  0  0  0]]

PC = 40
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 41
MMC: multiply UB[15:16] with a weight, store in ACC[0:1]
MMC matrix: 
[[5 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[5 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[5 0 0 0 0 0 0 0]]

PC = 42
ACT: read ACC[0:1], and write to UB[24:25]. Activation function: Before activation:
[[5 0 0 0 0 0 0 0]]
After activation:
[[5 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[5 0 0 0 0 0 0 0]]

PC = 43
WHM vec cell: read unified buffer [24][0], write to host memory [7][3]. Buffer addr is 59 -> [7][3]. Flags? 1
UB[24]: [[5 0 0 0 0 0 0 0]]
HM[7] before: [ 6 11  4  0  0  0  0  0]
HM[7]  after: [ 6 11  4  5  0  0  0  0]

PC = 44
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 45
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 46
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 47
RW 4: read weight matrix 4 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 48
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 49
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 49 to 50. No write to UB.

PC = 50
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 51
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 52
RW 5: read weight matrix 5 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 53
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[ 0 10  0  0  0  0  0  0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[ 0 10  0  0  0  0  0  0]]

PC = 54
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[ 0 10  0  0  0  0  0  0]]
After activation:
[[ 0 10  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[ 0 10  0  0  0  0  0  0]]

PC = 55
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 56
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 57
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 58
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 59
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 60
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 3]]

PC = 61
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 62
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 0 10  0  0  0  0  0  0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294967286          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 3]]
After MMC + ACC: 
[[4294967286          0          0          0          0          0          0          3]]

PC = 63
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[4294967286          0          0          0          0          0          0          3]]
After activation:
[[4294967286          0          0          0          0          0          0          3]]
Less than check, evaluates to False (4294967286 !< 0).
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 64
RW 7: read weight matrix 7 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 65
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 66
ACT: read ACC[0:1], and write to UB[24:25]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 67
RW 8: read weight matrix 8 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 75  0  0  0  0  0  1]]

PC = 68
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 75  0  0  0  0  0  1]]
MMC output: 
[[ 0 75  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 75  0  0  0  0  0  1]]

PC = 69
RW 9: read weight matrix 9 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 70
MMC: multiply UB[24:25] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[ 0 75  0  0  0  0  0  1]]
After MMC + ACC: 
[[ 0 75  0  0  0  0  0  1]]

PC = 71
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 75  0  0  0  0  0  1]]
After activation:
[[ 0 75  0  0  0  0  0  1]]
Branch from 71 to 147. No write to UB.

PC = 147
RW 12: read weight matrix 12 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 148
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 149
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 150
RW 9: read weight matrix 9 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 151
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 6 0 0 0 0 0 4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 6 0 0 0 0 0 4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 6 0 0 0 0 0 4]]

PC = 152
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 6 0 0 0 0 0 4]]
After activation:
[[0 6 0 0 0 0 0 4]]
Unconditional jump from 152 to 6. No write to UB.

PC = 6
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 7
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 8
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 9
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 10
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[59  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[59  0  0  0  0  0  0  0]]

PC = 11
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[59  0  0  0  0  0  0  0]]
After activation:
[[59  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[59  0  0  0  0  0  0  0]]

PC = 12
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 13
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[59  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[59  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[59  0  0  0  0  0  0  0]]

PC = 14
RW 17: read weight matrix 17 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 15
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[59  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[59  0  0  0  0  0  0  0]]

PC = 16
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[59  0  0  0  0  0  0  0]]
After activation:
[[59  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[59  0  0  0  0  0  0  0]]

PC = 17
RHM vec cell: read host memory [7][3] and pad with 0s, write to unified buffer [8]. Buffer addr is 59 -> [7][3]. Flags? 1
[[5. 0. 0. 0. 0. 0. 0. 0.]]

PC = 18
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 19
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[5 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[5 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[5 0 0 0 0 0 0 0]]

PC = 20
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: Before activation:
[[5 0 0 0 0 0 0 0]]
After activation:
[[5 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[5 0 0 0 0 0 0 0]]

PC = 21
WHM standard matrix: read unified buffer [9:10], write to host memory [1:2]. Flags? 0
[[5 0 0 0 0 0 0 0]]

PC = 22
H A L T
MMC Count: 26
HM Count: 6
ACT Count: 19
RW Count: 26
RW Reloads: 23
PC history:
 [0, 1, 2, 3, 4, 5, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 147, 148, 149, 150, 151, 152, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/argmin passed
test/mullifier_examples/argmin10/
Simulation terminated at cycle 679
PC = 0
RHM standard matrix: read host memory [0:6], write to unified buffer [0:6]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [16064     0     0     0     0     0     0     0]
 [   10     0     1     0     0    48    59    49]
 [   40   112     0     0     0     0     0     0]]

PC = 1
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: padded with 1 0-rows
Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 2
RW 16: read weight matrix 16 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 17  0  0  0  0  0  1]]

PC = 3
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 17  0  0  0  0  0  1]]
MMC output: 
[[ 0 17  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 17  0  0  0  0  0  1]]

PC = 4
RHM pc return: create curent pc vector, write to unified buffer [10]. Flags? 2
[[0. 6. 0. 0. 0. 0. 0. 4.]]

PC = 5
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 17  0  0  0  0  0  1]]
After activation:
[[ 0 17  0  0  0  0  0  1]]
Branch from 5 to 23. No write to UB.

PC = 23
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 24
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[59  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[59  0  0  0  0  0  0  0]]

PC = 25
ACT: read ACC[0:1], and write to UB[13:14]. Activation function: Before activation:
[[59  0  0  0  0  0  0  0]]
After activation:
[[59  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[59  0  0  0  0  0  0  0]]

PC = 26
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 27
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[49  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[49  0  0  0  0  0  0  0]]

PC = 28
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[49  0  0  0  0  0  0  0]]
After activation:
[[49  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[49  0  0  0  0  0  0  0]]

PC = 29
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 30
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[49  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[49  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[49  0  0  0  0  0  0  0]]

PC = 31
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 32
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[49  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[49  0  0  0  0  0  0  0]]

PC = 33
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[49  0  0  0  0  0  0  0]]
After activation:
[[49  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[49  0  0  0  0  0  0  0]]

PC = 34
RHM vec cell: read host memory [6][1] and pad with 0s, write to unified buffer [15]. Buffer addr is 49 -> [6][1]. Flags? 1
[[829.   0.   0.   0.   0.   0.   0.   0.]]

PC = 35
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 36
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[59  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[59  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[59  0  0  0  0  0  0  0]]

PC = 37
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 38
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[59  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[59  0  0  0  0  0  0  0]]

PC = 39
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[59  0  0  0  0  0  0  0]]
After activation:
[[59  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[59  0  0  0  0  0  0  0]]

PC = 40
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 41
MMC: multiply UB[15:16] with a weight, store in ACC[0:1]
MMC matrix: 
[[829   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[829   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[829   0   0   0   0   0   0   0]]

PC = 42
ACT: read ACC[0:1], and write to UB[24:25]. Activation function: Before activation:
[[829   0   0   0   0   0   0   0]]
After activation:
[[829   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[829   0   0   0   0   0   0   0]]

PC = 43
WHM vec cell: read unified buffer [24][0], write to host memory [7][3]. Buffer addr is 59 -> [7][3]. Flags? 1
UB[24]: [[829   0   0   0   0   0   0   0]]
HM[7] before: [797 277  93   0   0   0   0   0]
HM[7]  after: [797 277  93 829   0   0   0   0]

PC = 44
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 45
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 46
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 47
RW 4: read weight matrix 4 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 48
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 49
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 49 to 50. No write to UB.

PC = 50
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 51
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 52
RW 5: read weight matrix 5 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 53
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[ 0 10  0  0  0  0  0  0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[ 0 10  0  0  0  0  0  0]]

PC = 54
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[ 0 10  0  0  0  0  0  0]]
After activation:
[[ 0 10  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[ 0 10  0  0  0  0  0  0]]

PC = 55
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 56
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 57
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 58
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 59
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 60
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 3]]

PC = 61
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 62
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 0 10  0  0  0  0  0  0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294967286          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 3]]
After MMC + ACC: 
[[4294967286          0          0          0          0          0          0          3]]

PC = 63
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[4294967286          0          0          0          0          0          0          3]]
After activation:
[[4294967286          0          0          0          0          0          0          3]]
Less than check, evaluates to False (4294967286 !< 0).
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 64
RW 7: read weight matrix 7 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 65
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 66
ACT: read ACC[0:1], and write to UB[24:25]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 67
RW 8: read weight matrix 8 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 75  0  0  0  0  0  1]]

PC = 68
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 75  0  0  0  0  0  1]]
MMC output: 
[[ 0 75  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 75  0  0  0  0  0  1]]

PC = 69
RW 9: read weight matrix 9 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 70
MMC: multiply UB[24:25] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[ 0 75  0  0  0  0  0  1]]
After MMC + ACC: 
[[ 0 75  0  0  0  0  0  1]]

PC = 71
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 75  0  0  0  0  0  1]]
After activation:
[[ 0 75  0  0  0  0  0  1]]
Branch from 71 to 147. No write to UB.

PC = 147
RW 12: read weight matrix 12 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 148
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 149
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 150
RW 9: read weight matrix 9 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 151
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 6 0 0 0 0 0 4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 6 0 0 0 0 0 4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 6 0 0 0 0 0 4]]

PC = 152
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 6 0 0 0 0 0 4]]
After activation:
[[0 6 0 0 0 0 0 4]]
Unconditional jump from 152 to 6. No write to UB.

PC = 6
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 7
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 8
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 9
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 10
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[59  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[59  0  0  0  0  0  0  0]]

PC = 11
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[59  0  0  0  0  0  0  0]]
After activation:
[[59  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[59  0  0  0  0  0  0  0]]

PC = 12
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 13
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[59  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[59  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[59  0  0  0  0  0  0  0]]

PC = 14
RW 17: read weight matrix 17 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 15
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[10  0  1  0  0 48 59 49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[59  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[59  0  0  0  0  0  0  0]]

PC = 16
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[59  0  0  0  0  0  0  0]]
After activation:
[[59  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[59  0  0  0  0  0  0  0]]

PC = 17
RHM vec cell: read host memory [7][3] and pad with 0s, write to unified buffer [8]. Buffer addr is 59 -> [7][3]. Flags? 1
[[829.   0.   0.   0.   0.   0.   0.   0.]]

PC = 18
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 19
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[829   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[829   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[829   0   0   0   0   0   0   0]]

PC = 20
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: Before activation:
[[829   0   0   0   0   0   0   0]]
After activation:
[[829   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[829   0   0   0   0   0   0   0]]

PC = 21
WHM standard matrix: read unified buffer [9:10], write to host memory [1:2]. Flags? 0
[[829   0   0   0   0   0   0   0]]

PC = 22
H A L T
MMC Count: 26
HM Count: 6
ACT Count: 19
RW Count: 26
RW Reloads: 23
PC history:
 [0, 1, 2, 3, 4, 5, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 147, 148, 149, 150, 151, 152, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/argmin10 passed
test/mullifier_examples/argmin100/
Simulation terminated at cycle 679
PC = 0
RHM standard matrix: read host memory [0:6], write to unified buffer [0:6]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [16152     0     0     0     0     0     0     0]
 [  100     0     1     0     0    48   149    49]
 [   40   112     0     0     0     0     0     0]]

PC = 1
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: padded with 1 0-rows
Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 2
RW 16: read weight matrix 16 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 17  0  0  0  0  0  1]]

PC = 3
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 17  0  0  0  0  0  1]]
MMC output: 
[[ 0 17  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 17  0  0  0  0  0  1]]

PC = 4
RHM pc return: create curent pc vector, write to unified buffer [10]. Flags? 2
[[0. 6. 0. 0. 0. 0. 0. 4.]]

PC = 5
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 17  0  0  0  0  0  1]]
After activation:
[[ 0 17  0  0  0  0  0  1]]
Branch from 5 to 23. No write to UB.

PC = 23
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 24
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[100   0   1   0   0  48 149  49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[149   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[149   0   0   0   0   0   0   0]]

PC = 25
ACT: read ACC[0:1], and write to UB[13:14]. Activation function: Before activation:
[[149   0   0   0   0   0   0   0]]
After activation:
[[149   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[149   0   0   0   0   0   0   0]]

PC = 26
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 27
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[100   0   1   0   0  48 149  49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[49  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[49  0  0  0  0  0  0  0]]

PC = 28
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[49  0  0  0  0  0  0  0]]
After activation:
[[49  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[49  0  0  0  0  0  0  0]]

PC = 29
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 30
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[49  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[49  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[49  0  0  0  0  0  0  0]]

PC = 31
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 32
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[100   0   1   0   0  48 149  49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[49  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[49  0  0  0  0  0  0  0]]

PC = 33
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[49  0  0  0  0  0  0  0]]
After activation:
[[49  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[49  0  0  0  0  0  0  0]]

PC = 34
RHM vec cell: read host memory [6][1] and pad with 0s, write to unified buffer [15]. Buffer addr is 49 -> [6][1]. Flags? 1
[[306.   0.   0.   0.   0.   0.   0.   0.]]

PC = 35
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 36
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[149   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[149   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[149   0   0   0   0   0   0   0]]

PC = 37
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 38
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[100   0   1   0   0  48 149  49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[149   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[149   0   0   0   0   0   0   0]]

PC = 39
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[149   0   0   0   0   0   0   0]]
After activation:
[[149   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[149   0   0   0   0   0   0   0]]

PC = 40
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 41
MMC: multiply UB[15:16] with a weight, store in ACC[0:1]
MMC matrix: 
[[306   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[306   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[306   0   0   0   0   0   0   0]]

PC = 42
ACT: read ACC[0:1], and write to UB[24:25]. Activation function: Before activation:
[[306   0   0   0   0   0   0   0]]
After activation:
[[306   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[306   0   0   0   0   0   0   0]]

PC = 43
WHM vec cell: read unified buffer [24][0], write to host memory [18][5]. Buffer addr is 149 -> [18][5]. Flags? 1
UB[24]: [[306   0   0   0   0   0   0   0]]
HM[18] before: [ 84 562 783 440 765   0   0   0]
HM[18]  after: [ 84 562 783 440 765 306   0   0]

PC = 44
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 45
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[100   0   1   0   0  48 149  49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 46
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 47
RW 4: read weight matrix 4 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 48
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 49
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 49 to 50. No write to UB.

PC = 50
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 51
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 52
RW 5: read weight matrix 5 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 53
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[100   0   1   0   0  48 149  49]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[  0 100   0   0   0   0   0   0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[  0 100   0   0   0   0   0   0]]

PC = 54
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[  0 100   0   0   0   0   0   0]]
After activation:
[[  0 100   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[  0 100   0   0   0   0   0   0]]

PC = 55
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 56
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 57
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 58
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 59
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 60
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 3]]

PC = 61
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 62
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[  0 100   0   0   0   0   0   0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294967196          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 3]]
After MMC + ACC: 
[[4294967196          0          0          0          0          0          0          3]]

PC = 63
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[4294967196          0          0          0          0          0          0          3]]
After activation:
[[4294967196          0          0          0          0          0          0          3]]
Less than check, evaluates to False (4294967196 !< 0).
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 64
RW 7: read weight matrix 7 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 65
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 66
ACT: read ACC[0:1], and write to UB[24:25]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 67
RW 8: read weight matrix 8 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 75  0  0  0  0  0  1]]

PC = 68
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 75  0  0  0  0  0  1]]
MMC output: 
[[ 0 75  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 75  0  0  0  0  0  1]]

PC = 69
RW 9: read weight matrix 9 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 70
MMC: multiply UB[24:25] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[ 0 75  0  0  0  0  0  1]]
After MMC + ACC: 
[[ 0 75  0  0  0  0  0  1]]

PC = 71
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 75  0  0  0  0  0  1]]
After activation:
[[ 0 75  0  0  0  0  0  1]]
Branch from 71 to 147. No write to UB.

PC = 147
RW 12: read weight matrix 12 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 148
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[100   0   1   0   0  48 149  49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 149
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 150
RW 9: read weight matrix 9 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 151
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 6 0 0 0 0 0 4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 6 0 0 0 0 0 4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 6 0 0 0 0 0 4]]

PC = 152
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 6 0 0 0 0 0 4]]
After activation:
[[0 6 0 0 0 0 0 4]]
Unconditional jump from 152 to 6. No write to UB.

PC = 6
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 7
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 8
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 9
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 10
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[100   0   1   0   0  48 149  49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[149   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[149   0   0   0   0   0   0   0]]

PC = 11
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[149   0   0   0   0   0   0   0]]
After activation:
[[149   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[149   0   0   0   0   0   0   0]]

PC = 12
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 13
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[149   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[149   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[149   0   0   0   0   0   0   0]]

PC = 14
RW 17: read weight matrix 17 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 15
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[100   0   1   0   0  48 149  49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[149   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[149   0   0   0   0   0   0   0]]

PC = 16
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[149   0   0   0   0   0   0   0]]
After activation:
[[149   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[149   0   0   0   0   0   0   0]]

PC = 17
RHM vec cell: read host memory [18][5] and pad with 0s, write to unified buffer [8]. Buffer addr is 149 -> [18][5]. Flags? 1
[[306.   0.   0.   0.   0.   0.   0.   0.]]

PC = 18
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 19
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[306   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[306   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[306   0   0   0   0   0   0   0]]

PC = 20
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: Before activation:
[[306   0   0   0   0   0   0   0]]
After activation:
[[306   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[306   0   0   0   0   0   0   0]]

PC = 21
WHM standard matrix: read unified buffer [9:10], write to host memory [1:2]. Flags? 0
[[306   0   0   0   0   0   0   0]]

PC = 22
H A L T
MMC Count: 26
HM Count: 6
ACT Count: 19
RW Count: 26
RW Reloads: 23
PC history:
 [0, 1, 2, 3, 4, 5, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 147, 148, 149, 150, 151, 152, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/argmin100 passed
test/mullifier_examples/argmin1000/
Simulation terminated at cycle 679
PC = 0
RHM standard matrix: read host memory [0:6], write to unified buffer [0:6]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [17056     0     0     0     0     0     0     0]
 [ 1000     0     1     0     0    48  1049    49]
 [   40   112     0     0     0     0     0     0]]

PC = 1
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: padded with 1 0-rows
Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 2
RW 16: read weight matrix 16 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 17  0  0  0  0  0  1]]

PC = 3
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 17  0  0  0  0  0  1]]
MMC output: 
[[ 0 17  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 17  0  0  0  0  0  1]]

PC = 4
RHM pc return: create curent pc vector, write to unified buffer [10]. Flags? 2
[[0. 6. 0. 0. 0. 0. 0. 4.]]

PC = 5
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 17  0  0  0  0  0  1]]
After activation:
[[ 0 17  0  0  0  0  0  1]]
Branch from 5 to 23. No write to UB.

PC = 23
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 24
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[1000    0    1    0    0   48 1049   49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1049    0    0    0    0    0    0    0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1049    0    0    0    0    0    0    0]]

PC = 25
ACT: read ACC[0:1], and write to UB[13:14]. Activation function: Before activation:
[[1049    0    0    0    0    0    0    0]]
After activation:
[[1049    0    0    0    0    0    0    0]]
Normal activation.
After branch/comparison/jump:
[[1049    0    0    0    0    0    0    0]]

PC = 26
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 27
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[1000    0    1    0    0   48 1049   49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[49  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[49  0  0  0  0  0  0  0]]

PC = 28
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[49  0  0  0  0  0  0  0]]
After activation:
[[49  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[49  0  0  0  0  0  0  0]]

PC = 29
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 30
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[49  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[49  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[49  0  0  0  0  0  0  0]]

PC = 31
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 32
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[1000    0    1    0    0   48 1049   49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[49  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[49  0  0  0  0  0  0  0]]

PC = 33
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[49  0  0  0  0  0  0  0]]
After activation:
[[49  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[49  0  0  0  0  0  0  0]]

PC = 34
RHM vec cell: read host memory [6][1] and pad with 0s, write to unified buffer [15]. Buffer addr is 49 -> [6][1]. Flags? 1
[[728.   0.   0.   0.   0.   0.   0.   0.]]

PC = 35
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 36
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[1049    0    0    0    0    0    0    0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1049    0    0    0    0    0    0    0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1049    0    0    0    0    0    0    0]]

PC = 37
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 38
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[1000    0    1    0    0   48 1049   49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[1049    0    0    0    0    0    0    0]]
After MMC + ACC: 
[[1049    0    0    0    0    0    0    0]]

PC = 39
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[1049    0    0    0    0    0    0    0]]
After activation:
[[1049    0    0    0    0    0    0    0]]
Normal activation.
After branch/comparison/jump:
[[1049    0    0    0    0    0    0    0]]

PC = 40
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 41
MMC: multiply UB[15:16] with a weight, store in ACC[0:1]
MMC matrix: 
[[728   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[728   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[728   0   0   0   0   0   0   0]]

PC = 42
ACT: read ACC[0:1], and write to UB[24:25]. Activation function: Before activation:
[[728   0   0   0   0   0   0   0]]
After activation:
[[728   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[728   0   0   0   0   0   0   0]]

PC = 43
WHM vec cell: read unified buffer [24][0], write to host memory [131][1]. Buffer addr is 1049 -> [131][1]. Flags? 1
UB[24]: [[728   0   0   0   0   0   0   0]]
HM[131] before: [197   0   0   0   0   0   0   0]
HM[131]  after: [197 728   0   0   0   0   0   0]

PC = 44
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 45
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[1000    0    1    0    0   48 1049   49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 46
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 47
RW 4: read weight matrix 4 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 48
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 49
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 49 to 50. No write to UB.

PC = 50
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 51
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 52
RW 5: read weight matrix 5 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 53
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[1000    0    1    0    0   48 1049   49]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[   0 1000    0    0    0    0    0    0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[   0 1000    0    0    0    0    0    0]]

PC = 54
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[   0 1000    0    0    0    0    0    0]]
After activation:
[[   0 1000    0    0    0    0    0    0]]
Normal activation.
After branch/comparison/jump:
[[   0 1000    0    0    0    0    0    0]]

PC = 55
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 56
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 57
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 58
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 59
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 60
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 3]]

PC = 61
RW 6: read weight matrix 6 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 62
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[   0 1000    0    0    0    0    0    0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294966296          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 3]]
After MMC + ACC: 
[[4294966296          0          0          0          0          0          0          3]]

PC = 63
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[4294966296          0          0          0          0          0          0          3]]
After activation:
[[4294966296          0          0          0          0          0          0          3]]
Less than check, evaluates to False (4294966296 !< 0).
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 64
RW 7: read weight matrix 7 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 65
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 66
ACT: read ACC[0:1], and write to UB[24:25]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 67
RW 8: read weight matrix 8 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 75  0  0  0  0  0  1]]

PC = 68
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 75  0  0  0  0  0  1]]
MMC output: 
[[ 0 75  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 75  0  0  0  0  0  1]]

PC = 69
RW 9: read weight matrix 9 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 70
MMC: multiply UB[24:25] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[ 0 75  0  0  0  0  0  1]]
After MMC + ACC: 
[[ 0 75  0  0  0  0  0  1]]

PC = 71
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 75  0  0  0  0  0  1]]
After activation:
[[ 0 75  0  0  0  0  0  1]]
Branch from 71 to 147. No write to UB.

PC = 147
RW 12: read weight matrix 12 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 148
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[1000    0    1    0    0   48 1049   49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 149
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 150
RW 9: read weight matrix 9 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 151
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 6 0 0 0 0 0 4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 6 0 0 0 0 0 4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 6 0 0 0 0 0 4]]

PC = 152
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 6 0 0 0 0 0 4]]
After activation:
[[0 6 0 0 0 0 0 4]]
Unconditional jump from 152 to 6. No write to UB.

PC = 6
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 7
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 8
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 9
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 10
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[1000    0    1    0    0   48 1049   49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1049    0    0    0    0    0    0    0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1049    0    0    0    0    0    0    0]]

PC = 11
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[1049    0    0    0    0    0    0    0]]
After activation:
[[1049    0    0    0    0    0    0    0]]
Normal activation.
After branch/comparison/jump:
[[1049    0    0    0    0    0    0    0]]

PC = 12
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 13
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[1049    0    0    0    0    0    0    0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1049    0    0    0    0    0    0    0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1049    0    0    0    0    0    0    0]]

PC = 14
RW 17: read weight matrix 17 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 15
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[1000    0    1    0    0   48 1049   49]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[1049    0    0    0    0    0    0    0]]
After MMC + ACC: 
[[1049    0    0    0    0    0    0    0]]

PC = 16
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[1049    0    0    0    0    0    0    0]]
After activation:
[[1049    0    0    0    0    0    0    0]]
Normal activation.
After branch/comparison/jump:
[[1049    0    0    0    0    0    0    0]]

PC = 17
RHM vec cell: read host memory [131][1] and pad with 0s, write to unified buffer [8]. Buffer addr is 1049 -> [131][1]. Flags? 1
[[728.   0.   0.   0.   0.   0.   0.   0.]]

PC = 18
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 19
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[728   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[728   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[728   0   0   0   0   0   0   0]]

PC = 20
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: Before activation:
[[728   0   0   0   0   0   0   0]]
After activation:
[[728   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[728   0   0   0   0   0   0   0]]

PC = 21
WHM standard matrix: read unified buffer [9:10], write to host memory [1:2]. Flags? 0
[[728   0   0   0   0   0   0   0]]

PC = 22
H A L T
MMC Count: 26
HM Count: 6
ACT Count: 19
RW Count: 26
RW Reloads: 23
PC history:
 [0, 1, 2, 3, 4, 5, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 147, 148, 149, 150, 151, 152, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/argmin1000 passed
test/mullifier_examples/bfs/
Simulation terminated at cycle 2752
PC = 0
RHM standard matrix: read host memory [0:7], write to unified buffer [0:7]. Flags? 0
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]
 [     16088          0          0          0          0          0          0          0]
 [         0          0          1          0          1          0          1 4294967295]
 [         5          1          4          0         56         72         66         79]
 [        78         77         24         48         56        240          0          0]]

PC = 1
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  4  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 28: read weight matrix 28 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 4
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  4  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 4 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 4 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 4 0 0 0 0 0 0]]
After activation:
[[0 4 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 4 0 0 0 0 0 0]]

PC = 6
RW 29: read weight matrix 29 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 87  0  0  0  0  0  1]]

PC = 7
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 87  0  0  0  0  0  1]]
MMC output: 
[[ 0 87  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 87  0  0  0  0  0  1]]

PC = 8
RHM pc return: create curent pc vector, write to unified buffer [9]. Flags? 2
[[ 0. 10.  0.  0.  0.  0.  0.  4.]]

PC = 9
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 87  0  0  0  0  0  1]]
After activation:
[[ 0 87  0  0  0  0  0  1]]
Branch from 9 to 97. No write to UB.

PC = 97
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 98
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[16088     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[16088     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[16088     0     0     0     0     0     0     0]]

PC = 99
RW 7: read weight matrix 7 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]

PC = 100
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]
MMC output: 
[[4294967056          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[16088     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 101
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[15848     0     0     0     0     0     0     0]]
After activation:
[[15848     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15848     0     0     0     0     0     0     0]]

PC = 102
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 103
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15848     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15848     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 104
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[15848     0     0     0     0     0     0     0]]
After activation:
[[15848     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15848     0     0     0     0     0     0     0]]

PC = 105
WHM vec matrix: read unified buffer [9:39], write to host memory [1981:2011]. Buffer addr is 15848 -> [1981][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  4  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 106
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 107
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 4 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 108
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 109
RW 8: read weight matrix 8 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967201          0          0          0          0          0          1]]

PC = 110
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967201          0          0          0          0          0          1]]
MMC output: 
[[         0 4294967201          0          0          0          0          0          1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[         0 4294967201          0          0          0          0          0          1]]

PC = 111
RHM pc return: create curent pc vector, write to unified buffer [9]. Flags? 2
[[  0. 113.   0.   0.   0.   0.   0.   4.]]

PC = 112
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[         0 4294967201          0          0          0          0          0          1]]
After activation:
[[         0 4294967201          0          0          0          0          0          1]]
Branch from 112 to 18. No write to UB.

PC = 18
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 19
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  4  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[79  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[79  0  0  0  0  0  0  0]]

PC = 20
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: Before activation:
[[79  0  0  0  0  0  0  0]]
After activation:
[[79  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[79  0  0  0  0  0  0  0]]

PC = 21
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 22
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[78  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 23
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[78  0  0  0  0  0  0  0]]
After activation:
[[78  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[78  0  0  0  0  0  0  0]]

PC = 24
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 25
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[78  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[78  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 26
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 27
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[78  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 28
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[78  0  0  0  0  0  0  0]]
After activation:
[[78  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[78  0  0  0  0  0  0  0]]

PC = 29
RHM vec cell: read host memory [9][6] and pad with 0s, write to unified buffer [13]. Buffer addr is 78 -> [9][6]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 30
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 31
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 32
RW 2: read weight matrix 2 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 33
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 34
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 35
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 36
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[78  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[78  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 37
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 38
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[78  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 39
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[78  0  0  0  0  0  0  0]]
After activation:
[[78  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[78  0  0  0  0  0  0  0]]

PC = 40
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 41
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 42
ACT: read ACC[0:1], and write to UB[15:16]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 43
WHM vec cell: read unified buffer [15][0], write to host memory [9][6]. Buffer addr is 78 -> [9][6]. Flags? 1
UB[15]: [[1 0 0 0 0 0 0 0]]
HM[9] before: [         0 4294967295 4294967295 4294967295 4294967295          0          0          0]
HM[9]  after: [         0 4294967295 4294967295 4294967295 4294967295          0          1          0]

PC = 44
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 45
MMC: multiply UB[11:12] with a weight, store in ACC[0:1]
MMC matrix: 
[[79  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[79  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[79  0  0  0  0  0  0  0]]

PC = 46
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 47
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[79  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[79  0  0  0  0  0  0  0]]

PC = 48
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[79  0  0  0  0  0  0  0]]
After activation:
[[79  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[79  0  0  0  0  0  0  0]]

PC = 49
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 50
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 51
ACT: read ACC[0:1], and write to UB[15:16]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 52
WHM vec cell: read unified buffer [15][0], write to host memory [9][7]. Buffer addr is 79 -> [9][7]. Flags? 1
UB[15]: [[0 0 0 0 0 0 0 0]]
HM[9] before: [         0 4294967295 4294967295 4294967295 4294967295          0          1          0]
HM[9]  after: [         0 4294967295 4294967295 4294967295 4294967295          0          1          0]

PC = 53
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 54
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 55
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 56
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 57
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[  0 113   0   0   0   0   0   4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[  0 113   0   0   0   0   0   4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 113   0   0   0   0   0   4]]

PC = 58
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[  0 113   0   0   0   0   0   4]]
After activation:
[[  0 113   0   0   0   0   0   4]]
Unconditional jump from 58 to 113. No write to UB.

PC = 113
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 114
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15848     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15848     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 115
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[15848     0     0     0     0     0     0     0]]
After activation:
[[15848     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15848     0     0     0     0     0     0     0]]

PC = 116
RHM vec matrix: read host memory [1981:2011], write to unified buffer [9:39]. Buffer addr is 15848 -> [1981][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  4  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]
[[ 0 10  0  0  0  0  0  4]
 [ 0  4  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 117
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 118
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15848     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15848     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 119
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 120
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[240   0   0   0   0   0   0   0]]
Accumulating with ACC[0:1]
[[15848     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[16088     0     0     0     0     0     0     0]]

PC = 121
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[16088     0     0     0     0     0     0     0]]
After activation:
[[16088     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16088     0     0     0     0     0     0     0]]

PC = 122
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 123
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 124
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 125
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 126
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 127
ACT: read ACC[0:1], and write to UB[13:14]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 128
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 129
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[78  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 130
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[78  0  0  0  0  0  0  0]]
After activation:
[[78  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[78  0  0  0  0  0  0  0]]

PC = 131
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 132
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  4  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[72  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[72  0  0  0  0  0  0  0]]

PC = 133
ACT: read ACC[0:1], and write to UB[15:16]. Activation function: Before activation:
[[72  0  0  0  0  0  0  0]]
After activation:
[[72  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[72  0  0  0  0  0  0  0]]

PC = 134
RW 10: read weight matrix 10 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 135
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  4  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[66  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[66  0  0  0  0  0  0  0]]

PC = 136
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[66  0  0  0  0  0  0  0]]
After activation:
[[66  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[66  0  0  0  0  0  0  0]]

PC = 137
RW 11: read weight matrix 11 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 138
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 139
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 139 to 140. No write to UB.

PC = 140
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 141
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[77  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 142
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 143
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[77  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 144
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 145
RHM vec cell: read host memory [9][5] and pad with 0s, write to unified buffer [17]. Buffer addr is 77 -> [9][5]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 146
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 147
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[78  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[78  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 148
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 149
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[78  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 150
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[78  0  0  0  0  0  0  0]]
After activation:
[[78  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[78  0  0  0  0  0  0  0]]

PC = 151
RHM vec cell: read host memory [9][6] and pad with 0s, write to unified buffer [18]. Buffer addr is 78 -> [9][6]. Flags? 1
[[1. 0. 0. 0. 0. 0. 0. 0.]]

PC = 152
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 153
MMC: multiply UB[17:18] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 154
RW 12: read weight matrix 12 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 155
MMC: multiply UB[18:19] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 1 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 1 0 0 0 0 0 0]]

PC = 156
ACT: read ACC[0:1], and write to UB[19:20]. Activation function: Before activation:
[[0 1 0 0 0 0 0 0]]
After activation:
[[0 1 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 1 0 0 0 0 0 0]]

PC = 157
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 158
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 159
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 160
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 161
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 162
MMC: multiply UB[19:20] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 1 0 0 0 0 0 0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          2]]

PC = 163
ACT: read ACC[0:1], and write to UB[19:20]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          2]]
After activation:
[[4294967295          0          0          0          0          0          0          2]]
Equality check, evaluates to False.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 164
RW 14: read weight matrix 14 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 165
MMC: multiply UB[19:20] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 166
ACT: read ACC[0:1], and write to UB[39:40]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 167
RW 15: read weight matrix 15 into weight FIFO
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [234   0   0   0   0   0   0   1]]

PC = 168
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [234   0   0   0   0   0   0   1]]
MMC output: 
[[234   0   0   0   0   0   0   1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[234   0   0   0   0   0   0   1]]

PC = 169
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 170
MMC: multiply UB[39:40] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[234   0   0   0   0   0   0   1]]
After MMC + ACC: 
[[234   0   0   0   0   0   0   1]]

PC = 171
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[234   0   0   0   0   0   0   1]]
After activation:
[[234   0   0   0   0   0   0   1]]
Branch from 171 to 172. No write to UB.

PC = 172
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 173
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[16088     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[16088     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[16088     0     0     0     0     0     0     0]]

PC = 174
RW 7: read weight matrix 7 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]

PC = 175
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]
MMC output: 
[[4294967056          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[16088     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 176
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[15848     0     0     0     0     0     0     0]]
After activation:
[[15848     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15848     0     0     0     0     0     0     0]]

PC = 177
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 178
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15848     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15848     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 179
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[15848     0     0     0     0     0     0     0]]
After activation:
[[15848     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15848     0     0     0     0     0     0     0]]

PC = 180
WHM vec matrix: read unified buffer [9:39], write to host memory [1981:2011]. Buffer addr is 15848 -> [1981][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  4  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [77  0  0  0  0  0  0  0]
 [78  0  0  0  0  0  0  0]
 [72  0  0  0  0  0  0  0]
 [66  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 181
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[15848     0     0     0     0     0     0     0]]
After activation:
[[15848     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15848     0     0     0     0     0     0     0]]

PC = 182
RW 16: read weight matrix 16 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967169          0          0          0          0          0          1]]

PC = 183
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967169          0          0          0          0          0          1]]
MMC output: 
[[         0 4294967169          0          0          0          0          0          1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[         0 4294967169          0          0          0          0          0          1]]

PC = 184
RHM pc return: create curent pc vector, write to unified buffer [9]. Flags? 2
[[  0. 186.   0.   0.   0.   0.   0.   4.]]

PC = 185
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[         0 4294967169          0          0          0          0          0          1]]
After activation:
[[         0 4294967169          0          0          0          0          0          1]]
Branch from 185 to 59. No write to UB.

PC = 59
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 60
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  4  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[79  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[79  0  0  0  0  0  0  0]]

PC = 61
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: Before activation:
[[79  0  0  0  0  0  0  0]]
After activation:
[[79  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[79  0  0  0  0  0  0  0]]

PC = 62
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 63
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 64
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 65
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 66
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[77  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 67
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 68
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[77  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 69
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 70
RHM vec cell: read host memory [9][5] and pad with 0s, write to unified buffer [13]. Buffer addr is 77 -> [9][5]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 71
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 72
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 73
RW 6: read weight matrix 6 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 74
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 75
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 76
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 77
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[77  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 78
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 79
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[77  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 80
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 81
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 82
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 83
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 84
WHM vec cell: read unified buffer [16][0], write to host memory [9][5]. Buffer addr is 77 -> [9][5]. Flags? 1
UB[16]: [[1 0 0 0 0 0 0 0]]
HM[9] before: [         0 4294967295 4294967295 4294967295 4294967295          0          1          0]
HM[9]  after: [         0 4294967295 4294967295 4294967295 4294967295          1          1          0]

PC = 85
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 86
MMC: multiply UB[11:12] with a weight, store in ACC[0:1]
MMC matrix: 
[[79  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[79  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[79  0  0  0  0  0  0  0]]

PC = 87
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 88
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[79  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[79  0  0  0  0  0  0  0]]

PC = 89
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[79  0  0  0  0  0  0  0]]
After activation:
[[79  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[79  0  0  0  0  0  0  0]]

PC = 90
RHM vec cell: read host memory [9][7] and pad with 0s, write to unified buffer [15]. Buffer addr is 79 -> [9][7]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 91
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 92
MMC: multiply UB[15:16] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 93
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 94
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 95
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[  0 186   0   0   0   0   0   4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[  0 186   0   0   0   0   0   4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 186   0   0   0   0   0   4]]

PC = 96
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[  0 186   0   0   0   0   0   4]]
After activation:
[[  0 186   0   0   0   0   0   4]]
Unconditional jump from 96 to 186. No write to UB.

PC = 186
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 187
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15848     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15848     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 188
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[15848     0     0     0     0     0     0     0]]
After activation:
[[15848     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15848     0     0     0     0     0     0     0]]

PC = 189
RHM vec matrix: read host memory [1981:2011], write to unified buffer [9:39]. Buffer addr is 15848 -> [1981][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  4  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [77  0  0  0  0  0  0  0]
 [78  0  0  0  0  0  0  0]
 [72  0  0  0  0  0  0  0]
 [66  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]
[[ 0 10  0  0  0  0  0  4]
 [ 0  4  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [77  0  0  0  0  0  0  0]
 [78  0  0  0  0  0  0  0]
 [72  0  0  0  0  0  0  0]
 [66  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 190
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 191
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15848     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15848     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 192
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 193
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[240   0   0   0   0   0   0   0]]
Accumulating with ACC[0:1]
[[15848     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[16088     0     0     0     0     0     0     0]]

PC = 194
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[16088     0     0     0     0     0     0     0]]
After activation:
[[16088     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16088     0     0     0     0     0     0     0]]

PC = 195
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 196
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 197
ACT: read ACC[0:1], and write to UB[20:21]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 198
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 199
MMC: multiply UB[15:16] with a weight, store in ACC[0:1]
MMC matrix: 
[[72  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[72  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[72  0  0  0  0  0  0  0]]

PC = 200
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 201
MMC: multiply UB[20:21] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[72  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[72  0  0  0  0  0  0  0]]

PC = 202
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[72  0  0  0  0  0  0  0]]
After activation:
[[72  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[72  0  0  0  0  0  0  0]]

PC = 203
RHM vec cell: read host memory [9][0] and pad with 0s, write to unified buffer [21]. Buffer addr is 72 -> [9][0]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 204
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 205
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[66  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[66  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[66  0  0  0  0  0  0  0]]

PC = 206
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 207
MMC: multiply UB[20:21] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[66  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[66  0  0  0  0  0  0  0]]

PC = 208
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[66  0  0  0  0  0  0  0]]
After activation:
[[66  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[66  0  0  0  0  0  0  0]]

PC = 209
RHM vec cell: read host memory [8][2] and pad with 0s, write to unified buffer [22]. Buffer addr is 66 -> [8][2]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 210
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 211
MMC: multiply UB[20:21] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 212
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 213
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  4  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 214
ACT: read ACC[0:1], and write to UB[23:24]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 215
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 216
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[66  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[66  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[66  0  0  0  0  0  0  0]]

PC = 217
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 218
MMC: multiply UB[23:24] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[66  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[67  0  0  0  0  0  0  0]]

PC = 219
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[67  0  0  0  0  0  0  0]]
After activation:
[[67  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[67  0  0  0  0  0  0  0]]

PC = 220
RHM vec cell: read host memory [8][3] and pad with 0s, write to unified buffer [24]. Buffer addr is 67 -> [8][3]. Flags? 1
[[1. 0. 0. 0. 0. 0. 0. 0.]]

PC = 221
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 222
MMC: multiply UB[22:23] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 223
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 224
RW 17: read weight matrix 17 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 225
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 226
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 226 to 227. No write to UB.

PC = 227
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 228
MMC: multiply UB[11:12] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 229
RW 12: read weight matrix 12 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 230
MMC: multiply UB[24:25] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 1 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 1 0 0 0 0 0 0]]

PC = 231
ACT: read ACC[0:1], and write to UB[25:26]. Activation function: Before activation:
[[0 1 0 0 0 0 0 0]]
After activation:
[[0 1 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 1 0 0 0 0 0 0]]

PC = 232
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 233
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 234
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 235
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 236
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 237
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 3]]

PC = 238
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 239
MMC: multiply UB[25:26] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 1 0 0 0 0 0 0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 3]]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          3]]

PC = 240
ACT: read ACC[0:1], and write to UB[25:26]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          3]]
After activation:
[[4294967295          0          0          0          0          0          0          3]]
Less than check, evaluates to False (4294967295 !< 0).
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 241
RW 14: read weight matrix 14 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 242
MMC: multiply UB[25:26] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 243
ACT: read ACC[0:1], and write to UB[39:40]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 244
RW 18: read weight matrix 18 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967187          0          0          0          0          0          1]]

PC = 245
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967187          0          0          0          0          0          1]]
MMC output: 
[[         0 4294967187          0          0          0          0          0          1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[         0 4294967187          0          0          0          0          0          1]]

PC = 246
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 247
MMC: multiply UB[39:40] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[         0 4294967187          0          0          0          0          0          1]]
After MMC + ACC: 
[[         0 4294967187          0          0          0          0          0          1]]

PC = 248
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[         0 4294967187          0          0          0          0          0          1]]
After activation:
[[         0 4294967187          0          0          0          0          0          1]]
Branch from 248 to 140. No write to UB.

PC = 140
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 141
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[77  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 142
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 143
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[77  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 144
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 145
RHM vec cell: read host memory [9][5] and pad with 0s, write to unified buffer [17]. Buffer addr is 77 -> [9][5]. Flags? 1
[[1. 0. 0. 0. 0. 0. 0. 0.]]

PC = 146
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 147
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[78  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[78  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 148
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 149
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[78  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 150
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[78  0  0  0  0  0  0  0]]
After activation:
[[78  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[78  0  0  0  0  0  0  0]]

PC = 151
RHM vec cell: read host memory [9][6] and pad with 0s, write to unified buffer [18]. Buffer addr is 78 -> [9][6]. Flags? 1
[[1. 0. 0. 0. 0. 0. 0. 0.]]

PC = 152
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 153
MMC: multiply UB[17:18] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 154
RW 12: read weight matrix 12 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 155
MMC: multiply UB[18:19] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 1 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[1 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[1 1 0 0 0 0 0 0]]

PC = 156
ACT: read ACC[0:1], and write to UB[19:20]. Activation function: Before activation:
[[1 1 0 0 0 0 0 0]]
After activation:
[[1 1 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 1 0 0 0 0 0 0]]

PC = 157
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 158
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 159
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 160
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 161
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 162
MMC: multiply UB[19:20] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 1 0 0 0 0 0 0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 163
ACT: read ACC[0:1], and write to UB[19:20]. Activation function: Before activation:
[[0 0 0 0 0 0 0 2]]
After activation:
[[0 0 0 0 0 0 0 2]]
Equality check, evaluates to True.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 164
RW 14: read weight matrix 14 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 165
MMC: multiply UB[19:20] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 1 0]]

PC = 166
ACT: read ACC[0:1], and write to UB[39:40]. Activation function: Before activation:
[[0 0 0 0 0 0 1 0]]
After activation:
[[0 0 0 0 0 0 1 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 1 0]]

PC = 167
RW 15: read weight matrix 15 into weight FIFO
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [234   0   0   0   0   0   0   1]]

PC = 168
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [234   0   0   0   0   0   0   1]]
MMC output: 
[[234   0   0   0   0   0   0   1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[234   0   0   0   0   0   0   1]]

PC = 169
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 170
MMC: multiply UB[39:40] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 1 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Accumulating with ACC[0:1]
[[234   0   0   0   0   0   0   1]]
After MMC + ACC: 
[[234   0   0   0   0   0   1   1]]

PC = 171
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[234   0   0   0   0   0   1   1]]
After activation:
[[234   0   0   0   0   0   1   1]]
Branch from 171 to 406. No write to UB.

PC = 406
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 407
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  4  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[72  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[72  0  0  0  0  0  0  0]]

PC = 408
ACT: read ACC[0:1], and write to UB[37:38]. Activation function: Before activation:
[[72  0  0  0  0  0  0  0]]
After activation:
[[72  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[72  0  0  0  0  0  0  0]]

PC = 409
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 410
MMC: multiply UB[37:38] with a weight, store in ACC[0:1]
MMC matrix: 
[[72  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[72  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[72  0  0  0  0  0  0  0]]

PC = 411
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 412
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 4 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[4 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[72  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[76  0  0  0  0  0  0  0]]

PC = 413
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[76  0  0  0  0  0  0  0]]
After activation:
[[76  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[76  0  0  0  0  0  0  0]]

PC = 414
RHM vec cell: read host memory [9][4] and pad with 0s, write to unified buffer [38]. Buffer addr is 76 -> [9][4]. Flags? 1
[[4.2949673e+09 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00]]

PC = 415
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 416
MMC: multiply UB[38:39] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967295          0          0          0          0          0          0          0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          0]]

PC = 417
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          0]]
After activation:
[[4294967295          0          0          0          0          0          0          0]]
Normal activation.
After branch/comparison/jump:
[[4294967295          0          0          0          0          0          0          0]]

PC = 418
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 419
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 0 10  0  0  0  0  0  4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[ 0 10  0  0  0  0  0  4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 10  0  0  0  0  0  4]]

PC = 420
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 10  0  0  0  0  0  4]]
After activation:
[[ 0 10  0  0  0  0  0  4]]
Unconditional jump from 420 to 10. No write to UB.

PC = 10
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 11
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967295          0          0          0          0          0          0          0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          0]]

PC = 12
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          0]]
After activation:
[[4294967295          0          0          0          0          0          0          0]]
Normal activation.
After branch/comparison/jump:
[[4294967295          0          0          0          0          0          0          0]]

PC = 13
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 14
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967295          0          0          0          0          0          0          0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          0]]

PC = 15
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          0]]
After activation:
[[4294967295          0          0          0          0          0          0          0]]
Normal activation.
After branch/comparison/jump:
[[4294967295          0          0          0          0          0          0          0]]

PC = 16
WHM standard matrix: read unified buffer [8:9], write to host memory [1:2]. Flags? 0
[[4294967295          0          0          0          0          0          0          0]]

PC = 17
H A L T
MMC Count: 102
HM Count: 23
ACT Count: 68
RW Count: 102
RW Reloads: 73
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 10, 11, 12, 13, 14, 15, 16, 17]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/bfs passed
test/mullifier_examples/bfsbig/
Simulation terminated at cycle 193
PC = 0
RHM standard matrix: read host memory [0:7], write to unified buffer [0:7]. Flags? 0
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]
 [    997240          0          0          0          0          0          0          0]
 [         0          0          1          0          1          0          1 4294967295]
 [     32767          1          5          0         56     915700     882932     948470]
 [    948469     948468         24         48         56        240          0          0]]

PC = 1
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 32767      1      5      0     56 915700 882932 948470]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 28: read weight matrix 28 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 4
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 32767      1      5      0     56 915700 882932 948470]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 5 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 5 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 5 0 0 0 0 0 0]]
After activation:
[[0 5 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 5 0 0 0 0 0 0]]

PC = 6
RW 29: read weight matrix 29 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 87  0  0  0  0  0  1]]

PC = 7
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 87  0  0  0  0  0  1]]
MMC output: 
[[ 0 87  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 87  0  0  0  0  0  1]]

PC = 8
RHM pc return: create curent pc vector, write to unified buffer [9]. Flags? 2
[[ 0. 10.  0.  0.  0.  0.  0.  4.]]

PC = 9
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 87  0  0  0  0  0  1]]
After activation:
[[ 0 87  0  0  0  0  0  1]]
Branch from 9 to 97. No write to UB.

PC = 97
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 98
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[997240      0      0      0      0      0      0      0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[997240      0      0      0      0      0      0      0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[997240      0      0      0      0      0      0      0]]

PC = 99
RW 7: read weight matrix 7 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]

PC = 100
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[948469 948468     24     48     56    240      0      0]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]
MMC output: 
[[4294967056          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[997240      0      0      0      0      0      0      0]]
After MMC + ACC: 
[[997000      0      0      0      0      0      0      0]]

PC = 101
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[997000      0      0      0      0      0      0      0]]
After activation:
[[997000      0      0      0      0      0      0      0]]
Normal activation.
After branch/comparison/jump:
[[997000      0      0      0      0      0      0      0]]

PC = 102
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 103
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[997000      0      0      0      0      0      0      0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[997000      0      0      0      0      0      0      0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[997000      0      0      0      0      0      0      0]]

PC = 104
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[997000      0      0      0      0      0      0      0]]
After activation:
[[997000      0      0      0      0      0      0      0]]
Normal activation.
After branch/comparison/jump:
[[997000      0      0      0      0      0      0      0]]

PC = 105
WHM vec matrix: read unified buffer [9:39], write to host memory [124625:124655]. Buffer addr is 997000 -> [124625][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  5  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 106
H A L T
MMC Count: 6
HM Count: 3
ACT Count: 4
RW Count: 6
RW Reloads: 6
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/bfsbig passed
test/mullifier_examples/bfstiny/
Simulation terminated at cycle 2752
PC = 0
RHM standard matrix: read host memory [0:7], write to unified buffer [0:7]. Flags? 0
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]
 [     16472          0          0          0          0          0          0          0]
 [         0          0          1          0          1          0          1 4294967295]
 [        32          1          5          0         56        403        370        438]
 [       437        436         24         48         56        240          0          0]]

PC = 1
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 32   1   5   0  56 403 370 438]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 28: read weight matrix 28 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 4
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 32   1   5   0  56 403 370 438]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 5 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 5 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 5 0 0 0 0 0 0]]
After activation:
[[0 5 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 5 0 0 0 0 0 0]]

PC = 6
RW 29: read weight matrix 29 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 87  0  0  0  0  0  1]]

PC = 7
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 87  0  0  0  0  0  1]]
MMC output: 
[[ 0 87  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 87  0  0  0  0  0  1]]

PC = 8
RHM pc return: create curent pc vector, write to unified buffer [9]. Flags? 2
[[ 0. 10.  0.  0.  0.  0.  0.  4.]]

PC = 9
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 87  0  0  0  0  0  1]]
After activation:
[[ 0 87  0  0  0  0  0  1]]
Branch from 9 to 97. No write to UB.

PC = 97
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 98
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[16472     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[16472     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[16472     0     0     0     0     0     0     0]]

PC = 99
RW 7: read weight matrix 7 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]

PC = 100
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[437 436  24  48  56 240   0   0]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]
MMC output: 
[[4294967056          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[16472     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[16232     0     0     0     0     0     0     0]]

PC = 101
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[16232     0     0     0     0     0     0     0]]
After activation:
[[16232     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16232     0     0     0     0     0     0     0]]

PC = 102
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 103
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[16232     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[16232     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[16232     0     0     0     0     0     0     0]]

PC = 104
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[16232     0     0     0     0     0     0     0]]
After activation:
[[16232     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16232     0     0     0     0     0     0     0]]

PC = 105
WHM vec matrix: read unified buffer [9:39], write to host memory [2029:2059]. Buffer addr is 16232 -> [2029][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  5  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 106
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 107
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 5 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 108
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 109
RW 8: read weight matrix 8 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967201          0          0          0          0          0          1]]

PC = 110
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967201          0          0          0          0          0          1]]
MMC output: 
[[         0 4294967201          0          0          0          0          0          1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[         0 4294967201          0          0          0          0          0          1]]

PC = 111
RHM pc return: create curent pc vector, write to unified buffer [9]. Flags? 2
[[  0. 113.   0.   0.   0.   0.   0.   4.]]

PC = 112
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[         0 4294967201          0          0          0          0          0          1]]
After activation:
[[         0 4294967201          0          0          0          0          0          1]]
Branch from 112 to 18. No write to UB.

PC = 18
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 19
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 32   1   5   0  56 403 370 438]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[438   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[438   0   0   0   0   0   0   0]]

PC = 20
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: Before activation:
[[438   0   0   0   0   0   0   0]]
After activation:
[[438   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[438   0   0   0   0   0   0   0]]

PC = 21
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 22
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[437 436  24  48  56 240   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[437   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[437   0   0   0   0   0   0   0]]

PC = 23
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[437   0   0   0   0   0   0   0]]
After activation:
[[437   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[437   0   0   0   0   0   0   0]]

PC = 24
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 25
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[437   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[437   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[437   0   0   0   0   0   0   0]]

PC = 26
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 27
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[437   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[437   0   0   0   0   0   0   0]]

PC = 28
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[437   0   0   0   0   0   0   0]]
After activation:
[[437   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[437   0   0   0   0   0   0   0]]

PC = 29
RHM vec cell: read host memory [54][5] and pad with 0s, write to unified buffer [13]. Buffer addr is 437 -> [54][5]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 30
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 31
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 32
RW 2: read weight matrix 2 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 33
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 34
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 35
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 36
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[437   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[437   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[437   0   0   0   0   0   0   0]]

PC = 37
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 38
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[437   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[437   0   0   0   0   0   0   0]]

PC = 39
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[437   0   0   0   0   0   0   0]]
After activation:
[[437   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[437   0   0   0   0   0   0   0]]

PC = 40
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 41
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 42
ACT: read ACC[0:1], and write to UB[15:16]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 43
WHM vec cell: read unified buffer [15][0], write to host memory [54][5]. Buffer addr is 437 -> [54][5]. Flags? 1
UB[15]: [[1 0 0 0 0 0 0 0]]
HM[54] before: [4294967295 4294967295 4294967295 4294967295          0          0          0          0]
HM[54]  after: [4294967295 4294967295 4294967295 4294967295          0          1          0          0]

PC = 44
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 45
MMC: multiply UB[11:12] with a weight, store in ACC[0:1]
MMC matrix: 
[[438   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[438   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[438   0   0   0   0   0   0   0]]

PC = 46
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 47
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[438   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[438   0   0   0   0   0   0   0]]

PC = 48
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[438   0   0   0   0   0   0   0]]
After activation:
[[438   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[438   0   0   0   0   0   0   0]]

PC = 49
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 50
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 51
ACT: read ACC[0:1], and write to UB[15:16]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 52
WHM vec cell: read unified buffer [15][0], write to host memory [54][6]. Buffer addr is 438 -> [54][6]. Flags? 1
UB[15]: [[0 0 0 0 0 0 0 0]]
HM[54] before: [4294967295 4294967295 4294967295 4294967295          0          1          0          0]
HM[54]  after: [4294967295 4294967295 4294967295 4294967295          0          1          0          0]

PC = 53
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 54
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 55
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 56
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 57
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[  0 113   0   0   0   0   0   4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[  0 113   0   0   0   0   0   4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 113   0   0   0   0   0   4]]

PC = 58
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[  0 113   0   0   0   0   0   4]]
After activation:
[[  0 113   0   0   0   0   0   4]]
Unconditional jump from 58 to 113. No write to UB.

PC = 113
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 114
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[16232     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[16232     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[16232     0     0     0     0     0     0     0]]

PC = 115
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[16232     0     0     0     0     0     0     0]]
After activation:
[[16232     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16232     0     0     0     0     0     0     0]]

PC = 116
RHM vec matrix: read host memory [2029:2059], write to unified buffer [9:39]. Buffer addr is 16232 -> [2029][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  5  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]
[[ 0 10  0  0  0  0  0  4]
 [ 0  5  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 117
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 118
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[16232     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[16232     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[16232     0     0     0     0     0     0     0]]

PC = 119
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 120
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[437 436  24  48  56 240   0   0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[240   0   0   0   0   0   0   0]]
Accumulating with ACC[0:1]
[[16232     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[16472     0     0     0     0     0     0     0]]

PC = 121
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[16472     0     0     0     0     0     0     0]]
After activation:
[[16472     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16472     0     0     0     0     0     0     0]]

PC = 122
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 123
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 124
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 125
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 126
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[437 436  24  48  56 240   0   0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[436   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[436   0   0   0   0   0   0   0]]

PC = 127
ACT: read ACC[0:1], and write to UB[13:14]. Activation function: Before activation:
[[436   0   0   0   0   0   0   0]]
After activation:
[[436   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[436   0   0   0   0   0   0   0]]

PC = 128
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 129
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[437 436  24  48  56 240   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[437   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[437   0   0   0   0   0   0   0]]

PC = 130
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[437   0   0   0   0   0   0   0]]
After activation:
[[437   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[437   0   0   0   0   0   0   0]]

PC = 131
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 132
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 32   1   5   0  56 403 370 438]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[403   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[403   0   0   0   0   0   0   0]]

PC = 133
ACT: read ACC[0:1], and write to UB[15:16]. Activation function: Before activation:
[[403   0   0   0   0   0   0   0]]
After activation:
[[403   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[403   0   0   0   0   0   0   0]]

PC = 134
RW 10: read weight matrix 10 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 135
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 32   1   5   0  56 403 370 438]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[370   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[370   0   0   0   0   0   0   0]]

PC = 136
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[370   0   0   0   0   0   0   0]]
After activation:
[[370   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[370   0   0   0   0   0   0   0]]

PC = 137
RW 11: read weight matrix 11 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 138
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 139
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 139 to 140. No write to UB.

PC = 140
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 141
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[436   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[436   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[436   0   0   0   0   0   0   0]]

PC = 142
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 143
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[436   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[436   0   0   0   0   0   0   0]]

PC = 144
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[436   0   0   0   0   0   0   0]]
After activation:
[[436   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[436   0   0   0   0   0   0   0]]

PC = 145
RHM vec cell: read host memory [54][4] and pad with 0s, write to unified buffer [17]. Buffer addr is 436 -> [54][4]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 146
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 147
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[437   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[437   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[437   0   0   0   0   0   0   0]]

PC = 148
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 149
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[437   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[437   0   0   0   0   0   0   0]]

PC = 150
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[437   0   0   0   0   0   0   0]]
After activation:
[[437   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[437   0   0   0   0   0   0   0]]

PC = 151
RHM vec cell: read host memory [54][5] and pad with 0s, write to unified buffer [18]. Buffer addr is 437 -> [54][5]. Flags? 1
[[1. 0. 0. 0. 0. 0. 0. 0.]]

PC = 152
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 153
MMC: multiply UB[17:18] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 154
RW 12: read weight matrix 12 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 155
MMC: multiply UB[18:19] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 1 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 1 0 0 0 0 0 0]]

PC = 156
ACT: read ACC[0:1], and write to UB[19:20]. Activation function: Before activation:
[[0 1 0 0 0 0 0 0]]
After activation:
[[0 1 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 1 0 0 0 0 0 0]]

PC = 157
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 158
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 159
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 160
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 161
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 162
MMC: multiply UB[19:20] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 1 0 0 0 0 0 0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          2]]

PC = 163
ACT: read ACC[0:1], and write to UB[19:20]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          2]]
After activation:
[[4294967295          0          0          0          0          0          0          2]]
Equality check, evaluates to False.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 164
RW 14: read weight matrix 14 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 165
MMC: multiply UB[19:20] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 166
ACT: read ACC[0:1], and write to UB[39:40]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 167
RW 15: read weight matrix 15 into weight FIFO
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [234   0   0   0   0   0   0   1]]

PC = 168
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [234   0   0   0   0   0   0   1]]
MMC output: 
[[234   0   0   0   0   0   0   1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[234   0   0   0   0   0   0   1]]

PC = 169
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 170
MMC: multiply UB[39:40] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[234   0   0   0   0   0   0   1]]
After MMC + ACC: 
[[234   0   0   0   0   0   0   1]]

PC = 171
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[234   0   0   0   0   0   0   1]]
After activation:
[[234   0   0   0   0   0   0   1]]
Branch from 171 to 172. No write to UB.

PC = 172
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 173
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[16472     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[16472     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[16472     0     0     0     0     0     0     0]]

PC = 174
RW 7: read weight matrix 7 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]

PC = 175
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[437 436  24  48  56 240   0   0]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]
MMC output: 
[[4294967056          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[16472     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[16232     0     0     0     0     0     0     0]]

PC = 176
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[16232     0     0     0     0     0     0     0]]
After activation:
[[16232     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16232     0     0     0     0     0     0     0]]

PC = 177
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 178
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[16232     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[16232     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[16232     0     0     0     0     0     0     0]]

PC = 179
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[16232     0     0     0     0     0     0     0]]
After activation:
[[16232     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16232     0     0     0     0     0     0     0]]

PC = 180
WHM vec matrix: read unified buffer [9:39], write to host memory [2029:2059]. Buffer addr is 16232 -> [2029][0]. Flags? 1
[[  0  10   0   0   0   0   0   4]
 [  0   5   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [436   0   0   0   0   0   0   0]
 [437   0   0   0   0   0   0   0]
 [403   0   0   0   0   0   0   0]
 [370   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  1   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]]

PC = 181
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[16232     0     0     0     0     0     0     0]]
After activation:
[[16232     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16232     0     0     0     0     0     0     0]]

PC = 182
RW 16: read weight matrix 16 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967169          0          0          0          0          0          1]]

PC = 183
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967169          0          0          0          0          0          1]]
MMC output: 
[[         0 4294967169          0          0          0          0          0          1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[         0 4294967169          0          0          0          0          0          1]]

PC = 184
RHM pc return: create curent pc vector, write to unified buffer [9]. Flags? 2
[[  0. 186.   0.   0.   0.   0.   0.   4.]]

PC = 185
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[         0 4294967169          0          0          0          0          0          1]]
After activation:
[[         0 4294967169          0          0          0          0          0          1]]
Branch from 185 to 59. No write to UB.

PC = 59
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 60
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 32   1   5   0  56 403 370 438]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[438   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[438   0   0   0   0   0   0   0]]

PC = 61
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: Before activation:
[[438   0   0   0   0   0   0   0]]
After activation:
[[438   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[438   0   0   0   0   0   0   0]]

PC = 62
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 63
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[437 436  24  48  56 240   0   0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[436   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[436   0   0   0   0   0   0   0]]

PC = 64
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[436   0   0   0   0   0   0   0]]
After activation:
[[436   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[436   0   0   0   0   0   0   0]]

PC = 65
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 66
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[436   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[436   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[436   0   0   0   0   0   0   0]]

PC = 67
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 68
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[436   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[436   0   0   0   0   0   0   0]]

PC = 69
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[436   0   0   0   0   0   0   0]]
After activation:
[[436   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[436   0   0   0   0   0   0   0]]

PC = 70
RHM vec cell: read host memory [54][4] and pad with 0s, write to unified buffer [13]. Buffer addr is 436 -> [54][4]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 71
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 72
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 73
RW 6: read weight matrix 6 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 74
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 75
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 76
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 77
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[436   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[436   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[436   0   0   0   0   0   0   0]]

PC = 78
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 79
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[436   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[436   0   0   0   0   0   0   0]]

PC = 80
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[436   0   0   0   0   0   0   0]]
After activation:
[[436   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[436   0   0   0   0   0   0   0]]

PC = 81
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 82
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 83
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 84
WHM vec cell: read unified buffer [16][0], write to host memory [54][4]. Buffer addr is 436 -> [54][4]. Flags? 1
UB[16]: [[1 0 0 0 0 0 0 0]]
HM[54] before: [4294967295 4294967295 4294967295 4294967295          0          1          0          0]
HM[54]  after: [4294967295 4294967295 4294967295 4294967295          1          1          0          0]

PC = 85
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 86
MMC: multiply UB[11:12] with a weight, store in ACC[0:1]
MMC matrix: 
[[438   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[438   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[438   0   0   0   0   0   0   0]]

PC = 87
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 88
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[438   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[438   0   0   0   0   0   0   0]]

PC = 89
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[438   0   0   0   0   0   0   0]]
After activation:
[[438   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[438   0   0   0   0   0   0   0]]

PC = 90
RHM vec cell: read host memory [54][6] and pad with 0s, write to unified buffer [15]. Buffer addr is 438 -> [54][6]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 91
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 92
MMC: multiply UB[15:16] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 93
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 94
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 95
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[  0 186   0   0   0   0   0   4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[  0 186   0   0   0   0   0   4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 186   0   0   0   0   0   4]]

PC = 96
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[  0 186   0   0   0   0   0   4]]
After activation:
[[  0 186   0   0   0   0   0   4]]
Unconditional jump from 96 to 186. No write to UB.

PC = 186
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 187
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[16232     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[16232     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[16232     0     0     0     0     0     0     0]]

PC = 188
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[16232     0     0     0     0     0     0     0]]
After activation:
[[16232     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16232     0     0     0     0     0     0     0]]

PC = 189
RHM vec matrix: read host memory [2029:2059], write to unified buffer [9:39]. Buffer addr is 16232 -> [2029][0]. Flags? 1
[[  0  10   0   0   0   0   0   4]
 [  0   5   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [436   0   0   0   0   0   0   0]
 [437   0   0   0   0   0   0   0]
 [403   0   0   0   0   0   0   0]
 [370   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  1   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]]
[[  0  10   0   0   0   0   0   4]
 [  0   5   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [436   0   0   0   0   0   0   0]
 [437   0   0   0   0   0   0   0]
 [403   0   0   0   0   0   0   0]
 [370   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  1   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]]

PC = 190
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 191
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[16232     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[16232     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[16232     0     0     0     0     0     0     0]]

PC = 192
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 193
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[437 436  24  48  56 240   0   0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[240   0   0   0   0   0   0   0]]
Accumulating with ACC[0:1]
[[16232     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[16472     0     0     0     0     0     0     0]]

PC = 194
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[16472     0     0     0     0     0     0     0]]
After activation:
[[16472     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16472     0     0     0     0     0     0     0]]

PC = 195
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 196
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 197
ACT: read ACC[0:1], and write to UB[20:21]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 198
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 199
MMC: multiply UB[15:16] with a weight, store in ACC[0:1]
MMC matrix: 
[[403   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[403   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[403   0   0   0   0   0   0   0]]

PC = 200
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 201
MMC: multiply UB[20:21] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[403   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[403   0   0   0   0   0   0   0]]

PC = 202
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[403   0   0   0   0   0   0   0]]
After activation:
[[403   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[403   0   0   0   0   0   0   0]]

PC = 203
RHM vec cell: read host memory [50][3] and pad with 0s, write to unified buffer [21]. Buffer addr is 403 -> [50][3]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 204
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 205
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[370   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[370   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[370   0   0   0   0   0   0   0]]

PC = 206
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 207
MMC: multiply UB[20:21] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[370   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[370   0   0   0   0   0   0   0]]

PC = 208
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[370   0   0   0   0   0   0   0]]
After activation:
[[370   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[370   0   0   0   0   0   0   0]]

PC = 209
RHM vec cell: read host memory [46][2] and pad with 0s, write to unified buffer [22]. Buffer addr is 370 -> [46][2]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 210
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 211
MMC: multiply UB[20:21] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 212
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 213
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 32   1   5   0  56 403 370 438]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 214
ACT: read ACC[0:1], and write to UB[23:24]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 215
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 216
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[370   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[370   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[370   0   0   0   0   0   0   0]]

PC = 217
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 218
MMC: multiply UB[23:24] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[370   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[371   0   0   0   0   0   0   0]]

PC = 219
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[371   0   0   0   0   0   0   0]]
After activation:
[[371   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[371   0   0   0   0   0   0   0]]

PC = 220
RHM vec cell: read host memory [46][3] and pad with 0s, write to unified buffer [24]. Buffer addr is 371 -> [46][3]. Flags? 1
[[20.  0.  0.  0.  0.  0.  0.  0.]]

PC = 221
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 222
MMC: multiply UB[22:23] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 223
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 224
RW 17: read weight matrix 17 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 225
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 226
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 226 to 227. No write to UB.

PC = 227
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 228
MMC: multiply UB[11:12] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 229
RW 12: read weight matrix 12 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 230
MMC: multiply UB[24:25] with a weight, store in ACC[0:1]
MMC matrix: 
[[20  0  0  0  0  0  0  0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[ 0 20  0  0  0  0  0  0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[ 0 20  0  0  0  0  0  0]]

PC = 231
ACT: read ACC[0:1], and write to UB[25:26]. Activation function: Before activation:
[[ 0 20  0  0  0  0  0  0]]
After activation:
[[ 0 20  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[ 0 20  0  0  0  0  0  0]]

PC = 232
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 233
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 234
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 235
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 236
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 237
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 3]]

PC = 238
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 239
MMC: multiply UB[25:26] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 0 20  0  0  0  0  0  0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294967276          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 3]]
After MMC + ACC: 
[[4294967276          0          0          0          0          0          0          3]]

PC = 240
ACT: read ACC[0:1], and write to UB[25:26]. Activation function: Before activation:
[[4294967276          0          0          0          0          0          0          3]]
After activation:
[[4294967276          0          0          0          0          0          0          3]]
Less than check, evaluates to False (4294967276 !< 0).
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 241
RW 14: read weight matrix 14 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 242
MMC: multiply UB[25:26] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 243
ACT: read ACC[0:1], and write to UB[39:40]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 244
RW 18: read weight matrix 18 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967187          0          0          0          0          0          1]]

PC = 245
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967187          0          0          0          0          0          1]]
MMC output: 
[[         0 4294967187          0          0          0          0          0          1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[         0 4294967187          0          0          0          0          0          1]]

PC = 246
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 247
MMC: multiply UB[39:40] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[         0 4294967187          0          0          0          0          0          1]]
After MMC + ACC: 
[[         0 4294967187          0          0          0          0          0          1]]

PC = 248
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[         0 4294967187          0          0          0          0          0          1]]
After activation:
[[         0 4294967187          0          0          0          0          0          1]]
Branch from 248 to 140. No write to UB.

PC = 140
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 141
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[436   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[436   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[436   0   0   0   0   0   0   0]]

PC = 142
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 143
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[436   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[436   0   0   0   0   0   0   0]]

PC = 144
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[436   0   0   0   0   0   0   0]]
After activation:
[[436   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[436   0   0   0   0   0   0   0]]

PC = 145
RHM vec cell: read host memory [54][4] and pad with 0s, write to unified buffer [17]. Buffer addr is 436 -> [54][4]. Flags? 1
[[1. 0. 0. 0. 0. 0. 0. 0.]]

PC = 146
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 147
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[437   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[437   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[437   0   0   0   0   0   0   0]]

PC = 148
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 149
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[437   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[437   0   0   0   0   0   0   0]]

PC = 150
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[437   0   0   0   0   0   0   0]]
After activation:
[[437   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[437   0   0   0   0   0   0   0]]

PC = 151
RHM vec cell: read host memory [54][5] and pad with 0s, write to unified buffer [18]. Buffer addr is 437 -> [54][5]. Flags? 1
[[1. 0. 0. 0. 0. 0. 0. 0.]]

PC = 152
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 153
MMC: multiply UB[17:18] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 154
RW 12: read weight matrix 12 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 155
MMC: multiply UB[18:19] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 1 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[1 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[1 1 0 0 0 0 0 0]]

PC = 156
ACT: read ACC[0:1], and write to UB[19:20]. Activation function: Before activation:
[[1 1 0 0 0 0 0 0]]
After activation:
[[1 1 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 1 0 0 0 0 0 0]]

PC = 157
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 158
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 159
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 160
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 161
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 162
MMC: multiply UB[19:20] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 1 0 0 0 0 0 0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 163
ACT: read ACC[0:1], and write to UB[19:20]. Activation function: Before activation:
[[0 0 0 0 0 0 0 2]]
After activation:
[[0 0 0 0 0 0 0 2]]
Equality check, evaluates to True.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 164
RW 14: read weight matrix 14 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 165
MMC: multiply UB[19:20] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 1 0]]

PC = 166
ACT: read ACC[0:1], and write to UB[39:40]. Activation function: Before activation:
[[0 0 0 0 0 0 1 0]]
After activation:
[[0 0 0 0 0 0 1 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 1 0]]

PC = 167
RW 15: read weight matrix 15 into weight FIFO
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [234   0   0   0   0   0   0   1]]

PC = 168
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [234   0   0   0   0   0   0   1]]
MMC output: 
[[234   0   0   0   0   0   0   1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[234   0   0   0   0   0   0   1]]

PC = 169
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 170
MMC: multiply UB[39:40] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 1 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Accumulating with ACC[0:1]
[[234   0   0   0   0   0   0   1]]
After MMC + ACC: 
[[234   0   0   0   0   0   1   1]]

PC = 171
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[234   0   0   0   0   0   1   1]]
After activation:
[[234   0   0   0   0   0   1   1]]
Branch from 171 to 406. No write to UB.

PC = 406
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 407
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 32   1   5   0  56 403 370 438]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[403   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[403   0   0   0   0   0   0   0]]

PC = 408
ACT: read ACC[0:1], and write to UB[37:38]. Activation function: Before activation:
[[403   0   0   0   0   0   0   0]]
After activation:
[[403   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[403   0   0   0   0   0   0   0]]

PC = 409
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 410
MMC: multiply UB[37:38] with a weight, store in ACC[0:1]
MMC matrix: 
[[403   0   0   0   0   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[403   0   0   0   0   0   0   0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[403   0   0   0   0   0   0   0]]

PC = 411
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 412
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 5 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[5 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[403   0   0   0   0   0   0   0]]
After MMC + ACC: 
[[408   0   0   0   0   0   0   0]]

PC = 413
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[408   0   0   0   0   0   0   0]]
After activation:
[[408   0   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[408   0   0   0   0   0   0   0]]

PC = 414
RHM vec cell: read host memory [51][0] and pad with 0s, write to unified buffer [38]. Buffer addr is 408 -> [51][0]. Flags? 1
[[4.2949673e+09 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00]]

PC = 415
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 416
MMC: multiply UB[38:39] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967295          0          0          0          0          0          0          0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          0]]

PC = 417
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          0]]
After activation:
[[4294967295          0          0          0          0          0          0          0]]
Normal activation.
After branch/comparison/jump:
[[4294967295          0          0          0          0          0          0          0]]

PC = 418
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 419
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 0 10  0  0  0  0  0  4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[ 0 10  0  0  0  0  0  4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 10  0  0  0  0  0  4]]

PC = 420
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 10  0  0  0  0  0  4]]
After activation:
[[ 0 10  0  0  0  0  0  4]]
Unconditional jump from 420 to 10. No write to UB.

PC = 10
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 11
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967295          0          0          0          0          0          0          0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          0]]

PC = 12
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          0]]
After activation:
[[4294967295          0          0          0          0          0          0          0]]
Normal activation.
After branch/comparison/jump:
[[4294967295          0          0          0          0          0          0          0]]

PC = 13
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 14
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967295          0          0          0          0          0          0          0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          0]]

PC = 15
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          0]]
After activation:
[[4294967295          0          0          0          0          0          0          0]]
Normal activation.
After branch/comparison/jump:
[[4294967295          0          0          0          0          0          0          0]]

PC = 16
WHM standard matrix: read unified buffer [8:9], write to host memory [1:2]. Flags? 0
[[4294967295          0          0          0          0          0          0          0]]

PC = 17
H A L T
MMC Count: 102
HM Count: 23
ACT Count: 68
RW Count: 102
RW Reloads: 73
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 10, 11, 12, 13, 14, 15, 16, 17]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/bfstiny passed
test/mullifier_examples/insertion_sort10/
Simulation terminated at cycle 419
PC = 0
RHM standard matrix: read host memory [0:6], write to unified buffer [0:6]. Flags? 0
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]
 [     16064          0          0          0          0          0          0          0]
 [        10          1 4294967295          1          0          0          1          0]
 [        48         24        160          0          0          0          0          0]]

PC = 1
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: padded with 1 0-rows
Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 2
RW 22: read weight matrix 22 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 8 0 0 0 0 0 1]]

PC = 3
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 8 0 0 0 0 0 1]]
MMC output: 
[[0 8 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 8 0 0 0 0 0 1]]

PC = 4
RHM pc return: create curent pc vector, write to unified buffer [8]. Flags? 2
[[0. 6. 0. 0. 0. 0. 0. 4.]]

PC = 5
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 8 0 0 0 0 0 1]]
After activation:
[[0 8 0 0 0 0 0 1]]
Branch from 5 to 14. No write to UB.

PC = 14
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 15
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[        10          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 16
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 17
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 18
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 19
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 19 to 20. No write to UB.

PC = 20
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 21
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 22
RW 3: read weight matrix 3 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 23
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[        10          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[ 0 10  0  0  0  0  0  0]]
Accumulating with ACC[0:1]
[[1 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[ 1 10  0  0  0  0  0  0]]

PC = 24
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[ 1 10  0  0  0  0  0  0]]
After activation:
[[ 1 10  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[ 1 10  0  0  0  0  0  0]]

PC = 25
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 26
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 27
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 28
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 29
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 30
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 3]]

PC = 31
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 32
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 1 10  0  0  0  0  0  0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294967287          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 3]]
After MMC + ACC: 
[[4294967287          0          0          0          0          0          0          3]]

PC = 33
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[4294967287          0          0          0          0          0          0          3]]
After activation:
[[4294967287          0          0          0          0          0          0          3]]
Less than check, evaluates to False (4294967287 !< 0).
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 34
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 35
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 36
ACT: read ACC[0:1], and write to UB[28:29]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 37
RW 6: read weight matrix 6 into weight FIFO
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 181   0   0   0   0   0   1]]

PC = 38
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 181   0   0   0   0   0   1]]
MMC output: 
[[  0 181   0   0   0   0   0   1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 181   0   0   0   0   0   1]]

PC = 39
RW 7: read weight matrix 7 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 40
MMC: multiply UB[28:29] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[  0 181   0   0   0   0   0   1]]
After MMC + ACC: 
[[  0 181   0   0   0   0   0   1]]

PC = 41
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[  0 181   0   0   0   0   0   1]]
After activation:
[[  0 181   0   0   0   0   0   1]]
Branch from 41 to 223. No write to UB.

PC = 223
RW 10: read weight matrix 10 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 224
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[        10          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 225
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 226
RW 7: read weight matrix 7 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 227
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 6 0 0 0 0 0 4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 6 0 0 0 0 0 4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 6 0 0 0 0 0 4]]

PC = 228
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 6 0 0 0 0 0 4]]
After activation:
[[0 6 0 0 0 0 0 4]]
Unconditional jump from 228 to 6. No write to UB.

PC = 6
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 7
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 8
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 9
RW 23: read weight matrix 23 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 10
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[        10          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 11
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 12
WHM standard matrix: read unified buffer [7:8], write to host memory [1:2]. Flags? 0
[[0 0 0 0 0 0 0 0]]

PC = 13
H A L T
MMC Count: 16
HM Count: 3
ACT Count: 12
RW Count: 16
RW Reloads: 13
PC history:
 [0, 1, 2, 3, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 223, 224, 225, 226, 227, 228, 6, 7, 8, 9, 10, 11, 12, 13]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/insertion_sort10 passed
test/mullifier_examples/insertion_sort100/
Simulation terminated at cycle 419
PC = 0
RHM standard matrix: read host memory [0:6], write to unified buffer [0:6]. Flags? 0
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]
 [     16152          0          0          0          0          0          0          0]
 [       100          1 4294967295          1          0          0          1          0]
 [        48         24        160          0          0          0          0          0]]

PC = 1
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: padded with 1 0-rows
Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 2
RW 22: read weight matrix 22 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 8 0 0 0 0 0 1]]

PC = 3
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 8 0 0 0 0 0 1]]
MMC output: 
[[0 8 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 8 0 0 0 0 0 1]]

PC = 4
RHM pc return: create curent pc vector, write to unified buffer [8]. Flags? 2
[[0. 6. 0. 0. 0. 0. 0. 4.]]

PC = 5
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 8 0 0 0 0 0 1]]
After activation:
[[0 8 0 0 0 0 0 1]]
Branch from 5 to 14. No write to UB.

PC = 14
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 15
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[       100          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 16
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 17
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 18
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 19
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 19 to 20. No write to UB.

PC = 20
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 21
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 22
RW 3: read weight matrix 3 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 23
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[       100          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[  0 100   0   0   0   0   0   0]]
Accumulating with ACC[0:1]
[[1 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[  1 100   0   0   0   0   0   0]]

PC = 24
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[  1 100   0   0   0   0   0   0]]
After activation:
[[  1 100   0   0   0   0   0   0]]
Normal activation.
After branch/comparison/jump:
[[  1 100   0   0   0   0   0   0]]

PC = 25
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 26
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 27
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 28
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 29
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 30
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 3]]

PC = 31
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 32
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[  1 100   0   0   0   0   0   0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294967197          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 3]]
After MMC + ACC: 
[[4294967197          0          0          0          0          0          0          3]]

PC = 33
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[4294967197          0          0          0          0          0          0          3]]
After activation:
[[4294967197          0          0          0          0          0          0          3]]
Less than check, evaluates to False (4294967197 !< 0).
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 34
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 35
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 36
ACT: read ACC[0:1], and write to UB[28:29]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 37
RW 6: read weight matrix 6 into weight FIFO
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 181   0   0   0   0   0   1]]

PC = 38
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 181   0   0   0   0   0   1]]
MMC output: 
[[  0 181   0   0   0   0   0   1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 181   0   0   0   0   0   1]]

PC = 39
RW 7: read weight matrix 7 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 40
MMC: multiply UB[28:29] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[  0 181   0   0   0   0   0   1]]
After MMC + ACC: 
[[  0 181   0   0   0   0   0   1]]

PC = 41
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[  0 181   0   0   0   0   0   1]]
After activation:
[[  0 181   0   0   0   0   0   1]]
Branch from 41 to 223. No write to UB.

PC = 223
RW 10: read weight matrix 10 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 224
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[       100          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 225
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 226
RW 7: read weight matrix 7 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 227
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 6 0 0 0 0 0 4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 6 0 0 0 0 0 4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 6 0 0 0 0 0 4]]

PC = 228
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 6 0 0 0 0 0 4]]
After activation:
[[0 6 0 0 0 0 0 4]]
Unconditional jump from 228 to 6. No write to UB.

PC = 6
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 7
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 8
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 9
RW 23: read weight matrix 23 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 10
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[       100          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 11
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 12
WHM standard matrix: read unified buffer [7:8], write to host memory [1:2]. Flags? 0
[[0 0 0 0 0 0 0 0]]

PC = 13
H A L T
MMC Count: 16
HM Count: 3
ACT Count: 12
RW Count: 16
RW Reloads: 13
PC history:
 [0, 1, 2, 3, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 223, 224, 225, 226, 227, 228, 6, 7, 8, 9, 10, 11, 12, 13]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/insertion_sort100 passed
test/mullifier_examples/insertion_sort1000/
Simulation terminated at cycle 419
PC = 0
RHM standard matrix: read host memory [0:6], write to unified buffer [0:6]. Flags? 0
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]
 [     17048          0          0          0          0          0          0          0]
 [      1000          1 4294967295          1          0          0          1          0]
 [        48         24        160          0          0          0          0          0]]

PC = 1
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: padded with 1 0-rows
Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 2
RW 22: read weight matrix 22 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 8 0 0 0 0 0 1]]

PC = 3
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 8 0 0 0 0 0 1]]
MMC output: 
[[0 8 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 8 0 0 0 0 0 1]]

PC = 4
RHM pc return: create curent pc vector, write to unified buffer [8]. Flags? 2
[[0. 6. 0. 0. 0. 0. 0. 4.]]

PC = 5
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 8 0 0 0 0 0 1]]
After activation:
[[0 8 0 0 0 0 0 1]]
Branch from 5 to 14. No write to UB.

PC = 14
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 15
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[      1000          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 16
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 17
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 18
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 19
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 19 to 20. No write to UB.

PC = 20
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 21
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 22
RW 3: read weight matrix 3 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 23
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[      1000          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[   0 1000    0    0    0    0    0    0]]
Accumulating with ACC[0:1]
[[1 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[   1 1000    0    0    0    0    0    0]]

PC = 24
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[   1 1000    0    0    0    0    0    0]]
After activation:
[[   1 1000    0    0    0    0    0    0]]
Normal activation.
After branch/comparison/jump:
[[   1 1000    0    0    0    0    0    0]]

PC = 25
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 26
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 27
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 28
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 29
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 30
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 3]]

PC = 31
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 32
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[   1 1000    0    0    0    0    0    0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294966297          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 3]]
After MMC + ACC: 
[[4294966297          0          0          0          0          0          0          3]]

PC = 33
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[4294966297          0          0          0          0          0          0          3]]
After activation:
[[4294966297          0          0          0          0          0          0          3]]
Less than check, evaluates to False (4294966297 !< 0).
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 34
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 35
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 36
ACT: read ACC[0:1], and write to UB[28:29]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 37
RW 6: read weight matrix 6 into weight FIFO
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 181   0   0   0   0   0   1]]

PC = 38
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 181   0   0   0   0   0   1]]
MMC output: 
[[  0 181   0   0   0   0   0   1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 181   0   0   0   0   0   1]]

PC = 39
RW 7: read weight matrix 7 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 40
MMC: multiply UB[28:29] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[  0 181   0   0   0   0   0   1]]
After MMC + ACC: 
[[  0 181   0   0   0   0   0   1]]

PC = 41
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[  0 181   0   0   0   0   0   1]]
After activation:
[[  0 181   0   0   0   0   0   1]]
Branch from 41 to 223. No write to UB.

PC = 223
RW 10: read weight matrix 10 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 224
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[      1000          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 225
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 226
RW 7: read weight matrix 7 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 227
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 6 0 0 0 0 0 4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 6 0 0 0 0 0 4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 6 0 0 0 0 0 4]]

PC = 228
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 6 0 0 0 0 0 4]]
After activation:
[[0 6 0 0 0 0 0 4]]
Unconditional jump from 228 to 6. No write to UB.

PC = 6
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 7
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 8
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 9
RW 23: read weight matrix 23 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 10
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[      1000          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 11
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 12
WHM standard matrix: read unified buffer [7:8], write to host memory [1:2]. Flags? 0
[[0 0 0 0 0 0 0 0]]

PC = 13
H A L T
MMC Count: 16
HM Count: 3
ACT Count: 12
RW Count: 16
RW Reloads: 13
PC history:
 [0, 1, 2, 3, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 223, 224, 225, 226, 227, 228, 6, 7, 8, 9, 10, 11, 12, 13]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/insertion_sort1000 passed
test/mullifier_examples/mult2_nop_f0/
Simulation terminated at cycle 1386
PC = 0
RHM standard matrix: read host memory [0:3], write to unified buffer [0:3]. Flags? 0
[[2 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 1

PC = 2

PC = 3

PC = 4

PC = 5

PC = 6

PC = 7

PC = 8

PC = 9

PC = 10

PC = 11

PC = 12

PC = 13

PC = 14

PC = 15

PC = 16

PC = 17

PC = 18

PC = 19

PC = 20

PC = 21

PC = 22

PC = 23

PC = 24

PC = 25

PC = 26

PC = 27

PC = 28

PC = 29

PC = 30

PC = 31

PC = 32

PC = 33

PC = 34

PC = 35

PC = 36

PC = 37

PC = 38

PC = 39

PC = 40

PC = 41

PC = 42

PC = 43

PC = 44

PC = 45

PC = 46

PC = 47

PC = 48

PC = 49

PC = 50
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 51

PC = 52

PC = 53

PC = 54

PC = 55

PC = 56

PC = 57

PC = 58

PC = 59

PC = 60

PC = 61

PC = 62

PC = 63

PC = 64

PC = 65

PC = 66

PC = 67

PC = 68

PC = 69

PC = 70

PC = 71

PC = 72

PC = 73

PC = 74

PC = 75

PC = 76

PC = 77

PC = 78

PC = 79

PC = 80

PC = 81

PC = 82

PC = 83

PC = 84

PC = 85

PC = 86

PC = 87

PC = 88

PC = 89

PC = 90

PC = 91

PC = 92

PC = 93

PC = 94

PC = 95

PC = 96

PC = 97

PC = 98

PC = 99

PC = 100
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[2 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 101

PC = 102

PC = 103

PC = 104

PC = 105

PC = 106

PC = 107

PC = 108

PC = 109

PC = 110

PC = 111

PC = 112

PC = 113

PC = 114

PC = 115

PC = 116

PC = 117

PC = 118

PC = 119

PC = 120

PC = 121

PC = 122

PC = 123

PC = 124

PC = 125

PC = 126

PC = 127

PC = 128

PC = 129

PC = 130

PC = 131

PC = 132

PC = 133

PC = 134

PC = 135

PC = 136

PC = 137

PC = 138

PC = 139

PC = 140

PC = 141

PC = 142

PC = 143

PC = 144

PC = 145

PC = 146

PC = 147

PC = 148

PC = 149

PC = 150
ACT: read ACC[0:1], and write to UB[4:5]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 151

PC = 152

PC = 153

PC = 154

PC = 155

PC = 156

PC = 157

PC = 158

PC = 159

PC = 160

PC = 161

PC = 162

PC = 163

PC = 164

PC = 165

PC = 166

PC = 167

PC = 168

PC = 169

PC = 170

PC = 171

PC = 172

PC = 173

PC = 174

PC = 175

PC = 176

PC = 177

PC = 178

PC = 179

PC = 180

PC = 181

PC = 182

PC = 183

PC = 184

PC = 185

PC = 186

PC = 187

PC = 188

PC = 189

PC = 190

PC = 191

PC = 192

PC = 193

PC = 194

PC = 195

PC = 196

PC = 197

PC = 198

PC = 199

PC = 200
RW 1: read weight matrix 1 into weight FIFO
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 100   0   0   0   0   0   1]]

PC = 201

PC = 202

PC = 203

PC = 204

PC = 205

PC = 206

PC = 207

PC = 208

PC = 209

PC = 210

PC = 211

PC = 212

PC = 213

PC = 214

PC = 215

PC = 216

PC = 217

PC = 218

PC = 219

PC = 220

PC = 221

PC = 222

PC = 223

PC = 224

PC = 225

PC = 226

PC = 227

PC = 228

PC = 229

PC = 230

PC = 231

PC = 232

PC = 233

PC = 234

PC = 235

PC = 236

PC = 237

PC = 238

PC = 239

PC = 240

PC = 241

PC = 242

PC = 243

PC = 244

PC = 245

PC = 246

PC = 247

PC = 248

PC = 249

PC = 250
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 100   0   0   0   0   0   1]]
MMC output: 
[[  0 100   0   0   0   0   0   1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 100   0   0   0   0   0   1]]

PC = 251

PC = 252

PC = 253

PC = 254

PC = 255

PC = 256

PC = 257

PC = 258

PC = 259

PC = 260

PC = 261

PC = 262

PC = 263

PC = 264

PC = 265

PC = 266

PC = 267

PC = 268

PC = 269

PC = 270

PC = 271

PC = 272

PC = 273

PC = 274

PC = 275

PC = 276

PC = 277

PC = 278

PC = 279

PC = 280

PC = 281

PC = 282

PC = 283

PC = 284

PC = 285

PC = 286

PC = 287

PC = 288

PC = 289

PC = 290

PC = 291

PC = 292

PC = 293

PC = 294

PC = 295

PC = 296

PC = 297

PC = 298

PC = 299

PC = 300
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 301

PC = 302

PC = 303

PC = 304

PC = 305

PC = 306

PC = 307

PC = 308

PC = 309

PC = 310

PC = 311

PC = 312

PC = 313

PC = 314

PC = 315

PC = 316

PC = 317

PC = 318

PC = 319

PC = 320

PC = 321

PC = 322

PC = 323

PC = 324

PC = 325

PC = 326

PC = 327

PC = 328

PC = 329

PC = 330

PC = 331

PC = 332

PC = 333

PC = 334

PC = 335

PC = 336

PC = 337

PC = 338

PC = 339

PC = 340

PC = 341

PC = 342

PC = 343

PC = 344

PC = 345

PC = 346

PC = 347

PC = 348

PC = 349

PC = 350
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[  0 100   0   0   0   0   0   1]]
After MMC + ACC: 
[[  0 100   0   0   0   0   0   1]]

PC = 351

PC = 352

PC = 353

PC = 354

PC = 355

PC = 356

PC = 357

PC = 358

PC = 359

PC = 360

PC = 361

PC = 362

PC = 363

PC = 364

PC = 365

PC = 366

PC = 367

PC = 368

PC = 369

PC = 370

PC = 371

PC = 372

PC = 373

PC = 374

PC = 375

PC = 376

PC = 377

PC = 378

PC = 379

PC = 380

PC = 381

PC = 382

PC = 383

PC = 384

PC = 385

PC = 386

PC = 387

PC = 388

PC = 389

PC = 390

PC = 391

PC = 392

PC = 393

PC = 394

PC = 395

PC = 396

PC = 397

PC = 398

PC = 399

PC = 400
ACT: read ACC[0:1], and write to UB[4:5]. Activation function: Before activation:
[[  0 100   0   0   0   0   0   1]]
After activation:
[[  0 100   0   0   0   0   0   1]]
Branch from 400 to 501. No write to UB.

PC = 501

PC = 502

PC = 503

PC = 504

PC = 505

PC = 506

PC = 507

PC = 508

PC = 509

PC = 510

PC = 511

PC = 512

PC = 513

PC = 514

PC = 515

PC = 516

PC = 517

PC = 518

PC = 519

PC = 520

PC = 521

PC = 522

PC = 523

PC = 524

PC = 525

PC = 526

PC = 527

PC = 528

PC = 529

PC = 530

PC = 531

PC = 532

PC = 533

PC = 534

PC = 535

PC = 536

PC = 537

PC = 538

PC = 539

PC = 540

PC = 541

PC = 542

PC = 543

PC = 544

PC = 545

PC = 546

PC = 547

PC = 548

PC = 549

PC = 550
RW 3: read weight matrix 3 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 551

PC = 552

PC = 553

PC = 554

PC = 555

PC = 556

PC = 557

PC = 558

PC = 559

PC = 560

PC = 561

PC = 562

PC = 563

PC = 564

PC = 565

PC = 566

PC = 567

PC = 568

PC = 569

PC = 570

PC = 571

PC = 572

PC = 573

PC = 574

PC = 575

PC = 576

PC = 577

PC = 578

PC = 579

PC = 580

PC = 581

PC = 582

PC = 583

PC = 584

PC = 585

PC = 586

PC = 587

PC = 588

PC = 589

PC = 590

PC = 591

PC = 592

PC = 593

PC = 594

PC = 595

PC = 596

PC = 597

PC = 598

PC = 599

PC = 600
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[2 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[2 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[2 0 0 0 0 0 0 0]]

PC = 601

PC = 602

PC = 603

PC = 604

PC = 605

PC = 606

PC = 607

PC = 608

PC = 609

PC = 610

PC = 611

PC = 612

PC = 613

PC = 614

PC = 615

PC = 616

PC = 617

PC = 618

PC = 619

PC = 620

PC = 621

PC = 622

PC = 623

PC = 624

PC = 625

PC = 626

PC = 627

PC = 628

PC = 629

PC = 630

PC = 631

PC = 632

PC = 633

PC = 634

PC = 635

PC = 636

PC = 637

PC = 638

PC = 639

PC = 640

PC = 641

PC = 642

PC = 643

PC = 644

PC = 645

PC = 646

PC = 647

PC = 648

PC = 649

PC = 650
ACT: read ACC[0:1], and write to UB[4:5]. Activation function: Before activation:
[[2 0 0 0 0 0 0 0]]
After activation:
[[2 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[2 0 0 0 0 0 0 0]]

PC = 651

PC = 652

PC = 653

PC = 654

PC = 655

PC = 656

PC = 657

PC = 658

PC = 659

PC = 660

PC = 661

PC = 662

PC = 663

PC = 664

PC = 665

PC = 666

PC = 667

PC = 668

PC = 669

PC = 670

PC = 671

PC = 672

PC = 673

PC = 674

PC = 675

PC = 676

PC = 677

PC = 678

PC = 679

PC = 680

PC = 681

PC = 682

PC = 683

PC = 684

PC = 685

PC = 686

PC = 687

PC = 688

PC = 689

PC = 690

PC = 691

PC = 692

PC = 693

PC = 694

PC = 695

PC = 696

PC = 697

PC = 698

PC = 699

PC = 700
RW 4: read weight matrix 4 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 701

PC = 702

PC = 703

PC = 704

PC = 705

PC = 706

PC = 707

PC = 708

PC = 709

PC = 710

PC = 711

PC = 712

PC = 713

PC = 714

PC = 715

PC = 716

PC = 717

PC = 718

PC = 719

PC = 720

PC = 721

PC = 722

PC = 723

PC = 724

PC = 725

PC = 726

PC = 727

PC = 728

PC = 729

PC = 730

PC = 731

PC = 732

PC = 733

PC = 734

PC = 735

PC = 736

PC = 737

PC = 738

PC = 739

PC = 740

PC = 741

PC = 742

PC = 743

PC = 744

PC = 745

PC = 746

PC = 747

PC = 748

PC = 749

PC = 750
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[2 0 0 0 0 0 0 0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 2 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 2 0 0 0 0 0 0]]

PC = 751

PC = 752

PC = 753

PC = 754

PC = 755

PC = 756

PC = 757

PC = 758

PC = 759

PC = 760

PC = 761

PC = 762

PC = 763

PC = 764

PC = 765

PC = 766

PC = 767

PC = 768

PC = 769

PC = 770

PC = 771

PC = 772

PC = 773

PC = 774

PC = 775

PC = 776

PC = 777

PC = 778

PC = 779

PC = 780

PC = 781

PC = 782

PC = 783

PC = 784

PC = 785

PC = 786

PC = 787

PC = 788

PC = 789

PC = 790

PC = 791

PC = 792

PC = 793

PC = 794

PC = 795

PC = 796

PC = 797

PC = 798

PC = 799

PC = 800
ACT: read ACC[0:1], and write to UB[5:6]. Activation function: Before activation:
[[0 2 0 0 0 0 0 0]]
After activation:
[[0 2 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 2 0 0 0 0 0 0]]

PC = 801

PC = 802

PC = 803

PC = 804

PC = 805

PC = 806

PC = 807

PC = 808

PC = 809

PC = 810

PC = 811

PC = 812

PC = 813

PC = 814

PC = 815

PC = 816

PC = 817

PC = 818

PC = 819

PC = 820

PC = 821

PC = 822

PC = 823

PC = 824

PC = 825

PC = 826

PC = 827

PC = 828

PC = 829

PC = 830

PC = 831

PC = 832

PC = 833

PC = 834

PC = 835

PC = 836

PC = 837

PC = 838

PC = 839

PC = 840

PC = 841

PC = 842

PC = 843

PC = 844

PC = 845

PC = 846

PC = 847

PC = 848

PC = 849

PC = 850
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 851

PC = 852

PC = 853

PC = 854

PC = 855

PC = 856

PC = 857

PC = 858

PC = 859

PC = 860

PC = 861

PC = 862

PC = 863

PC = 864

PC = 865

PC = 866

PC = 867

PC = 868

PC = 869

PC = 870

PC = 871

PC = 872

PC = 873

PC = 874

PC = 875

PC = 876

PC = 877

PC = 878

PC = 879

PC = 880

PC = 881

PC = 882

PC = 883

PC = 884

PC = 885

PC = 886

PC = 887

PC = 888

PC = 889

PC = 890

PC = 891

PC = 892

PC = 893

PC = 894

PC = 895

PC = 896

PC = 897

PC = 898

PC = 899

PC = 900
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[2 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[2 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[2 0 0 0 0 0 0 0]]

PC = 901

PC = 902

PC = 903

PC = 904

PC = 905

PC = 906

PC = 907

PC = 908

PC = 909

PC = 910

PC = 911

PC = 912

PC = 913

PC = 914

PC = 915

PC = 916

PC = 917

PC = 918

PC = 919

PC = 920

PC = 921

PC = 922

PC = 923

PC = 924

PC = 925

PC = 926

PC = 927

PC = 928

PC = 929

PC = 930

PC = 931

PC = 932

PC = 933

PC = 934

PC = 935

PC = 936

PC = 937

PC = 938

PC = 939

PC = 940

PC = 941

PC = 942

PC = 943

PC = 944

PC = 945

PC = 946

PC = 947

PC = 948

PC = 949

PC = 950
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 951

PC = 952

PC = 953

PC = 954

PC = 955

PC = 956

PC = 957

PC = 958

PC = 959

PC = 960

PC = 961

PC = 962

PC = 963

PC = 964

PC = 965

PC = 966

PC = 967

PC = 968

PC = 969

PC = 970

PC = 971

PC = 972

PC = 973

PC = 974

PC = 975

PC = 976

PC = 977

PC = 978

PC = 979

PC = 980

PC = 981

PC = 982

PC = 983

PC = 984

PC = 985

PC = 986

PC = 987

PC = 988

PC = 989

PC = 990

PC = 991

PC = 992

PC = 993

PC = 994

PC = 995

PC = 996

PC = 997

PC = 998

PC = 999

PC = 1000
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 2 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 2 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[2 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[2 2 0 0 0 0 0 0]]

PC = 1001

PC = 1002

PC = 1003

PC = 1004

PC = 1005

PC = 1006

PC = 1007

PC = 1008

PC = 1009

PC = 1010

PC = 1011

PC = 1012

PC = 1013

PC = 1014

PC = 1015

PC = 1016

PC = 1017

PC = 1018

PC = 1019

PC = 1020

PC = 1021

PC = 1022

PC = 1023

PC = 1024

PC = 1025

PC = 1026

PC = 1027

PC = 1028

PC = 1029

PC = 1030

PC = 1031

PC = 1032

PC = 1033

PC = 1034

PC = 1035

PC = 1036

PC = 1037

PC = 1038

PC = 1039

PC = 1040

PC = 1041

PC = 1042

PC = 1043

PC = 1044

PC = 1045

PC = 1046

PC = 1047

PC = 1048

PC = 1049

PC = 1050
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[2 2 0 0 0 0 0 0]]
After activation:
[[2 2 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[2 2 0 0 0 0 0 0]]

PC = 1051

PC = 1052

PC = 1053

PC = 1054

PC = 1055

PC = 1056

PC = 1057

PC = 1058

PC = 1059

PC = 1060

PC = 1061

PC = 1062

PC = 1063

PC = 1064

PC = 1065

PC = 1066

PC = 1067

PC = 1068

PC = 1069

PC = 1070

PC = 1071

PC = 1072

PC = 1073

PC = 1074

PC = 1075

PC = 1076

PC = 1077

PC = 1078

PC = 1079

PC = 1080

PC = 1081

PC = 1082

PC = 1083

PC = 1084

PC = 1085

PC = 1086

PC = 1087

PC = 1088

PC = 1089

PC = 1090

PC = 1091

PC = 1092

PC = 1093

PC = 1094

PC = 1095

PC = 1096

PC = 1097

PC = 1098

PC = 1099

PC = 1100
RW 5: read weight matrix 5 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 1101

PC = 1102

PC = 1103

PC = 1104

PC = 1105

PC = 1106

PC = 1107

PC = 1108

PC = 1109

PC = 1110

PC = 1111

PC = 1112

PC = 1113

PC = 1114

PC = 1115

PC = 1116

PC = 1117

PC = 1118

PC = 1119

PC = 1120

PC = 1121

PC = 1122

PC = 1123

PC = 1124

PC = 1125

PC = 1126

PC = 1127

PC = 1128

PC = 1129

PC = 1130

PC = 1131

PC = 1132

PC = 1133

PC = 1134

PC = 1135

PC = 1136

PC = 1137

PC = 1138

PC = 1139

PC = 1140

PC = 1141

PC = 1142

PC = 1143

PC = 1144

PC = 1145

PC = 1146

PC = 1147

PC = 1148

PC = 1149

PC = 1150
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[2 2 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[4 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[4 0 0 0 0 0 0 0]]

PC = 1151

PC = 1152

PC = 1153

PC = 1154

PC = 1155

PC = 1156

PC = 1157

PC = 1158

PC = 1159

PC = 1160

PC = 1161

PC = 1162

PC = 1163

PC = 1164

PC = 1165

PC = 1166

PC = 1167

PC = 1168

PC = 1169

PC = 1170

PC = 1171

PC = 1172

PC = 1173

PC = 1174

PC = 1175

PC = 1176

PC = 1177

PC = 1178

PC = 1179

PC = 1180

PC = 1181

PC = 1182

PC = 1183

PC = 1184

PC = 1185

PC = 1186

PC = 1187

PC = 1188

PC = 1189

PC = 1190

PC = 1191

PC = 1192

PC = 1193

PC = 1194

PC = 1195

PC = 1196

PC = 1197

PC = 1198

PC = 1199

PC = 1200
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[4 0 0 0 0 0 0 0]]
After activation:
[[4 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[4 0 0 0 0 0 0 0]]

PC = 1201

PC = 1202

PC = 1203

PC = 1204

PC = 1205

PC = 1206

PC = 1207

PC = 1208

PC = 1209

PC = 1210

PC = 1211

PC = 1212

PC = 1213

PC = 1214

PC = 1215

PC = 1216

PC = 1217

PC = 1218

PC = 1219

PC = 1220

PC = 1221

PC = 1222

PC = 1223

PC = 1224

PC = 1225

PC = 1226

PC = 1227

PC = 1228

PC = 1229

PC = 1230

PC = 1231

PC = 1232

PC = 1233

PC = 1234

PC = 1235

PC = 1236

PC = 1237

PC = 1238

PC = 1239

PC = 1240

PC = 1241

PC = 1242

PC = 1243

PC = 1244

PC = 1245

PC = 1246

PC = 1247

PC = 1248

PC = 1249

PC = 1250
WHM standard matrix: read unified buffer [3:4], write to host memory [1:2]. Flags? 0
[[4 0 0 0 0 0 0 0]]

PC = 1251

PC = 1252

PC = 1253

PC = 1254

PC = 1255

PC = 1256

PC = 1257

PC = 1258

PC = 1259

PC = 1260

PC = 1261

PC = 1262

PC = 1263

PC = 1264

PC = 1265

PC = 1266

PC = 1267

PC = 1268

PC = 1269

PC = 1270

PC = 1271

PC = 1272

PC = 1273

PC = 1274

PC = 1275

PC = 1276

PC = 1277

PC = 1278

PC = 1279

PC = 1280

PC = 1281

PC = 1282

PC = 1283

PC = 1284

PC = 1285

PC = 1286

PC = 1287

PC = 1288

PC = 1289

PC = 1290

PC = 1291

PC = 1292

PC = 1293

PC = 1294

PC = 1295

PC = 1296

PC = 1297

PC = 1298

PC = 1299

PC = 1300
H A L T
MMC Count: 8
HM Count: 2
ACT Count: 6
RW Count: 8
RW Reloads: 7
PC history:


ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/mult2_nop_f0 passed
test/mullifier_examples/mult2_nop_f1/
Simulation terminated at cycle 572
PC = 0
RHM standard matrix: read host memory [0:3], write to unified buffer [0:3]. Flags? 0
[[2 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 1

PC = 2

PC = 3

PC = 4

PC = 5

PC = 6

PC = 7

PC = 8

PC = 9

PC = 10

PC = 11

PC = 12

PC = 13

PC = 14

PC = 15

PC = 16

PC = 17

PC = 18

PC = 19

PC = 20

PC = 21

PC = 22

PC = 23

PC = 24

PC = 25

PC = 26

PC = 27

PC = 28

PC = 29

PC = 30

PC = 31

PC = 32

PC = 33

PC = 34

PC = 35

PC = 36

PC = 37

PC = 38

PC = 39

PC = 40

PC = 41

PC = 42

PC = 43

PC = 44

PC = 45

PC = 46

PC = 47

PC = 48

PC = 49

PC = 50
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 51

PC = 52

PC = 53

PC = 54

PC = 55

PC = 56

PC = 57

PC = 58

PC = 59

PC = 60

PC = 61

PC = 62

PC = 63

PC = 64

PC = 65

PC = 66

PC = 67

PC = 68

PC = 69

PC = 70

PC = 71

PC = 72

PC = 73

PC = 74

PC = 75

PC = 76

PC = 77

PC = 78

PC = 79

PC = 80

PC = 81

PC = 82

PC = 83

PC = 84

PC = 85

PC = 86

PC = 87

PC = 88

PC = 89

PC = 90

PC = 91

PC = 92

PC = 93

PC = 94

PC = 95

PC = 96

PC = 97

PC = 98

PC = 99

PC = 100
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[2 1 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 1 0]]

PC = 101

PC = 102

PC = 103

PC = 104

PC = 105

PC = 106

PC = 107

PC = 108

PC = 109

PC = 110

PC = 111

PC = 112

PC = 113

PC = 114

PC = 115

PC = 116

PC = 117

PC = 118

PC = 119

PC = 120

PC = 121

PC = 122

PC = 123

PC = 124

PC = 125

PC = 126

PC = 127

PC = 128

PC = 129

PC = 130

PC = 131

PC = 132

PC = 133

PC = 134

PC = 135

PC = 136

PC = 137

PC = 138

PC = 139

PC = 140

PC = 141

PC = 142

PC = 143

PC = 144

PC = 145

PC = 146

PC = 147

PC = 148

PC = 149

PC = 150
ACT: read ACC[0:1], and write to UB[4:5]. Activation function: Before activation:
[[0 0 0 0 0 0 1 0]]
After activation:
[[0 0 0 0 0 0 1 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 1 0]]

PC = 151

PC = 152

PC = 153

PC = 154

PC = 155

PC = 156

PC = 157

PC = 158

PC = 159

PC = 160

PC = 161

PC = 162

PC = 163

PC = 164

PC = 165

PC = 166

PC = 167

PC = 168

PC = 169

PC = 170

PC = 171

PC = 172

PC = 173

PC = 174

PC = 175

PC = 176

PC = 177

PC = 178

PC = 179

PC = 180

PC = 181

PC = 182

PC = 183

PC = 184

PC = 185

PC = 186

PC = 187

PC = 188

PC = 189

PC = 190

PC = 191

PC = 192

PC = 193

PC = 194

PC = 195

PC = 196

PC = 197

PC = 198

PC = 199

PC = 200
RW 1: read weight matrix 1 into weight FIFO
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 100   0   0   0   0   0   1]]

PC = 201

PC = 202

PC = 203

PC = 204

PC = 205

PC = 206

PC = 207

PC = 208

PC = 209

PC = 210

PC = 211

PC = 212

PC = 213

PC = 214

PC = 215

PC = 216

PC = 217

PC = 218

PC = 219

PC = 220

PC = 221

PC = 222

PC = 223

PC = 224

PC = 225

PC = 226

PC = 227

PC = 228

PC = 229

PC = 230

PC = 231

PC = 232

PC = 233

PC = 234

PC = 235

PC = 236

PC = 237

PC = 238

PC = 239

PC = 240

PC = 241

PC = 242

PC = 243

PC = 244

PC = 245

PC = 246

PC = 247

PC = 248

PC = 249

PC = 250
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 100   0   0   0   0   0   1]]
MMC output: 
[[  0 100   0   0   0   0   0   1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 100   0   0   0   0   0   1]]

PC = 251

PC = 252

PC = 253

PC = 254

PC = 255

PC = 256

PC = 257

PC = 258

PC = 259

PC = 260

PC = 261

PC = 262

PC = 263

PC = 264

PC = 265

PC = 266

PC = 267

PC = 268

PC = 269

PC = 270

PC = 271

PC = 272

PC = 273

PC = 274

PC = 275

PC = 276

PC = 277

PC = 278

PC = 279

PC = 280

PC = 281

PC = 282

PC = 283

PC = 284

PC = 285

PC = 286

PC = 287

PC = 288

PC = 289

PC = 290

PC = 291

PC = 292

PC = 293

PC = 294

PC = 295

PC = 296

PC = 297

PC = 298

PC = 299

PC = 300
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 301

PC = 302

PC = 303

PC = 304

PC = 305

PC = 306

PC = 307

PC = 308

PC = 309

PC = 310

PC = 311

PC = 312

PC = 313

PC = 314

PC = 315

PC = 316

PC = 317

PC = 318

PC = 319

PC = 320

PC = 321

PC = 322

PC = 323

PC = 324

PC = 325

PC = 326

PC = 327

PC = 328

PC = 329

PC = 330

PC = 331

PC = 332

PC = 333

PC = 334

PC = 335

PC = 336

PC = 337

PC = 338

PC = 339

PC = 340

PC = 341

PC = 342

PC = 343

PC = 344

PC = 345

PC = 346

PC = 347

PC = 348

PC = 349

PC = 350
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 1 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Accumulating with ACC[0:1]
[[  0 100   0   0   0   0   0   1]]
After MMC + ACC: 
[[  0 100   0   0   0   0   1   1]]

PC = 351

PC = 352

PC = 353

PC = 354

PC = 355

PC = 356

PC = 357

PC = 358

PC = 359

PC = 360

PC = 361

PC = 362

PC = 363

PC = 364

PC = 365

PC = 366

PC = 367

PC = 368

PC = 369

PC = 370

PC = 371

PC = 372

PC = 373

PC = 374

PC = 375

PC = 376

PC = 377

PC = 378

PC = 379

PC = 380

PC = 381

PC = 382

PC = 383

PC = 384

PC = 385

PC = 386

PC = 387

PC = 388

PC = 389

PC = 390

PC = 391

PC = 392

PC = 393

PC = 394

PC = 395

PC = 396

PC = 397

PC = 398

PC = 399

PC = 400
ACT: read ACC[0:1], and write to UB[4:5]. Activation function: Before activation:
[[  0 100   0   0   0   0   1   1]]
After activation:
[[  0 100   0   0   0   0   1   1]]
Branch from 400 to 401. No write to UB.

PC = 401

PC = 402

PC = 403

PC = 404

PC = 405

PC = 406

PC = 407

PC = 408

PC = 409

PC = 410

PC = 411

PC = 412

PC = 413

PC = 414

PC = 415

PC = 416

PC = 417

PC = 418

PC = 419

PC = 420

PC = 421

PC = 422

PC = 423

PC = 424

PC = 425

PC = 426

PC = 427

PC = 428

PC = 429

PC = 430

PC = 431

PC = 432

PC = 433

PC = 434

PC = 435

PC = 436

PC = 437

PC = 438

PC = 439

PC = 440

PC = 441

PC = 442

PC = 443

PC = 444

PC = 445

PC = 446

PC = 447

PC = 448

PC = 449

PC = 450
WHM standard matrix: read unified buffer [0:1], write to host memory [1:2]. Flags? 0
[[2 1 0 0 0 0 0 0]]

PC = 451

PC = 452

PC = 453

PC = 454

PC = 455

PC = 456

PC = 457

PC = 458

PC = 459

PC = 460

PC = 461

PC = 462

PC = 463

PC = 464

PC = 465

PC = 466

PC = 467

PC = 468

PC = 469

PC = 470

PC = 471

PC = 472

PC = 473

PC = 474

PC = 475

PC = 476

PC = 477

PC = 478

PC = 479

PC = 480

PC = 481

PC = 482

PC = 483

PC = 484

PC = 485

PC = 486

PC = 487

PC = 488

PC = 489

PC = 490

PC = 491

PC = 492

PC = 493

PC = 494

PC = 495

PC = 496

PC = 497

PC = 498

PC = 499

PC = 500
H A L T
MMC Count: 3
HM Count: 2
ACT Count: 2
RW Count: 3
RW Reloads: 3
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/mult2_nop_f1 passed
test/mullifier_examples/search/
Simulation terminated at cycle 2752
PC = 0
RHM standard matrix: read host memory [0:7], write to unified buffer [0:7]. Flags? 0
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]
 [     16088          0          0          0          0          0          0          0]
 [         0          0          1          0          1          0          1 4294967295]
 [         5          1          3          0         56         72         66         79]
 [        78         77         24         48         56        240          0          0]]

PC = 1
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  3  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 28: read weight matrix 28 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 4
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  3  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 3 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 3 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 3 0 0 0 0 0 0]]
After activation:
[[0 3 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 3 0 0 0 0 0 0]]

PC = 6
RW 29: read weight matrix 29 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 87  0  0  0  0  0  1]]

PC = 7
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 87  0  0  0  0  0  1]]
MMC output: 
[[ 0 87  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 87  0  0  0  0  0  1]]

PC = 8
RHM pc return: create curent pc vector, write to unified buffer [9]. Flags? 2
[[ 0. 10.  0.  0.  0.  0.  0.  4.]]

PC = 9
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 87  0  0  0  0  0  1]]
After activation:
[[ 0 87  0  0  0  0  0  1]]
Branch from 9 to 97. No write to UB.

PC = 97
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 98
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[16088     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[16088     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[16088     0     0     0     0     0     0     0]]

PC = 99
RW 7: read weight matrix 7 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]

PC = 100
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]
MMC output: 
[[4294967056          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[16088     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 101
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[15848     0     0     0     0     0     0     0]]
After activation:
[[15848     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15848     0     0     0     0     0     0     0]]

PC = 102
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 103
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15848     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15848     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 104
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[15848     0     0     0     0     0     0     0]]
After activation:
[[15848     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15848     0     0     0     0     0     0     0]]

PC = 105
WHM vec matrix: read unified buffer [9:39], write to host memory [1981:2011]. Buffer addr is 15848 -> [1981][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  3  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 106
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 107
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 3 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 108
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 109
RW 8: read weight matrix 8 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967201          0          0          0          0          0          1]]

PC = 110
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967201          0          0          0          0          0          1]]
MMC output: 
[[         0 4294967201          0          0          0          0          0          1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[         0 4294967201          0          0          0          0          0          1]]

PC = 111
RHM pc return: create curent pc vector, write to unified buffer [9]. Flags? 2
[[  0. 113.   0.   0.   0.   0.   0.   4.]]

PC = 112
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[         0 4294967201          0          0          0          0          0          1]]
After activation:
[[         0 4294967201          0          0          0          0          0          1]]
Branch from 112 to 18. No write to UB.

PC = 18
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 19
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  3  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[79  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[79  0  0  0  0  0  0  0]]

PC = 20
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: Before activation:
[[79  0  0  0  0  0  0  0]]
After activation:
[[79  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[79  0  0  0  0  0  0  0]]

PC = 21
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 22
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[78  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 23
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[78  0  0  0  0  0  0  0]]
After activation:
[[78  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[78  0  0  0  0  0  0  0]]

PC = 24
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 25
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[78  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[78  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 26
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 27
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[78  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 28
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[78  0  0  0  0  0  0  0]]
After activation:
[[78  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[78  0  0  0  0  0  0  0]]

PC = 29
RHM vec cell: read host memory [9][6] and pad with 0s, write to unified buffer [13]. Buffer addr is 78 -> [9][6]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 30
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 31
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 32
RW 2: read weight matrix 2 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 33
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 34
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 35
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 36
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[78  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[78  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 37
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 38
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[78  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 39
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[78  0  0  0  0  0  0  0]]
After activation:
[[78  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[78  0  0  0  0  0  0  0]]

PC = 40
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 41
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 42
ACT: read ACC[0:1], and write to UB[15:16]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 43
WHM vec cell: read unified buffer [15][0], write to host memory [9][6]. Buffer addr is 78 -> [9][6]. Flags? 1
UB[15]: [[1 0 0 0 0 0 0 0]]
HM[9] before: [         0 4294967295 4294967295 4294967295 4294967295          0          0          0]
HM[9]  after: [         0 4294967295 4294967295 4294967295 4294967295          0          1          0]

PC = 44
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 45
MMC: multiply UB[11:12] with a weight, store in ACC[0:1]
MMC matrix: 
[[79  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[79  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[79  0  0  0  0  0  0  0]]

PC = 46
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 47
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[79  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[79  0  0  0  0  0  0  0]]

PC = 48
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[79  0  0  0  0  0  0  0]]
After activation:
[[79  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[79  0  0  0  0  0  0  0]]

PC = 49
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 50
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 51
ACT: read ACC[0:1], and write to UB[15:16]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 52
WHM vec cell: read unified buffer [15][0], write to host memory [9][7]. Buffer addr is 79 -> [9][7]. Flags? 1
UB[15]: [[0 0 0 0 0 0 0 0]]
HM[9] before: [         0 4294967295 4294967295 4294967295 4294967295          0          1          0]
HM[9]  after: [         0 4294967295 4294967295 4294967295 4294967295          0          1          0]

PC = 53
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 54
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 55
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 56
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 57
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[  0 113   0   0   0   0   0   4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[  0 113   0   0   0   0   0   4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 113   0   0   0   0   0   4]]

PC = 58
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[  0 113   0   0   0   0   0   4]]
After activation:
[[  0 113   0   0   0   0   0   4]]
Unconditional jump from 58 to 113. No write to UB.

PC = 113
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 114
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15848     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15848     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 115
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[15848     0     0     0     0     0     0     0]]
After activation:
[[15848     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15848     0     0     0     0     0     0     0]]

PC = 116
RHM vec matrix: read host memory [1981:2011], write to unified buffer [9:39]. Buffer addr is 15848 -> [1981][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  3  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]
[[ 0 10  0  0  0  0  0  4]
 [ 0  3  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 117
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 118
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15848     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15848     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 119
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 120
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[240   0   0   0   0   0   0   0]]
Accumulating with ACC[0:1]
[[15848     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[16088     0     0     0     0     0     0     0]]

PC = 121
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[16088     0     0     0     0     0     0     0]]
After activation:
[[16088     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16088     0     0     0     0     0     0     0]]

PC = 122
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 123
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 124
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 125
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 126
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 127
ACT: read ACC[0:1], and write to UB[13:14]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 128
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 129
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[78  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 130
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[78  0  0  0  0  0  0  0]]
After activation:
[[78  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[78  0  0  0  0  0  0  0]]

PC = 131
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 132
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  3  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[72  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[72  0  0  0  0  0  0  0]]

PC = 133
ACT: read ACC[0:1], and write to UB[15:16]. Activation function: Before activation:
[[72  0  0  0  0  0  0  0]]
After activation:
[[72  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[72  0  0  0  0  0  0  0]]

PC = 134
RW 10: read weight matrix 10 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 135
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  3  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[66  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[66  0  0  0  0  0  0  0]]

PC = 136
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[66  0  0  0  0  0  0  0]]
After activation:
[[66  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[66  0  0  0  0  0  0  0]]

PC = 137
RW 11: read weight matrix 11 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 138
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 139
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 139 to 140. No write to UB.

PC = 140
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 141
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[77  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 142
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 143
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[77  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 144
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 145
RHM vec cell: read host memory [9][5] and pad with 0s, write to unified buffer [17]. Buffer addr is 77 -> [9][5]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 146
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 147
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[78  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[78  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 148
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 149
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[78  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 150
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[78  0  0  0  0  0  0  0]]
After activation:
[[78  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[78  0  0  0  0  0  0  0]]

PC = 151
RHM vec cell: read host memory [9][6] and pad with 0s, write to unified buffer [18]. Buffer addr is 78 -> [9][6]. Flags? 1
[[1. 0. 0. 0. 0. 0. 0. 0.]]

PC = 152
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 153
MMC: multiply UB[17:18] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 154
RW 12: read weight matrix 12 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 155
MMC: multiply UB[18:19] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 1 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 1 0 0 0 0 0 0]]

PC = 156
ACT: read ACC[0:1], and write to UB[19:20]. Activation function: Before activation:
[[0 1 0 0 0 0 0 0]]
After activation:
[[0 1 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 1 0 0 0 0 0 0]]

PC = 157
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 158
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 159
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 160
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 161
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 162
MMC: multiply UB[19:20] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 1 0 0 0 0 0 0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          2]]

PC = 163
ACT: read ACC[0:1], and write to UB[19:20]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          2]]
After activation:
[[4294967295          0          0          0          0          0          0          2]]
Equality check, evaluates to False.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 164
RW 14: read weight matrix 14 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 165
MMC: multiply UB[19:20] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 166
ACT: read ACC[0:1], and write to UB[39:40]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 167
RW 15: read weight matrix 15 into weight FIFO
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [234   0   0   0   0   0   0   1]]

PC = 168
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [234   0   0   0   0   0   0   1]]
MMC output: 
[[234   0   0   0   0   0   0   1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[234   0   0   0   0   0   0   1]]

PC = 169
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 170
MMC: multiply UB[39:40] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[234   0   0   0   0   0   0   1]]
After MMC + ACC: 
[[234   0   0   0   0   0   0   1]]

PC = 171
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[234   0   0   0   0   0   0   1]]
After activation:
[[234   0   0   0   0   0   0   1]]
Branch from 171 to 172. No write to UB.

PC = 172
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 173
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[16088     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[16088     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[16088     0     0     0     0     0     0     0]]

PC = 174
RW 7: read weight matrix 7 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]

PC = 175
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]
MMC output: 
[[4294967056          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[16088     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 176
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[15848     0     0     0     0     0     0     0]]
After activation:
[[15848     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15848     0     0     0     0     0     0     0]]

PC = 177
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 178
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15848     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15848     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 179
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[15848     0     0     0     0     0     0     0]]
After activation:
[[15848     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15848     0     0     0     0     0     0     0]]

PC = 180
WHM vec matrix: read unified buffer [9:39], write to host memory [1981:2011]. Buffer addr is 15848 -> [1981][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  3  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [77  0  0  0  0  0  0  0]
 [78  0  0  0  0  0  0  0]
 [72  0  0  0  0  0  0  0]
 [66  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 181
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[15848     0     0     0     0     0     0     0]]
After activation:
[[15848     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15848     0     0     0     0     0     0     0]]

PC = 182
RW 16: read weight matrix 16 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967169          0          0          0          0          0          1]]

PC = 183
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967169          0          0          0          0          0          1]]
MMC output: 
[[         0 4294967169          0          0          0          0          0          1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[         0 4294967169          0          0          0          0          0          1]]

PC = 184
RHM pc return: create curent pc vector, write to unified buffer [9]. Flags? 2
[[  0. 186.   0.   0.   0.   0.   0.   4.]]

PC = 185
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[         0 4294967169          0          0          0          0          0          1]]
After activation:
[[         0 4294967169          0          0          0          0          0          1]]
Branch from 185 to 59. No write to UB.

PC = 59
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 60
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  3  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[79  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[79  0  0  0  0  0  0  0]]

PC = 61
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: Before activation:
[[79  0  0  0  0  0  0  0]]
After activation:
[[79  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[79  0  0  0  0  0  0  0]]

PC = 62
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 63
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 64
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 65
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 66
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[77  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 67
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 68
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[77  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 69
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 70
RHM vec cell: read host memory [9][5] and pad with 0s, write to unified buffer [13]. Buffer addr is 77 -> [9][5]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 71
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 72
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 73
RW 6: read weight matrix 6 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 74
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 75
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 76
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 77
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[77  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 78
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 79
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[77  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 80
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 81
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 82
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 83
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 84
WHM vec cell: read unified buffer [16][0], write to host memory [9][5]. Buffer addr is 77 -> [9][5]. Flags? 1
UB[16]: [[1 0 0 0 0 0 0 0]]
HM[9] before: [         0 4294967295 4294967295 4294967295 4294967295          0          1          0]
HM[9]  after: [         0 4294967295 4294967295 4294967295 4294967295          1          1          0]

PC = 85
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 86
MMC: multiply UB[11:12] with a weight, store in ACC[0:1]
MMC matrix: 
[[79  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[79  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[79  0  0  0  0  0  0  0]]

PC = 87
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 88
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[79  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[79  0  0  0  0  0  0  0]]

PC = 89
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[79  0  0  0  0  0  0  0]]
After activation:
[[79  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[79  0  0  0  0  0  0  0]]

PC = 90
RHM vec cell: read host memory [9][7] and pad with 0s, write to unified buffer [15]. Buffer addr is 79 -> [9][7]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 91
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 92
MMC: multiply UB[15:16] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 93
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 94
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 95
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[  0 186   0   0   0   0   0   4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[  0 186   0   0   0   0   0   4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 186   0   0   0   0   0   4]]

PC = 96
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[  0 186   0   0   0   0   0   4]]
After activation:
[[  0 186   0   0   0   0   0   4]]
Unconditional jump from 96 to 186. No write to UB.

PC = 186
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 187
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15848     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15848     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 188
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[15848     0     0     0     0     0     0     0]]
After activation:
[[15848     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15848     0     0     0     0     0     0     0]]

PC = 189
RHM vec matrix: read host memory [1981:2011], write to unified buffer [9:39]. Buffer addr is 15848 -> [1981][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  3  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [77  0  0  0  0  0  0  0]
 [78  0  0  0  0  0  0  0]
 [72  0  0  0  0  0  0  0]
 [66  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]
[[ 0 10  0  0  0  0  0  4]
 [ 0  3  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [77  0  0  0  0  0  0  0]
 [78  0  0  0  0  0  0  0]
 [72  0  0  0  0  0  0  0]
 [66  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 1  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 190
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 191
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15848     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15848     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15848     0     0     0     0     0     0     0]]

PC = 192
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 193
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 78  77  24  48  56 240   0   0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[240   0   0   0   0   0   0   0]]
Accumulating with ACC[0:1]
[[15848     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[16088     0     0     0     0     0     0     0]]

PC = 194
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[16088     0     0     0     0     0     0     0]]
After activation:
[[16088     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16088     0     0     0     0     0     0     0]]

PC = 195
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 196
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 197
ACT: read ACC[0:1], and write to UB[20:21]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 198
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 199
MMC: multiply UB[15:16] with a weight, store in ACC[0:1]
MMC matrix: 
[[72  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[72  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[72  0  0  0  0  0  0  0]]

PC = 200
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 201
MMC: multiply UB[20:21] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[72  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[72  0  0  0  0  0  0  0]]

PC = 202
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[72  0  0  0  0  0  0  0]]
After activation:
[[72  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[72  0  0  0  0  0  0  0]]

PC = 203
RHM vec cell: read host memory [9][0] and pad with 0s, write to unified buffer [21]. Buffer addr is 72 -> [9][0]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 204
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 205
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[66  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[66  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[66  0  0  0  0  0  0  0]]

PC = 206
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 207
MMC: multiply UB[20:21] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[66  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[66  0  0  0  0  0  0  0]]

PC = 208
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[66  0  0  0  0  0  0  0]]
After activation:
[[66  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[66  0  0  0  0  0  0  0]]

PC = 209
RHM vec cell: read host memory [8][2] and pad with 0s, write to unified buffer [22]. Buffer addr is 66 -> [8][2]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 210
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 211
MMC: multiply UB[20:21] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 212
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 213
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  3  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 214
ACT: read ACC[0:1], and write to UB[23:24]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 215
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 216
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[66  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[66  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[66  0  0  0  0  0  0  0]]

PC = 217
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 218
MMC: multiply UB[23:24] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[66  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[67  0  0  0  0  0  0  0]]

PC = 219
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[67  0  0  0  0  0  0  0]]
After activation:
[[67  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[67  0  0  0  0  0  0  0]]

PC = 220
RHM vec cell: read host memory [8][3] and pad with 0s, write to unified buffer [24]. Buffer addr is 67 -> [8][3]. Flags? 1
[[1. 0. 0. 0. 0. 0. 0. 0.]]

PC = 221
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 222
MMC: multiply UB[22:23] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 223
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 224
RW 17: read weight matrix 17 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 225
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 226
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 226 to 227. No write to UB.

PC = 227
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 228
MMC: multiply UB[11:12] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 229
RW 12: read weight matrix 12 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 230
MMC: multiply UB[24:25] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 1 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 1 0 0 0 0 0 0]]

PC = 231
ACT: read ACC[0:1], and write to UB[25:26]. Activation function: Before activation:
[[0 1 0 0 0 0 0 0]]
After activation:
[[0 1 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 1 0 0 0 0 0 0]]

PC = 232
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 233
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 234
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 235
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 236
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 237
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 3]]

PC = 238
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 239
MMC: multiply UB[25:26] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 1 0 0 0 0 0 0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 3]]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          3]]

PC = 240
ACT: read ACC[0:1], and write to UB[25:26]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          3]]
After activation:
[[4294967295          0          0          0          0          0          0          3]]
Less than check, evaluates to False (4294967295 !< 0).
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 241
RW 14: read weight matrix 14 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 242
MMC: multiply UB[25:26] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 243
ACT: read ACC[0:1], and write to UB[39:40]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 244
RW 18: read weight matrix 18 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967187          0          0          0          0          0          1]]

PC = 245
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967187          0          0          0          0          0          1]]
MMC output: 
[[         0 4294967187          0          0          0          0          0          1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[         0 4294967187          0          0          0          0          0          1]]

PC = 246
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 247
MMC: multiply UB[39:40] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[         0 4294967187          0          0          0          0          0          1]]
After MMC + ACC: 
[[         0 4294967187          0          0          0          0          0          1]]

PC = 248
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[         0 4294967187          0          0          0          0          0          1]]
After activation:
[[         0 4294967187          0          0          0          0          0          1]]
Branch from 248 to 140. No write to UB.

PC = 140
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 141
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[77  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 142
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 143
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[77  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 144
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 145
RHM vec cell: read host memory [9][5] and pad with 0s, write to unified buffer [17]. Buffer addr is 77 -> [9][5]. Flags? 1
[[1. 0. 0. 0. 0. 0. 0. 0.]]

PC = 146
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 147
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[78  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[78  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 148
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 149
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0          1          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[78  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 150
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[78  0  0  0  0  0  0  0]]
After activation:
[[78  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[78  0  0  0  0  0  0  0]]

PC = 151
RHM vec cell: read host memory [9][6] and pad with 0s, write to unified buffer [18]. Buffer addr is 78 -> [9][6]. Flags? 1
[[1. 0. 0. 0. 0. 0. 0. 0.]]

PC = 152
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 153
MMC: multiply UB[17:18] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 154
RW 12: read weight matrix 12 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 155
MMC: multiply UB[18:19] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 1 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[1 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[1 1 0 0 0 0 0 0]]

PC = 156
ACT: read ACC[0:1], and write to UB[19:20]. Activation function: Before activation:
[[1 1 0 0 0 0 0 0]]
After activation:
[[1 1 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 1 0 0 0 0 0 0]]

PC = 157
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 158
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 159
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 160
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 161
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 162
MMC: multiply UB[19:20] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 1 0 0 0 0 0 0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 163
ACT: read ACC[0:1], and write to UB[19:20]. Activation function: Before activation:
[[0 0 0 0 0 0 0 2]]
After activation:
[[0 0 0 0 0 0 0 2]]
Equality check, evaluates to True.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 164
RW 14: read weight matrix 14 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 165
MMC: multiply UB[19:20] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 1 0]]

PC = 166
ACT: read ACC[0:1], and write to UB[39:40]. Activation function: Before activation:
[[0 0 0 0 0 0 1 0]]
After activation:
[[0 0 0 0 0 0 1 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 1 0]]

PC = 167
RW 15: read weight matrix 15 into weight FIFO
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [234   0   0   0   0   0   0   1]]

PC = 168
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [234   0   0   0   0   0   0   1]]
MMC output: 
[[234   0   0   0   0   0   0   1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[234   0   0   0   0   0   0   1]]

PC = 169
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 170
MMC: multiply UB[39:40] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 1 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Accumulating with ACC[0:1]
[[234   0   0   0   0   0   0   1]]
After MMC + ACC: 
[[234   0   0   0   0   0   1   1]]

PC = 171
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[234   0   0   0   0   0   1   1]]
After activation:
[[234   0   0   0   0   0   1   1]]
Branch from 171 to 406. No write to UB.

PC = 406
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 407
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  1  3  0 56 72 66 79]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[72  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[72  0  0  0  0  0  0  0]]

PC = 408
ACT: read ACC[0:1], and write to UB[37:38]. Activation function: Before activation:
[[72  0  0  0  0  0  0  0]]
After activation:
[[72  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[72  0  0  0  0  0  0  0]]

PC = 409
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 410
MMC: multiply UB[37:38] with a weight, store in ACC[0:1]
MMC matrix: 
[[72  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[72  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[72  0  0  0  0  0  0  0]]

PC = 411
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 412
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 3 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[3 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[72  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[75  0  0  0  0  0  0  0]]

PC = 413
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[75  0  0  0  0  0  0  0]]
After activation:
[[75  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[75  0  0  0  0  0  0  0]]

PC = 414
RHM vec cell: read host memory [9][3] and pad with 0s, write to unified buffer [38]. Buffer addr is 75 -> [9][3]. Flags? 1
[[4.2949673e+09 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00]]

PC = 415
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 416
MMC: multiply UB[38:39] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967295          0          0          0          0          0          0          0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          0]]

PC = 417
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          0]]
After activation:
[[4294967295          0          0          0          0          0          0          0]]
Normal activation.
After branch/comparison/jump:
[[4294967295          0          0          0          0          0          0          0]]

PC = 418
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 419
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 0 10  0  0  0  0  0  4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[ 0 10  0  0  0  0  0  4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 10  0  0  0  0  0  4]]

PC = 420
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 10  0  0  0  0  0  4]]
After activation:
[[ 0 10  0  0  0  0  0  4]]
Unconditional jump from 420 to 10. No write to UB.

PC = 10
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 11
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967295          0          0          0          0          0          0          0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          0]]

PC = 12
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          0]]
After activation:
[[4294967295          0          0          0          0          0          0          0]]
Normal activation.
After branch/comparison/jump:
[[4294967295          0          0          0          0          0          0          0]]

PC = 13
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 14
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967295          0          0          0          0          0          0          0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          0]]

PC = 15
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          0]]
After activation:
[[4294967295          0          0          0          0          0          0          0]]
Normal activation.
After branch/comparison/jump:
[[4294967295          0          0          0          0          0          0          0]]

PC = 16
WHM standard matrix: read unified buffer [8:9], write to host memory [1:2]. Flags? 0
[[4294967295          0          0          0          0          0          0          0]]

PC = 17
H A L T
MMC Count: 102
HM Count: 23
ACT Count: 68
RW Count: 102
RW Reloads: 73
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 10, 11, 12, 13, 14, 15, 16, 17]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/search passed
test/mullifier_examples/test_add/
Simulation terminated at cycle 84
PC = 0
RHM standard matrix: read host memory [0:5], write to unified buffer [0:5]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [16040     0     0     0     0     0     0     0]
 [   24     0     0     0     0     0     0     0]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 4
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[5:6]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 6
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 7
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 8
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 9
WHM standard matrix: read unified buffer [6:7], write to host memory [1:2]. Flags? 0
[[0 0 0 0 0 0 0 0]]

PC = 10
H A L T
MMC Count: 3
HM Count: 2
ACT Count: 2
RW Count: 3
RW Reloads: 3
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_add passed
test/mullifier_examples/test_bfs/
Simulation terminated at cycle 1378
PC = 0
RHM standard matrix: read host memory [0:7], write to unified buffer [0:7]. Flags? 0
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]
 [     16088          0          0          0          0          0          0          0]
 [         0          0          1          0 4294967295          0          1 4294967295]
 [         1          0          3          0         56         72         66         78]
 [        77         24         64         72        216          0          0          0]]

PC = 1
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 1  0  3  0 56 72 66 78]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 27: read weight matrix 27 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 4
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 1  0  3  0 56 72 66 78]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 3 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 3 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 3 0 0 0 0 0 0]]
After activation:
[[0 3 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 3 0 0 0 0 0 0]]

PC = 6
RW 28: read weight matrix 28 into weight FIFO
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 105   0   0   0   0   0   1]]

PC = 7
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 105   0   0   0   0   0   1]]
MMC output: 
[[  0 105   0   0   0   0   0   1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 105   0   0   0   0   0   1]]

PC = 8
RHM pc return: create curent pc vector, write to unified buffer [9]. Flags? 2
[[ 0. 10.  0.  0.  0.  0.  0.  4.]]

PC = 9
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[  0 105   0   0   0   0   0   1]]
After activation:
[[  0 105   0   0   0   0   0   1]]
Branch from 9 to 115. No write to UB.

PC = 115
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 116
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[16088     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[16088     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[16088     0     0     0     0     0     0     0]]

PC = 117
RW 7: read weight matrix 7 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]

PC = 118
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 77  24  64  72 216   0   0   0]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]
MMC output: 
[[4294967080          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[16088     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[15872     0     0     0     0     0     0     0]]

PC = 119
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[15872     0     0     0     0     0     0     0]]
After activation:
[[15872     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15872     0     0     0     0     0     0     0]]

PC = 120
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 121
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15872     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15872     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15872     0     0     0     0     0     0     0]]

PC = 122
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[15872     0     0     0     0     0     0     0]]
After activation:
[[15872     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15872     0     0     0     0     0     0     0]]

PC = 123
WHM vec matrix: read unified buffer [9:36], write to host memory [1984:2011]. Buffer addr is 15872 -> [1984][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  3  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 124
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 125
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 3 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 126
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 127
RW 8: read weight matrix 8 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967183          0          0          0          0          0          1]]

PC = 128
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967183          0          0          0          0          0          1]]
MMC output: 
[[         0 4294967183          0          0          0          0          0          1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[         0 4294967183          0          0          0          0          0          1]]

PC = 129
RHM pc return: create curent pc vector, write to unified buffer [9]. Flags? 2
[[  0. 131.   0.   0.   0.   0.   0.   4.]]

PC = 130
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[         0 4294967183          0          0          0          0          0          1]]
After activation:
[[         0 4294967183          0          0          0          0          0          1]]
Branch from 130 to 18. No write to UB.

PC = 18
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 19
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 1  0  3  0 56 72 66 78]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[78  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 20
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: Before activation:
[[78  0  0  0  0  0  0  0]]
After activation:
[[78  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[78  0  0  0  0  0  0  0]]

PC = 21
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 22
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 77  24  64  72 216   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 23
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 24
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 25
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[77  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 26
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 27
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0 4294967295          0          1 4294967295]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[77  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 28
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 29
RHM vec cell: read host memory [9][5] and pad with 0s, write to unified buffer [13]. Buffer addr is 77 -> [9][5]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 30
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 31
MMC: multiply UB[11:12] with a weight, store in ACC[0:1]
MMC matrix: 
[[78  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[78  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 32
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 33
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[78  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[78  0  0  0  0  0  0  0]]

PC = 34
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[78  0  0  0  0  0  0  0]]
After activation:
[[78  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[78  0  0  0  0  0  0  0]]

PC = 35
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 36
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 37
ACT: read ACC[0:1], and write to UB[17:18]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 38
WHM vec cell: read unified buffer [17][0], write to host memory [9][6]. Buffer addr is 78 -> [9][6]. Flags? 1
UB[17]: [[0 0 0 0 0 0 0 0]]
HM[9] before: [         0 4294967295 4294967295 4294967295 4294967295          0          0          0]
HM[9]  after: [         0 4294967295 4294967295 4294967295 4294967295          0          0          0]

PC = 39
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 40
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 77  24  64  72 216   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 41
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 42
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 43
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[77  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 44
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 45
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0 4294967295          0          1 4294967295]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[77  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 46
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 47
RHM vec cell: read host memory [9][5] and pad with 0s, write to unified buffer [15]. Buffer addr is 77 -> [9][5]. Flags? 1
[[0. 0. 0. 0. 0. 0. 0. 0.]]

PC = 48
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 49
MMC: multiply UB[15:16] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 50
RW 2: read weight matrix 2 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 51
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0 4294967295          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 52
ACT: read ACC[0:1], and write to UB[16:17]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 53
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 54
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[77  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 55
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 56
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0 4294967295          0          1 4294967295]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[77  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 57
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 58
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 59
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 60
ACT: read ACC[0:1], and write to UB[17:18]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 61
WHM vec cell: read unified buffer [17][0], write to host memory [9][5]. Buffer addr is 77 -> [9][5]. Flags? 1
UB[17]: [[1 0 0 0 0 0 0 0]]
HM[9] before: [         0 4294967295 4294967295 4294967295 4294967295          0          0          0]
HM[9]  after: [         0 4294967295 4294967295 4294967295 4294967295          1          0          0]

PC = 62
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 63
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0 4294967295          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 64
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 65
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 66
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[  0 131   0   0   0   0   0   4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[  0 131   0   0   0   0   0   4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 131   0   0   0   0   0   4]]

PC = 67
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[  0 131   0   0   0   0   0   4]]
After activation:
[[  0 131   0   0   0   0   0   4]]
Unconditional jump from 67 to 131. No write to UB.

PC = 131
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 132
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15872     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15872     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15872     0     0     0     0     0     0     0]]

PC = 133
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[15872     0     0     0     0     0     0     0]]
After activation:
[[15872     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15872     0     0     0     0     0     0     0]]

PC = 134
RHM vec matrix: read host memory [1984:2011], write to unified buffer [9:36]. Buffer addr is 15872 -> [1984][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  3  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]
[[ 0 10  0  0  0  0  0  4]
 [ 0  3  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 135
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 136
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15872     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15872     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15872     0     0     0     0     0     0     0]]

PC = 137
RW 6: read weight matrix 6 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 138
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 77  24  64  72 216   0   0   0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[216   0   0   0   0   0   0   0]]
Accumulating with ACC[0:1]
[[15872     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[16088     0     0     0     0     0     0     0]]

PC = 139
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[16088     0     0     0     0     0     0     0]]
After activation:
[[16088     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16088     0     0     0     0     0     0     0]]

PC = 140
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 141
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 142
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 143
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 144
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 77  24  64  72 216   0   0   0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 145
ACT: read ACC[0:1], and write to UB[13:14]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 146
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 147
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 1  0  3  0 56 72 66 78]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[72  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[72  0  0  0  0  0  0  0]]

PC = 148
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[72  0  0  0  0  0  0  0]]
After activation:
[[72  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[72  0  0  0  0  0  0  0]]

PC = 149
RW 10: read weight matrix 10 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 150
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 1  0  3  0 56 72 66 78]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[66  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[66  0  0  0  0  0  0  0]]

PC = 151
ACT: read ACC[0:1], and write to UB[15:16]. Activation function: Before activation:
[[66  0  0  0  0  0  0  0]]
After activation:
[[66  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[66  0  0  0  0  0  0  0]]

PC = 152
RW 11: read weight matrix 11 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 153
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 154
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 154 to 155. No write to UB.

PC = 155
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 156
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[77  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[77  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 157
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 158
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[         0          0          1          0 4294967295          0          1 4294967295]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[77  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[77  0  0  0  0  0  0  0]]

PC = 159
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[77  0  0  0  0  0  0  0]]
After activation:
[[77  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[77  0  0  0  0  0  0  0]]

PC = 160
RHM vec cell: read host memory [9][5] and pad with 0s, write to unified buffer [16]. Buffer addr is 77 -> [9][5]. Flags? 1
[[1. 0. 0. 0. 0. 0. 0. 0.]]

PC = 161
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 162
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 1  0  3  0 56 72 66 78]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 163
RW 12: read weight matrix 12 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 164
MMC: multiply UB[16:17] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 1 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 1 0 0 0 0 0 0]]

PC = 165
ACT: read ACC[0:1], and write to UB[17:18]. Activation function: Before activation:
[[0 1 0 0 0 0 0 0]]
After activation:
[[0 1 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 1 0 0 0 0 0 0]]

PC = 166
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 167
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 168
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 169
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 170
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 171
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 3]]

PC = 172
RW 13: read weight matrix 13 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 173
MMC: multiply UB[17:18] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 1 0 0 0 0 0 0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 3]]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          3]]

PC = 174
ACT: read ACC[0:1], and write to UB[17:18]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          3]]
After activation:
[[4294967295          0          0          0          0          0          0          3]]
Less than check, evaluates to False (4294967295 !< 0).
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 175
RW 14: read weight matrix 14 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 176
MMC: multiply UB[17:18] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 177
ACT: read ACC[0:1], and write to UB[36:37]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 178
RW 15: read weight matrix 15 into weight FIFO
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 212   0   0   0   0   0   1]]

PC = 179
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 212   0   0   0   0   0   1]]
MMC output: 
[[  0 212   0   0   0   0   0   1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 212   0   0   0   0   0   1]]

PC = 180
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 181
MMC: multiply UB[36:37] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[  0 212   0   0   0   0   0   1]]
After MMC + ACC: 
[[  0 212   0   0   0   0   0   1]]

PC = 182
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[  0 212   0   0   0   0   0   1]]
After activation:
[[  0 212   0   0   0   0   0   1]]
Branch from 182 to 395. No write to UB.

PC = 395
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 396
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 1  0  3  0 56 72 66 78]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[72  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[72  0  0  0  0  0  0  0]]

PC = 397
ACT: read ACC[0:1], and write to UB[34:35]. Activation function: Before activation:
[[72  0  0  0  0  0  0  0]]
After activation:
[[72  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[72  0  0  0  0  0  0  0]]

PC = 398
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 399
MMC: multiply UB[34:35] with a weight, store in ACC[0:1]
MMC matrix: 
[[72  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[72  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[72  0  0  0  0  0  0  0]]

PC = 400
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 401
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 3 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[3 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[72  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[75  0  0  0  0  0  0  0]]

PC = 402
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[75  0  0  0  0  0  0  0]]
After activation:
[[75  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[75  0  0  0  0  0  0  0]]

PC = 403
RHM vec cell: read host memory [9][3] and pad with 0s, write to unified buffer [35]. Buffer addr is 75 -> [9][3]. Flags? 1
[[4.2949673e+09 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00]]

PC = 404
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 405
MMC: multiply UB[35:36] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967295          0          0          0          0          0          0          0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          0]]

PC = 406
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          0]]
After activation:
[[4294967295          0          0          0          0          0          0          0]]
Normal activation.
After branch/comparison/jump:
[[4294967295          0          0          0          0          0          0          0]]

PC = 407
RW 4: read weight matrix 4 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 408
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 0 10  0  0  0  0  0  4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[ 0 10  0  0  0  0  0  4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 10  0  0  0  0  0  4]]

PC = 409
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 10  0  0  0  0  0  4]]
After activation:
[[ 0 10  0  0  0  0  0  4]]
Unconditional jump from 409 to 10. No write to UB.

PC = 10
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 11
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967295          0          0          0          0          0          0          0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          0]]

PC = 12
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          0]]
After activation:
[[4294967295          0          0          0          0          0          0          0]]
Normal activation.
After branch/comparison/jump:
[[4294967295          0          0          0          0          0          0          0]]

PC = 13
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 14
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967295          0          0          0          0          0          0          0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[4294967295          0          0          0          0          0          0          0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[4294967295          0          0          0          0          0          0          0]]

PC = 15
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[4294967295          0          0          0          0          0          0          0]]
After activation:
[[4294967295          0          0          0          0          0          0          0]]
Normal activation.
After branch/comparison/jump:
[[4294967295          0          0          0          0          0          0          0]]

PC = 16
WHM standard matrix: read unified buffer [8:9], write to host memory [1:2]. Flags? 0
[[4294967295          0          0          0          0          0          0          0]]

PC = 17
H A L T
MMC Count: 51
HM Count: 12
ACT Count: 36
RW Count: 51
RW Reloads: 33
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 10, 11, 12, 13, 14, 15, 16, 17]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_bfs passed
test/mullifier_examples/test_branch_eq/
Simulation terminated at cycle 260
PC = 0
RHM standard matrix: read host memory [0:5], write to unified buffer [0:5]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [16040     0     0     0     0     0     0     0]
 [   40     0     0     0     0     0     0     0]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 4
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 6
RW 2: read weight matrix 2 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 7
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 8
RW 2: read weight matrix 2 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 9
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 10
RW 2: read weight matrix 2 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 11
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 12
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 2]]
After activation:
[[0 0 0 0 0 0 0 2]]
Equality check, evaluates to True.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 13
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 14
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 15
ACT: read ACC[0:1], and write to UB[5:6]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 16
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 17
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 1 0]]

PC = 18
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[0 0 0 0 0 0 1 0]]
After activation:
[[0 0 0 0 0 0 1 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 1 0]]

PC = 19
RW 4: read weight matrix 4 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [11  0  0  0  0  0  0  1]]

PC = 20
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [11  0  0  0  0  0  0  1]]
MMC output: 
[[11  0  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[11  0  0  0  0  0  0  1]]

PC = 21
RW 5: read weight matrix 5 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 22
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 1 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Accumulating with ACC[0:1]
[[11  0  0  0  0  0  0  1]]
After MMC + ACC: 
[[11  0  0  0  0  0  1  1]]

PC = 23
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[11  0  0  0  0  0  1  1]]
After activation:
[[11  0  0  0  0  0  1  1]]
Branch from 23 to 35. No write to UB.

PC = 35
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 36
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 37
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 38
WHM standard matrix: read unified buffer [8:9], write to host memory [1:2]. Flags? 0
[[0 0 0 0 0 0 0 0]]

PC = 39
H A L T
MMC Count: 10
HM Count: 2
ACT Count: 6
RW Count: 10
RW Reloads: 8
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 36, 37, 38, 39]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_branch_eq passed
test/mullifier_examples/test_call/
Simulation terminated at cycle 390
PC = 0
RHM standard matrix: read host memory [0:5], write to unified buffer [0:5]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [16040     0     0     0     0     0     0     0]
 [    5     7    32    40     0     0     0     0]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 4
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 6
RW 4: read weight matrix 4 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 13  0  0  0  0  0  1]]

PC = 7
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 13  0  0  0  0  0  1]]
MMC output: 
[[ 0 13  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 13  0  0  0  0  0  1]]

PC = 8
RHM pc return: create curent pc vector, write to unified buffer [8]. Flags? 2
[[ 0. 10.  0.  0.  0.  0.  0.  4.]]

PC = 9
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 13  0  0  0  0  0  1]]
After activation:
[[ 0 13  0  0  0  0  0  1]]
Branch from 9 to 23. No write to UB.

PC = 23
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 24
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 25
RW 1: read weight matrix 1 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]

PC = 26
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 27
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 28
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 29
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 30
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 31
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  7 32 40  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[5 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[5 0 0 0 0 0 0 0]]

PC = 32
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: Before activation:
[[5 0 0 0 0 0 0 0]]
After activation:
[[5 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[5 0 0 0 0 0 0 0]]

PC = 33
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 34
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 35
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 36
MMC: multiply UB[11:12] with a weight, store in ACC[0:1]
MMC matrix: 
[[5 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[5 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[5 0 0 0 0 0 0 0]]

PC = 37
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[5 0 0 0 0 0 0 0]]
After activation:
[[5 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[5 0 0 0 0 0 0 0]]

PC = 38
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 39
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[5 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[5 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[5 0 0 0 0 0 0 0]]

PC = 40
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[5 0 0 0 0 0 0 0]]
After activation:
[[5 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[5 0 0 0 0 0 0 0]]

PC = 41
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 42
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 0 10  0  0  0  0  0  4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[ 0 10  0  0  0  0  0  4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 10  0  0  0  0  0  4]]

PC = 43
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 10  0  0  0  0  0  4]]
After activation:
[[ 0 10  0  0  0  0  0  4]]
Unconditional jump from 43 to 10. No write to UB.

PC = 10
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 11
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[5 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[5 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[5 0 0 0 0 0 0 0]]

PC = 12
ACT: read ACC[0:1], and write to UB[5:6]. Activation function: Before activation:
[[5 0 0 0 0 0 0 0]]
After activation:
[[5 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[5 0 0 0 0 0 0 0]]

PC = 13
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 14
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[5 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[5 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[5 0 0 0 0 0 0 0]]

PC = 15
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 16
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 5  7 32 40  0  0  0  0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[7 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[5 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[12  0  0  0  0  0  0  0]]

PC = 17
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[12  0  0  0  0  0  0  0]]
After activation:
[[12  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[12  0  0  0  0  0  0  0]]

PC = 18
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 19
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[12  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[12  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[12  0  0  0  0  0  0  0]]

PC = 20
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[12  0  0  0  0  0  0  0]]
After activation:
[[12  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[12  0  0  0  0  0  0  0]]

PC = 21
WHM standard matrix: read unified buffer [7:8], write to host memory [1:2]. Flags? 0
[[12  0  0  0  0  0  0  0]]

PC = 22
H A L T
MMC Count: 15
HM Count: 3
ACT Count: 10
RW Count: 15
RW Reloads: 10
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_call passed
test/mullifier_examples/test_construct_tensor/
Simulation terminated at cycle 134
PC = 0
RHM standard matrix: read host memory [0:5], write to unified buffer [0:5]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [16040     0     0     0     0     0     0     0]
 [   32     0     0     0     0     0     0     0]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 4
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[5:6]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 6
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 7
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 8
RW 2: read weight matrix 2 into weight FIFO
[[4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]

PC = 9
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 10
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 11
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 12
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 13
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 14
WHM standard matrix: read unified buffer [7:8], write to host memory [1:2]. Flags? 0
[[0 0 0 0 0 0 0 0]]

PC = 15
H A L T
MMC Count: 5
HM Count: 2
ACT Count: 3
RW Count: 5
RW Reloads: 5
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_construct_tensor passed
test/mullifier_examples/test_fib/
Simulation terminated at cycle 260
PC = 0
RHM standard matrix: read host memory [0:5], write to unified buffer [0:5]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [16040     0     0     0     0     0     0     0]
 [    1     1     0    64     0     0     0     0]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 4
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 1  1  0 64  0  0  0  0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 6
RW 2: read weight matrix 2 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 7
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 8
RW 2: read weight matrix 2 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 9
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 10
RW 2: read weight matrix 2 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 11
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 12
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[0 0 0 0 0 0 0 2]]
After activation:
[[0 0 0 0 0 0 0 2]]
Equality check, evaluates to True.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 13
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 14
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 1  1  0 64  0  0  0  0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 15
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 16
RW 4: read weight matrix 4 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 17
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 1 0]]

PC = 18
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: Before activation:
[[0 0 0 0 0 0 1 0]]
After activation:
[[0 0 0 0 0 0 1 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 1 0]]

PC = 19
RW 5: read weight matrix 5 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [59  0  0  0  0  0  0  1]]

PC = 20
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [59  0  0  0  0  0  0  1]]
MMC output: 
[[59  0  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[59  0  0  0  0  0  0  1]]

PC = 21
RW 6: read weight matrix 6 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 22
MMC: multiply UB[11:12] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 1 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Accumulating with ACC[0:1]
[[59  0  0  0  0  0  0  1]]
After MMC + ACC: 
[[59  0  0  0  0  0  1  1]]

PC = 23
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[59  0  0  0  0  0  1  1]]
After activation:
[[59  0  0  0  0  0  1  1]]
Branch from 23 to 83. No write to UB.

PC = 83
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 84
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 85
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 86
WHM standard matrix: read unified buffer [11:12], write to host memory [1:2]. Flags? 0
[[0 0 0 0 0 0 0 0]]

PC = 87
H A L T
MMC Count: 10
HM Count: 2
ACT Count: 6
RW Count: 10
RW Reloads: 8
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 83, 84, 85, 86, 87]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_fib passed
test/mullifier_examples/test_global/
Simulation terminated at cycle 240
PC = 0
RHM standard matrix: read host memory [0:5], write to unified buffer [0:5]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [16056     0     0     0     0     0     0     0]
 [    3     0    40    47    40     0     0     0]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 3  0 40 47 40  0  0  0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[40  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[40  0  0  0  0  0  0  0]]

PC = 3
ACT: read ACC[0:1], and write to UB[5:6]. Activation function: Before activation:
[[40  0  0  0  0  0  0  0]]
After activation:
[[40  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[40  0  0  0  0  0  0  0]]

PC = 4
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 5
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[40  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[40  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[40  0  0  0  0  0  0  0]]

PC = 6
RW 2: read weight matrix 2 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 7
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 3  0 40 47 40  0  0  0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[40  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[40  0  0  0  0  0  0  0]]

PC = 8
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[40  0  0  0  0  0  0  0]]
After activation:
[[40  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[40  0  0  0  0  0  0  0]]

PC = 9
RHM vec cell: read host memory [5][0] and pad with 0s, write to unified buffer [6]. Buffer addr is 40 -> [5][0]. Flags? 1
[[1. 0. 0. 0. 0. 0. 0. 0.]]

PC = 10
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 11
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 12
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 13
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[1 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 14
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 15
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 16
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[40  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[40  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[40  0  0  0  0  0  0  0]]

PC = 17
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 18
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 3  0 40 47 40  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[3 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[40  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[43  0  0  0  0  0  0  0]]

PC = 19
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[43  0  0  0  0  0  0  0]]
After activation:
[[43  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[43  0  0  0  0  0  0  0]]

PC = 20
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 21
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 22
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 23
WHM vec cell: read unified buffer [8][0], write to host memory [5][3]. Buffer addr is 43 -> [5][3]. Flags? 1
UB[8]: [[1 0 0 0 0 0 0 0]]
HM[5] before: [1 2 3 4 5 6 7 8]
HM[5]  after: [1 2 3 1 5 6 7 8]

PC = 24
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 25
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 26
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 27
WHM standard matrix: read unified buffer [8:9], write to host memory [1:2]. Flags? 0
[[1 0 0 0 0 0 0 0]]

PC = 28
H A L T
MMC Count: 9
HM Count: 4
ACT Count: 6
RW Count: 9
RW Reloads: 4
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_global passed
test/mullifier_examples/test_insertion_sort/
Simulation terminated at cycle 419
PC = 0
RHM standard matrix: read host memory [0:6], write to unified buffer [0:6]. Flags? 0
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]
 [     16064          0          0          0          0          0          0          0]
 [        10          1 4294967295          1          0          0          1          0]
 [        48         24        160          0          0          0          0          0]]

PC = 1
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: padded with 1 0-rows
Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 2
RW 22: read weight matrix 22 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 8 0 0 0 0 0 1]]

PC = 3
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 8 0 0 0 0 0 1]]
MMC output: 
[[0 8 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 8 0 0 0 0 0 1]]

PC = 4
RHM pc return: create curent pc vector, write to unified buffer [8]. Flags? 2
[[0. 6. 0. 0. 0. 0. 0. 4.]]

PC = 5
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 8 0 0 0 0 0 1]]
After activation:
[[0 8 0 0 0 0 0 1]]
Branch from 5 to 14. No write to UB.

PC = 14
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 15
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[        10          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 16
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 17
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 18
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 19
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 19 to 20. No write to UB.

PC = 20
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 21
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 22
RW 3: read weight matrix 3 into weight FIFO
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 23
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[        10          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[ 0 10  0  0  0  0  0  0]]
Accumulating with ACC[0:1]
[[1 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[ 1 10  0  0  0  0  0  0]]

PC = 24
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[ 1 10  0  0  0  0  0  0]]
After activation:
[[ 1 10  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[ 1 10  0  0  0  0  0  0]]

PC = 25
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 26
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 27
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 28
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 29
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 30
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 3]]

PC = 31
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 32
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 1 10  0  0  0  0  0  0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[4294967287          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 3]]
After MMC + ACC: 
[[4294967287          0          0          0          0          0          0          3]]

PC = 33
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[4294967287          0          0          0          0          0          0          3]]
After activation:
[[4294967287          0          0          0          0          0          0          3]]
Less than check, evaluates to False (4294967287 !< 0).
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 34
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 35
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 36
ACT: read ACC[0:1], and write to UB[28:29]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 37
RW 6: read weight matrix 6 into weight FIFO
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 181   0   0   0   0   0   1]]

PC = 38
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0   0   0]
 [  0 181   0   0   0   0   0   1]]
MMC output: 
[[  0 181   0   0   0   0   0   1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[  0 181   0   0   0   0   0   1]]

PC = 39
RW 7: read weight matrix 7 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 40
MMC: multiply UB[28:29] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[  0 181   0   0   0   0   0   1]]
After MMC + ACC: 
[[  0 181   0   0   0   0   0   1]]

PC = 41
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[  0 181   0   0   0   0   0   1]]
After activation:
[[  0 181   0   0   0   0   0   1]]
Branch from 41 to 223. No write to UB.

PC = 223
RW 10: read weight matrix 10 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 224
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[        10          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 225
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 226
RW 7: read weight matrix 7 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 227
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 6 0 0 0 0 0 4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 6 0 0 0 0 0 4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 6 0 0 0 0 0 4]]

PC = 228
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 6 0 0 0 0 0 4]]
After activation:
[[0 6 0 0 0 0 0 4]]
Unconditional jump from 228 to 6. No write to UB.

PC = 6
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 7
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 8
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 9
RW 23: read weight matrix 23 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]

PC = 10
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[        10          1 4294967295          1          0          0          1          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 11
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 12
WHM standard matrix: read unified buffer [7:8], write to host memory [1:2]. Flags? 0
[[0 0 0 0 0 0 0 0]]

PC = 13
H A L T
MMC Count: 16
HM Count: 3
ACT Count: 12
RW Count: 16
RW Reloads: 13
PC history:
 [0, 1, 2, 3, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 223, 224, 225, 226, 227, 228, 6, 7, 8, 9, 10, 11, 12, 13]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_insertion_sort passed
test/mullifier_examples/test_non_driver_call/
Simulation terminated at cycle 738
PC = 0
RHM standard matrix: read host memory [0:5], write to unified buffer [0:5]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [16040     0     0     0     0     0     0     0]
 [   42     5     7    32    24    48     0     0]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 7: read weight matrix 7 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 4
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 6
RW 8: read weight matrix 8 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 24  0  0  0  0  0  1]]

PC = 7
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 24  0  0  0  0  0  1]]
MMC output: 
[[ 0 24  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 24  0  0  0  0  0  1]]

PC = 8
RHM pc return: create curent pc vector, write to unified buffer [8]. Flags? 2
[[ 0. 10.  0.  0.  0.  0.  0.  4.]]

PC = 9
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 24  0  0  0  0  0  1]]
After activation:
[[ 0 24  0  0  0  0  0  1]]
Branch from 9 to 34. No write to UB.

PC = 34
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 35
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 36
RW 2: read weight matrix 2 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]

PC = 37
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 38
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 39
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 40
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 41
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 42
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[42  5  7 32 24 48  0  0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[5 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[5 0 0 0 0 0 0 0]]

PC = 43
ACT: read ACC[0:1], and write to UB[11:12]. Activation function: Before activation:
[[5 0 0 0 0 0 0 0]]
After activation:
[[5 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[5 0 0 0 0 0 0 0]]

PC = 44
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 45
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 46
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 47
MMC: multiply UB[11:12] with a weight, store in ACC[0:1]
MMC matrix: 
[[5 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[5 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[5 0 0 0 0 0 0 0]]

PC = 48
ACT: read ACC[0:1], and write to UB[12:13]. Activation function: Before activation:
[[5 0 0 0 0 0 0 0]]
After activation:
[[5 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[5 0 0 0 0 0 0 0]]

PC = 49
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 50
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[16040     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[16040     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[16040     0     0     0     0     0     0     0]]

PC = 51
RW 4: read weight matrix 4 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]

PC = 52
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[42  5  7 32 24 48  0  0]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]
MMC output: 
[[4294967248          0          0          0          0          0          0          0]]
Accumulating with ACC[0:1]
[[16040     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[15992     0     0     0     0     0     0     0]]

PC = 53
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[15992     0     0     0     0     0     0     0]]
After activation:
[[15992     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15992     0     0     0     0     0     0     0]]

PC = 54
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 55
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15992     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15992     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15992     0     0     0     0     0     0     0]]

PC = 56
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[15992     0     0     0     0     0     0     0]]
After activation:
[[15992     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15992     0     0     0     0     0     0     0]]

PC = 57
WHM vec matrix: read unified buffer [8:14], write to host memory [1999:2005]. Buffer addr is 15992 -> [1999][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 58
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 59
MMC: multiply UB[12:13] with a weight, store in ACC[0:1]
MMC matrix: 
[[5 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[5 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[5 0 0 0 0 0 0 0]]

PC = 60
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: Before activation:
[[5 0 0 0 0 0 0 0]]
After activation:
[[5 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[5 0 0 0 0 0 0 0]]

PC = 61
RW 5: read weight matrix 5 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967254          0          0          0          0          0          1]]

PC = 62
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0 4294967254          0          0          0          0          0          1]]
MMC output: 
[[         0 4294967254          0          0          0          0          0          1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[         0 4294967254          0          0          0          0          0          1]]

PC = 63
RHM pc return: create curent pc vector, write to unified buffer [8]. Flags? 2
[[ 0. 65.  0.  0.  0.  0.  0.  4.]]

PC = 64
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[         0 4294967254          0          0          0          0          0          1]]
After activation:
[[         0 4294967254          0          0          0          0          0          1]]
Branch from 64 to 23. No write to UB.

PC = 23
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 24
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[5 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[5 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[5 0 0 0 0 0 0 0]]

PC = 25
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 26
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[42  5  7 32 24 48  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[42  0  0  0  0  0  0  0]]
Accumulating with ACC[0:1]
[[5 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[47  0  0  0  0  0  0  0]]

PC = 27
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[47  0  0  0  0  0  0  0]]
After activation:
[[47  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[47  0  0  0  0  0  0  0]]

PC = 28
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 29
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[47  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[47  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[47  0  0  0  0  0  0  0]]

PC = 30
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[47  0  0  0  0  0  0  0]]
After activation:
[[47  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[47  0  0  0  0  0  0  0]]

PC = 31
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 32
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 0 65  0  0  0  0  0  4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[ 0 65  0  0  0  0  0  4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 65  0  0  0  0  0  4]]

PC = 33
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 65  0  0  0  0  0  4]]
After activation:
[[ 0 65  0  0  0  0  0  4]]
Unconditional jump from 33 to 65. No write to UB.

PC = 65
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 66
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15992     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15992     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15992     0     0     0     0     0     0     0]]

PC = 67
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[15992     0     0     0     0     0     0     0]]
After activation:
[[15992     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[15992     0     0     0     0     0     0     0]]

PC = 68
RHM vec matrix: read host memory [1999:2005], write to unified buffer [8:14]. Buffer addr is 15992 -> [1999][0]. Flags? 1
[[ 0 10  0  0  0  0  0  4]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]
[[ 0 10  0  0  0  0  0  4]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0  0]
 [ 5  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]]

PC = 69
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 70
MMC: multiply UB[3:4] with a weight, store in ACC[0:1]
MMC matrix: 
[[15992     0     0     0     0     0     0     0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[15992     0     0     0     0     0     0     0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[15992     0     0     0     0     0     0     0]]

PC = 71
RW 6: read weight matrix 6 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 72
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[42  5  7 32 24 48  0  0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[48  0  0  0  0  0  0  0]]
Accumulating with ACC[0:1]
[[15992     0     0     0     0     0     0     0]]
After MMC + ACC: 
[[16040     0     0     0     0     0     0     0]]

PC = 73
ACT: read ACC[0:1], and write to UB[3:4]. Activation function: Before activation:
[[16040     0     0     0     0     0     0     0]]
After activation:
[[16040     0     0     0     0     0     0     0]]
Normal activation.
After branch/comparison/jump:
[[16040     0     0     0     0     0     0     0]]

PC = 74
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 75
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[47  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[47  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[47  0  0  0  0  0  0  0]]

PC = 76
ACT: read ACC[0:1], and write to UB[13:14]. Activation function: Before activation:
[[47  0  0  0  0  0  0  0]]
After activation:
[[47  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[47  0  0  0  0  0  0  0]]

PC = 77
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 78
MMC: multiply UB[13:14] with a weight, store in ACC[0:1]
MMC matrix: 
[[47  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[47  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[47  0  0  0  0  0  0  0]]

PC = 79
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[47  0  0  0  0  0  0  0]]
After activation:
[[47  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[47  0  0  0  0  0  0  0]]

PC = 80
RW 1: read weight matrix 1 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 81
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 0 10  0  0  0  0  0  4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[ 0 10  0  0  0  0  0  4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 10  0  0  0  0  0  4]]

PC = 82
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 10  0  0  0  0  0  4]]
After activation:
[[ 0 10  0  0  0  0  0  4]]
Unconditional jump from 82 to 10. No write to UB.

PC = 10
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 11
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[47  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[47  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[47  0  0  0  0  0  0  0]]

PC = 12
ACT: read ACC[0:1], and write to UB[5:6]. Activation function: Before activation:
[[47  0  0  0  0  0  0  0]]
After activation:
[[47  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[47  0  0  0  0  0  0  0]]

PC = 13
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 14
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[47  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[47  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[47  0  0  0  0  0  0  0]]

PC = 15
RW 9: read weight matrix 9 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 16
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[42  5  7 32 24 48  0  0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[7 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[47  0  0  0  0  0  0  0]]
After MMC + ACC: 
[[54  0  0  0  0  0  0  0]]

PC = 17
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[54  0  0  0  0  0  0  0]]
After activation:
[[54  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[54  0  0  0  0  0  0  0]]

PC = 18
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 19
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[54  0  0  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[54  0  0  0  0  0  0  0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[54  0  0  0  0  0  0  0]]

PC = 20
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[54  0  0  0  0  0  0  0]]
After activation:
[[54  0  0  0  0  0  0  0]]
Normal activation.
After branch/comparison/jump:
[[54  0  0  0  0  0  0  0]]

PC = 21
WHM standard matrix: read unified buffer [7:8], write to host memory [1:2]. Flags? 0
[[54  0  0  0  0  0  0  0]]

PC = 22
H A L T
MMC Count: 28
HM Count: 6
ACT Count: 20
RW Count: 28
RW Reloads: 20
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_non_driver_call passed
test/mullifier_examples/test_pointer_sum/
Simulation terminated at cycle 334
PC = 0
RHM standard matrix: read host memory [0:5], write to unified buffer [0:5]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [16040     0     0     0     0     0     0     0]
 [    0     1     0    56     0     0     0     0]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 0  1  0 56  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 4
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 0  1  0 56  0  0  0  0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[5:6]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 6
RW 2: read weight matrix 2 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]

PC = 7
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 8
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 0 0 0 0 0 0 1]]
After activation:
[[0 0 0 0 0 0 0 1]]
Branch from 8 to 9. No write to UB.

PC = 9
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 10
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 11
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 12
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 13
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 14
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 15
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 16
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 17
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 18
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 19
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 3]]

PC = 20
RW 4: read weight matrix 4 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 21
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 3]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 3]]

PC = 22
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 3]]
After activation:
[[0 0 0 0 0 0 0 3]]
Less than check, evaluates to False (0 !< 0).
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 23
RW 5: read weight matrix 5 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 24
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 25
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 26
RW 6: read weight matrix 6 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 24  0  0  0  0  0  1]]

PC = 27
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0 24  0  0  0  0  0  1]]
MMC output: 
[[ 0 24  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[ 0 24  0  0  0  0  0  1]]

PC = 28
RW 7: read weight matrix 7 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 29
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[ 0 24  0  0  0  0  0  1]]
After MMC + ACC: 
[[ 0 24  0  0  0  0  0  1]]

PC = 30
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[ 0 24  0  0  0  0  0  1]]
After activation:
[[ 0 24  0  0  0  0  0  1]]
Branch from 30 to 55. No write to UB.

PC = 55
RW 8: read weight matrix 8 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 56
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 57
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 58
WHM standard matrix: read unified buffer [10:11], write to host memory [1:2]. Flags? 0
[[0 0 0 0 0 0 0 0]]

PC = 59
H A L T
MMC Count: 13
HM Count: 2
ACT Count: 7
RW Count: 13
RW Reloads: 10
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 55, 56, 57, 58, 59]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_pointer_sum passed
test/mullifier_examples/test_rec_add_1/
Simulation terminated at cycle 392
PC = 0
RHM standard matrix: read host memory [0:5], write to unified buffer [0:5]. Flags? 0
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]
 [     16040          0          0          0          0          0          0          0]
 [4294967295          0          1         24         56          0          0          0]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
ACT: read ACC[0:1], and write to UB[8:9]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 4
RW 12: read weight matrix 12 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 8 0 0 0 0 0 1]]

PC = 5
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 8 0 0 0 0 0 1]]
MMC output: 
[[0 8 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 8 0 0 0 0 0 1]]

PC = 6
RHM pc return: create curent pc vector, write to unified buffer [7]. Flags? 2
[[0. 8. 0. 0. 0. 0. 0. 4.]]

PC = 7
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 8 0 0 0 0 0 1]]
After activation:
[[0 8 0 0 0 0 0 1]]
Branch from 7 to 16. No write to UB.

PC = 16
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 17
MMC: multiply UB[8:9] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 18
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 19
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967295          0          1         24         56          0          0          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 20
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 21
RW 2: read weight matrix 2 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 22
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 23
RW 2: read weight matrix 2 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 24
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 25
RW 2: read weight matrix 2 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 26
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 27
ACT: read ACC[0:1], and write to UB[10:11]. Activation function: Before activation:
[[0 0 0 0 0 0 0 2]]
After activation:
[[0 0 0 0 0 0 0 2]]
Equality check, evaluates to True.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 28
RW 3: read weight matrix 3 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 29
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967295          0          1         24         56          0          0          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 30
ACT: read ACC[0:1], and write to UB[9:10]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 31
RW 4: read weight matrix 4 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 32
MMC: multiply UB[10:11] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 1 0]]

PC = 33
ACT: read ACC[0:1], and write to UB[14:15]. Activation function: Before activation:
[[0 0 0 0 0 0 1 0]]
After activation:
[[0 0 0 0 0 0 1 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 1 0]]

PC = 34
RW 5: read weight matrix 5 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [44  0  0  0  0  0  0  1]]

PC = 35
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [44  0  0  0  0  0  0  1]]
MMC output: 
[[44  0  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[44  0  0  0  0  0  0  1]]

PC = 36
RW 6: read weight matrix 6 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 37
MMC: multiply UB[14:15] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 1 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Accumulating with ACC[0:1]
[[44  0  0  0  0  0  0  1]]
After MMC + ACC: 
[[44  0  0  0  0  0  1  1]]

PC = 38
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[44  0  0  0  0  0  1  1]]
After activation:
[[44  0  0  0  0  0  1  1]]
Branch from 38 to 83. No write to UB.

PC = 83
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 84
MMC: multiply UB[9:10] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 85
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 86
RW 6: read weight matrix 6 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 87
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 8 0 0 0 0 0 4]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 8 0 0 0 0 0 4]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 8 0 0 0 0 0 4]]

PC = 88
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 8 0 0 0 0 0 4]]
After activation:
[[0 8 0 0 0 0 0 4]]
Unconditional jump from 88 to 8. No write to UB.

PC = 8
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 9
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 10
ACT: read ACC[0:1], and write to UB[5:6]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 11
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 12
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 13
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 14
WHM standard matrix: read unified buffer [6:7], write to host memory [1:2]. Flags? 0
[[0 0 0 0 0 0 0 0]]

PC = 15
H A L T
MMC Count: 15
HM Count: 3
ACT Count: 11
RW Count: 15
RW Reloads: 12
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 83, 84, 85, 86, 87, 88, 8, 9, 10, 11, 12, 13, 14, 15]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_rec_add_1 passed
test/mullifier_examples/test_rec_fib/
Simulation terminated at cycle 364
PC = 0
RHM standard matrix: read host memory [0:7], write to unified buffer [0:7]. Flags? 0
[[         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]
 [     16056          0          0          0          0          0          0          0]
 [4294967295 4294967294          1          1          0 4294967289 4294967288 4294967290]
 [4294967291 4294967292 4294967293 4294967295 4294967294          1          1          0]
 [       984         88          0          0          0          0          0          0]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 15: read weight matrix 15 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]]

PC = 4
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967291 4294967292 4294967293 4294967295 4294967294          1          1          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[37:38]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 6
RW 2: read weight matrix 2 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 7
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 1]]

PC = 8
RW 2: read weight matrix 2 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 9
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 1]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 10
RW 2: read weight matrix 2 into weight FIFO
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]

PC = 11
MMC: multiply UB[37:38] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[         1          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 2]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 2]]

PC = 12
ACT: read ACC[0:1], and write to UB[37:38]. Activation function: Before activation:
[[0 0 0 0 0 0 0 2]]
After activation:
[[0 0 0 0 0 0 0 2]]
Equality check, evaluates to True.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 13
RW 16: read weight matrix 16 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 14
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[4294967291 4294967292 4294967293 4294967295 4294967294          1          1          0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[1 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1 0 0 0 0 0 0 0]]

PC = 15
ACT: read ACC[0:1], and write to UB[7:8]. Activation function: Before activation:
[[1 0 0 0 0 0 0 0]]
After activation:
[[1 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[1 0 0 0 0 0 0 0]]

PC = 16
RW 4: read weight matrix 4 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 17
MMC: multiply UB[37:38] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 1 0]]

PC = 18
ACT: read ACC[0:1], and write to UB[128:129]. Activation function: Before activation:
[[0 0 0 0 0 0 1 0]]
After activation:
[[0 0 0 0 0 0 1 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 1 0]]

PC = 19
RW 17: read weight matrix 17 into weight FIFO
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [18  0  0  0  0  0  0  1]]

PC = 20
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0]
 [18  0  0  0  0  0  0  1]]
MMC output: 
[[18  0  0  0  0  0  0  1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[18  0  0  0  0  0  0  1]]

PC = 21
RW 6: read weight matrix 6 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 22
MMC: multiply UB[128:129] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 1 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Accumulating with ACC[0:1]
[[18  0  0  0  0  0  0  1]]
After MMC + ACC: 
[[18  0  0  0  0  0  1  1]]

PC = 23
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[18  0  0  0  0  0  1  1]]
After activation:
[[18  0  0  0  0  0  1  1]]
Branch from 23 to 42. No write to UB.

PC = 42
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 43
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 44
ACT: read ACC[0:1], and write to UB[36:37]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 45
RW 4: read weight matrix 4 into weight FIFO
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 46
MMC: multiply UB[7:8] with a weight, store in ACC[0:1]
MMC matrix: 
[[1 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 1 0]]

PC = 47
ACT: read ACC[0:1], and write to UB[128:129]. Activation function: Before activation:
[[0 0 0 0 0 0 1 0]]
After activation:
[[0 0 0 0 0 0 1 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 1 0]]

PC = 48
RW 20: read weight matrix 20 into weight FIFO
[[   0    0    0    0    0    0    0    0]
 [   0    0    0    0    0    0    0    0]
 [   0    0    0    0    0    0    0    0]
 [   0    0    0    0    0    0    0    0]
 [   0    0    0    0    0    0    0    0]
 [   0    0    0    0    0    0    0    0]
 [   0    0    0    0    0    0    0    0]
 [1203    0    0    0    0    0    0    1]]

PC = 49
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[   0    0    0    0    0    0    0    0]
 [   0    0    0    0    0    0    0    0]
 [   0    0    0    0    0    0    0    0]
 [   0    0    0    0    0    0    0    0]
 [   0    0    0    0    0    0    0    0]
 [   0    0    0    0    0    0    0    0]
 [   0    0    0    0    0    0    0    0]
 [1203    0    0    0    0    0    0    1]]
MMC output: 
[[1203    0    0    0    0    0    0    1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[1203    0    0    0    0    0    0    1]]

PC = 50
RW 6: read weight matrix 6 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 51
MMC: multiply UB[128:129] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 1 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 1 0]]
Accumulating with ACC[0:1]
[[1203    0    0    0    0    0    0    1]]
After MMC + ACC: 
[[1203    0    0    0    0    0    1    1]]

PC = 52
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[1203    0    0    0    0    0    1    1]]
After activation:
[[1203    0    0    0    0    0    1    1]]
Branch from 52 to 1256. No write to UB.

PC = 1256
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 1257
MMC: multiply UB[36:37] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 1258
ACT: read ACC[0:1], and write to UB[128:129]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 1259
WHM standard matrix: read unified buffer [128:129], write to host memory [1:2]. Flags? 0
[[0 0 0 0 0 0 0 0]]

PC = 1260
H A L T
MMC Count: 14
HM Count: 2
ACT Count: 9
RW Count: 14
RW Reloads: 12
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 1256, 1257, 1258, 1259, 1260]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_rec_fib passed
test/mullifier_examples/test_simple_branch/
Simulation terminated at cycle 160
PC = 0
RHM standard matrix: read host memory [0:5], write to unified buffer [0:5]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [16040     0     0     0     0     0     0     0]
 [   24     0     0     0     0     0     0     0]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 4
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 5 0 0 0 0 0 1]]

PC = 5
MMC: multiply UB[2:3] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 1]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 5 0 0 0 0 0 1]]
MMC output: 
[[0 5 0 0 0 0 0 1]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 5 0 0 0 0 0 1]]

PC = 6
RW 2: read weight matrix 2 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]

PC = 7
MMC: multiply UB[6:7] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0]
 [0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 5 0 0 0 0 0 1]]
After MMC + ACC: 
[[0 5 0 0 0 0 0 1]]

PC = 8
ACT: read ACC[0:1], and write to UB[0:1]. Activation function: Before activation:
[[0 5 0 0 0 0 0 1]]
After activation:
[[0 5 0 0 0 0 0 1]]
Branch from 8 to 14. No write to UB.

PC = 14
RW 3: read weight matrix 3 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 15
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 16
RW 3: read weight matrix 3 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 17
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 18
ACT: read ACC[0:1], and write to UB[5:6]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 19
RW 3: read weight matrix 3 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 20
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 21
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 22
WHM standard matrix: read unified buffer [6:7], write to host memory [1:2]. Flags? 0
[[0 0 0 0 0 0 0 0]]

PC = 23
H A L T
MMC Count: 6
HM Count: 2
ACT Count: 4
RW Count: 6
RW Reloads: 4
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_simple_branch passed
test/mullifier_examples/test_simple_store/
Simulation terminated at cycle 112
PC = 0
RHM standard matrix: read host memory [0:5], write to unified buffer [0:5]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [16040     0     0     0     0     0     0     0]
 [    0     0    16     0     0     0     0     0]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 4
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 0  0 16  0  0  0  0  0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[4095:4096]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 6
RW 1: read weight matrix 1 into weight FIFO
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 7
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 8
ACT: read ACC[0:1], and write to UB[5:6]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 9
WHM vec cell: read unified buffer [5][0], write to host memory [0][0]. Buffer addr is 0 -> [0][0]. Flags? 1
UB[5]: [[0 0 0 0 0 0 0 0]]
HM[0] before: [0 0 0 0 0 0 0 0]
HM[0]  after: [0 0 0 0 0 0 0 0]

PC = 10
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 11
MMC: multiply UB[4:5] with a weight, store in ACC[0:1]
MMC matrix: 
[[ 0  0 16  0  0  0  0  0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 12
ACT: read ACC[0:1], and write to UB[5:6]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 13
WHM standard matrix: read unified buffer [5:6], write to host memory [1:2]. Flags? 0
[[0 0 0 0 0 0 0 0]]

PC = 14
H A L T
MMC Count: 4
HM Count: 3
ACT Count: 3
RW Count: 4
RW Reloads: 3
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_simple_store passed
test/mullifier_examples/test_sub/
Simulation terminated at cycle 84
PC = 0
RHM standard matrix: read host memory [0:5], write to unified buffer [0:5]. Flags? 0
[[    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     0]
 [    0     0     0     0     0     0     0     1]
 [16040     0     0     0     0     0     0     0]
 [   24     0     0     0     0     0     0     0]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 2
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 3
RW 1: read weight matrix 1 into weight FIFO
[[         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]

PC = 4
MMC: multiply UB[0:1] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[         0          0          0          0          0          0          0          0]
 [4294967295          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]
 [         0          0          0          0          0          0          0          0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Accumulating with ACC[0:1]
[[0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 5
ACT: read ACC[0:1], and write to UB[5:6]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 6
RW 0: read weight matrix 0 into weight FIFO
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]

PC = 7
MMC: multiply UB[5:6] with a weight, store in ACC[0:1]
MMC matrix: 
[[0 0 0 0 0 0 0 0]]
MMC weight: 
[[1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0]]
MMC output: 
[[0 0 0 0 0 0 0 0]]
Overwriting ACC[0:1]
After MMC + ACC: 
[[0 0 0 0 0 0 0 0]]

PC = 8
ACT: read ACC[0:1], and write to UB[6:7]. Activation function: Before activation:
[[0 0 0 0 0 0 0 0]]
After activation:
[[0 0 0 0 0 0 0 0]]
Normal activation.
After branch/comparison/jump:
[[0 0 0 0 0 0 0 0]]

PC = 9
WHM standard matrix: read unified buffer [6:7], write to host memory [1:2]. Flags? 0
[[0 0 0 0 0 0 0 0]]

PC = 10
H A L T
MMC Count: 3
HM Count: 2
ACT Count: 2
RW Count: 3
RW Reloads: 3
PC history:
 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test test/mullifier_examples/test_sub passed
