Testing 19_whm_normal
Simulation terminated at cycle 66
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [0:32]. Flags? 0
[[   1    2    3 ...   30   31   32]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 1
WHM standard matrix: read unified buffer [0:32], write to host memory [32:64]. Flags? 0
[[   1    2    3 ...   30   31   32]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 2
H A L T
MMC Count: 0
HM Count: 2
ACT Count: 0
RW Count: 0
RW Reloads: 0
PC history:
 [0, 1, 2]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 19_whm_normal passed
Testing 18_whm_vec
Simulation terminated at cycle 66
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [480:512]. Flags? 0
[[   1    2    3 ...   30   31   32]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 1
WHM vec matrix: read unified buffer [480:512], write to host memory [31:63]. Buffer addr is 993 -> [31][1]. Flags? 1
[[   1    2    3 ...   30   31   32]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 2
H A L T
MMC Count: 0
HM Count: 2
ACT Count: 0
RW Count: 0
RW Reloads: 0
PC history:
 [0, 1, 2]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 18_whm_vec passed
Testing 11_jump_backward
Simulation terminated at cycle 283
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [0:32]. Flags? 0
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[   1  225    3 ...   30   31    4]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 2
MMC: multiply UB[0:32] with a weight, store in ACC[0:32]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[   1  225    3 ...   30   31    4]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
MMC output: 
[[   1  225    3 ...   30   31    4]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
Accumulating with ACC[0:32]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[   1  225    3 ...   30   31    4]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 3
ACT: read ACC[0:32], and write to UB[32:64]. Activation function: Before activation:
[[   1  225    3 ...   30   31    4]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
After activation:
[[   1  225    3 ...   30   31    4]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
Unconditional jump from 3 to 225. No write to UB.

PC = 225
RW 1: read weight matrix 1 into weight FIFO
[[1025  114 1027 ... 1054 1055    4]
 [1057 1058 1059 ... 1086 1087 1088]
 [1089 1090 1091 ... 1118 1119 1120]
 ...
 [1953 1954 1955 ... 1982 1983 1984]
 [1985 1986 1987 ... 2014 2015 2016]
 [2017 2018 2019 ... 2046 2047 2048]]

PC = 226
MMC: multiply UB[0:32] with a weight, store in ACC[32:64]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[1025  114 1027 ... 1054 1055    4]
 [1057 1058 1059 ... 1086 1087 1088]
 [1089 1090 1091 ... 1118 1119 1120]
 ...
 [1953 1954 1955 ... 1982 1983 1984]
 [1985 1986 1987 ... 2014 2015 2016]
 [2017 2018 2019 ... 2046 2047 2048]]
MMC output: 
[[1025  114 1027 ... 1054 1055    4]
 [1057 1058 1059 ... 1086 1087 1088]
 [1089 1090 1091 ... 1118 1119 1120]
 ...
 [1953 1954 1955 ... 1982 1983 1984]
 [1985 1986 1987 ... 2014 2015 2016]
 [2017 2018 2019 ... 2046 2047 2048]]
Accumulating with ACC[32:64]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[1025  114 1027 ... 1054 1055    4]
 [1057 1058 1059 ... 1086 1087 1088]
 [1089 1090 1091 ... 1118 1119 1120]
 ...
 [1953 1954 1955 ... 1982 1983 1984]
 [1985 1986 1987 ... 2014 2015 2016]
 [2017 2018 2019 ... 2046 2047 2048]]

PC = 227
ACT: read ACC[32:64], and write to UB[64:96]. Activation function: Before activation:
[[1025  114 1027 ... 1054 1055    4]
 [1057 1058 1059 ... 1086 1087 1088]
 [1089 1090 1091 ... 1118 1119 1120]
 ...
 [1953 1954 1955 ... 1982 1983 1984]
 [1985 1986 1987 ... 2014 2015 2016]
 [2017 2018 2019 ... 2046 2047 2048]]
After activation:
[[1025  114 1027 ... 1054 1055    4]
 [1057 1058 1059 ... 1086 1087 1088]
 [1089 1090 1091 ... 1118 1119 1120]
 ...
 [1953 1954 1955 ... 1982 1983 1984]
 [1985 1986 1987 ... 2014 2015 2016]
 [2017 2018 2019 ... 2046 2047 2048]]
Unconditional jump from 227 to 114. No write to UB.

PC = 114
H A L T
MMC Count: 2
HM Count: 1
ACT Count: 2
RW Count: 2
RW Reloads: 2
PC history:
 [0, 1, 2, 3, 225, 226, 227, 114]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 11_jump_backward passed
Testing 3_branch_forward_second
Simulation terminated at cycle 158
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [0:32]. Flags? 0
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[10110   110     3 ...    30     0     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]

PC = 2
MMC: multiply UB[0:32] with a weight, store in ACC[0:32]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[10110   110     3 ...    30     0     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
MMC output: 
[[10110   110     3 ...    30     0     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
Accumulating with ACC[0:32]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[10110   110     3 ...    30     0     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]

PC = 3
ACT: read ACC[0:32], and write to UB[32:64]. Activation function: Before activation:
[[10110   110     3 ...    30     0     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
After activation:
[[10110   110     3 ...    30     0     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
Branch from 3 to 114. No write to UB.

PC = 114
H A L T
MMC Count: 1
HM Count: 1
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 114]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 3_branch_forward_second passed
Testing 17_whm_cell
Simulation terminated at cycle 35
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [480:512]. Flags? 0
[[   1    2    3 ...   30   31   32]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 1
WHM vec cell: read unified buffer [480][0], write to host memory [31][1]. Buffer addr is 993 -> [31][1]. Flags? 1
UB[480]: [[ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32]]
HM[31] before: [ 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024]
HM[31]  after: [ 993    1  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024]

PC = 2
H A L T
MMC Count: 0
HM Count: 2
ACT Count: 0
RW Count: 0
RW Reloads: 0
PC history:
 [0, 1, 2]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 17_whm_cell passed
Testing 4_branch_backward_second
Simulation terminated at cycle 283
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [0:32]. Flags? 0
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[10221   221     3 ...    30     0     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]

PC = 2
MMC: multiply UB[0:32] with a weight, store in ACC[0:32]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[10221   221     3 ...    30     0     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
MMC output: 
[[10221   221     3 ...    30     0     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
Accumulating with ACC[0:32]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[10221   221     3 ...    30     0     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]

PC = 3
ACT: read ACC[0:32], and write to UB[32:64]. Activation function: Before activation:
[[10221   221     3 ...    30     0     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
After activation:
[[10221   221     3 ...    30     0     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
Branch from 3 to 225. No write to UB.

PC = 225
RW 1: read weight matrix 1 into weight FIFO
[[      9886 4294967182       1027 ...       1054          0          1]
 [      1057       1058       1059 ...       1086       1087       1088]
 [      1089       1090       1091 ...       1118       1119       1120]
 ...
 [      1953       1954       1955 ...       1982       1983       1984]
 [      1985       1986       1987 ...       2014       2015       2016]
 [      2017       2018       2019 ...       2046       2047       2048]]

PC = 226
MMC: multiply UB[0:32] with a weight, store in ACC[32:64]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[      9886 4294967182       1027 ...       1054          0          1]
 [      1057       1058       1059 ...       1086       1087       1088]
 [      1089       1090       1091 ...       1118       1119       1120]
 ...
 [      1953       1954       1955 ...       1982       1983       1984]
 [      1985       1986       1987 ...       2014       2015       2016]
 [      2017       2018       2019 ...       2046       2047       2048]]
MMC output: 
[[      9886 4294967182       1027 ...       1054          0          1]
 [      1057       1058       1059 ...       1086       1087       1088]
 [      1089       1090       1091 ...       1118       1119       1120]
 ...
 [      1953       1954       1955 ...       1982       1983       1984]
 [      1985       1986       1987 ...       2014       2015       2016]
 [      2017       2018       2019 ...       2046       2047       2048]]
Accumulating with ACC[32:64]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[      9886 4294967182       1027 ...       1054          0          1]
 [      1057       1058       1059 ...       1086       1087       1088]
 [      1089       1090       1091 ...       1118       1119       1120]
 ...
 [      1953       1954       1955 ...       1982       1983       1984]
 [      1985       1986       1987 ...       2014       2015       2016]
 [      2017       2018       2019 ...       2046       2047       2048]]

PC = 227
ACT: read ACC[32:64], and write to UB[64:96]. Activation function: Before activation:
[[      9886 4294967182       1027 ...       1054          0          1]
 [      1057       1058       1059 ...       1086       1087       1088]
 [      1089       1090       1091 ...       1118       1119       1120]
 ...
 [      1953       1954       1955 ...       1982       1983       1984]
 [      1985       1986       1987 ...       2014       2015       2016]
 [      2017       2018       2019 ...       2046       2047       2048]]
After activation:
[[      9886 4294967182       1027 ...       1054          0          1]
 [      1057       1058       1059 ...       1086       1087       1088]
 [      1089       1090       1091 ...       1118       1119       1120]
 ...
 [      1953       1954       1955 ...       1982       1983       1984]
 [      1985       1986       1987 ...       2014       2015       2016]
 [      2017       2018       2019 ...       2046       2047       2048]]
Branch from 227 to 114. No write to UB.

PC = 114
H A L T
MMC Count: 2
HM Count: 1
ACT Count: 2
RW Count: 2
RW Reloads: 2
PC history:
 [0, 1, 2, 3, 225, 226, 227, 114]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 4_branch_backward_second passed
Testing 2_branch_backward_first
Simulation terminated at cycle 283
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [0:32]. Flags? 0
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[  221 10221     3 ...    30     1     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]

PC = 2
MMC: multiply UB[0:32] with a weight, store in ACC[0:32]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[  221 10221     3 ...    30     1     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
MMC output: 
[[  221 10221     3 ...    30     1     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
Accumulating with ACC[0:32]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[  221 10221     3 ...    30     1     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]

PC = 3
ACT: read ACC[0:32], and write to UB[32:64]. Activation function: Before activation:
[[  221 10221     3 ...    30     1     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
After activation:
[[  221 10221     3 ...    30     1     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
Branch from 3 to 225. No write to UB.

PC = 225
RW 1: read weight matrix 1 into weight FIFO
[[4294967182       9886       1027 ...       1054          1          1]
 [      1057       1058       1059 ...       1086       1087       1088]
 [      1089       1090       1091 ...       1118       1119       1120]
 ...
 [      1953       1954       1955 ...       1982       1983       1984]
 [      1985       1986       1987 ...       2014       2015       2016]
 [      2017       2018       2019 ...       2046       2047       2048]]

PC = 226
MMC: multiply UB[0:32] with a weight, store in ACC[32:64]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[4294967182       9886       1027 ...       1054          1          1]
 [      1057       1058       1059 ...       1086       1087       1088]
 [      1089       1090       1091 ...       1118       1119       1120]
 ...
 [      1953       1954       1955 ...       1982       1983       1984]
 [      1985       1986       1987 ...       2014       2015       2016]
 [      2017       2018       2019 ...       2046       2047       2048]]
MMC output: 
[[4294967182       9886       1027 ...       1054          1          1]
 [      1057       1058       1059 ...       1086       1087       1088]
 [      1089       1090       1091 ...       1118       1119       1120]
 ...
 [      1953       1954       1955 ...       1982       1983       1984]
 [      1985       1986       1987 ...       2014       2015       2016]
 [      2017       2018       2019 ...       2046       2047       2048]]
Accumulating with ACC[32:64]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[4294967182       9886       1027 ...       1054          1          1]
 [      1057       1058       1059 ...       1086       1087       1088]
 [      1089       1090       1091 ...       1118       1119       1120]
 ...
 [      1953       1954       1955 ...       1982       1983       1984]
 [      1985       1986       1987 ...       2014       2015       2016]
 [      2017       2018       2019 ...       2046       2047       2048]]

PC = 227
ACT: read ACC[32:64], and write to UB[64:96]. Activation function: Before activation:
[[4294967182       9886       1027 ...       1054          1          1]
 [      1057       1058       1059 ...       1086       1087       1088]
 [      1089       1090       1091 ...       1118       1119       1120]
 ...
 [      1953       1954       1955 ...       1982       1983       1984]
 [      1985       1986       1987 ...       2014       2015       2016]
 [      2017       2018       2019 ...       2046       2047       2048]]
After activation:
[[4294967182       9886       1027 ...       1054          1          1]
 [      1057       1058       1059 ...       1086       1087       1088]
 [      1089       1090       1091 ...       1118       1119       1120]
 ...
 [      1953       1954       1955 ...       1982       1983       1984]
 [      1985       1986       1987 ...       2014       2015       2016]
 [      2017       2018       2019 ...       2046       2047       2048]]
Branch from 227 to 114. No write to UB.

PC = 114
H A L T
MMC Count: 2
HM Count: 1
ACT Count: 2
RW Count: 2
RW Reloads: 2
PC history:
 [0, 1, 2, 3, 225, 226, 227, 114]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 2_branch_backward_first passed
Testing 13_rhm_cell
Simulation terminated at cycle 35
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [480:512]. Flags? 0
[[   1    2    3 ...   30   31   32]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 1
RHM vec cell: read host memory [31][1] and pad with 0s, write to unified buffer [0]. Buffer addr is 993 -> [31][1]. Flags? 1
[[994.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.]]

PC = 2
H A L T
MMC Count: 0
HM Count: 2
ACT Count: 0
RW Count: 0
RW Reloads: 0
PC history:
 [0, 1, 2]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 13_rhm_cell passed
Testing 1_branch_forward_first
Simulation terminated at cycle 158
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [0:32]. Flags? 0
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[  110 10110     3 ...    30     1     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]

PC = 2
MMC: multiply UB[0:32] with a weight, store in ACC[0:32]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[  110 10110     3 ...    30     1     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
MMC output: 
[[  110 10110     3 ...    30     1     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
Accumulating with ACC[0:32]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[  110 10110     3 ...    30     1     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]

PC = 3
ACT: read ACC[0:32], and write to UB[32:64]. Activation function: Before activation:
[[  110 10110     3 ...    30     1     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
After activation:
[[  110 10110     3 ...    30     1     1]
 [   33    34    35 ...    62    63    64]
 [   65    66    67 ...    94    95    96]
 ...
 [  929   930   931 ...   958   959   960]
 [  961   962   963 ...   990   991   992]
 [  993   994   995 ...  1022  1023  1024]]
Branch from 3 to 114. No write to UB.

PC = 114
H A L T
MMC Count: 1
HM Count: 1
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 114]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 1_branch_forward_first passed
Testing 7_lt_check_lt0
Simulation terminated at cycle 191
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [0:32]. Flags? 0
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[4294967281          2          3 ...         30         31          3]
 [        33         34         35 ...         62         63         64]
 [        65         66         67 ...         94         95         96]
 ...
 [       929        930        931 ...        958        959        960]
 [       961        962        963 ...        990        991        992]
 [       993        994        995 ...       1022       1023       1024]]

PC = 2
MMC: multiply UB[0:32] with a weight, store in ACC[0:32]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[4294967281          2          3 ...         30         31          3]
 [        33         34         35 ...         62         63         64]
 [        65         66         67 ...         94         95         96]
 ...
 [       929        930        931 ...        958        959        960]
 [       961        962        963 ...        990        991        992]
 [       993        994        995 ...       1022       1023       1024]]
MMC output: 
[[4294967281          2          3 ...         30         31          3]
 [        33         34         35 ...         62         63         64]
 [        65         66         67 ...         94         95         96]
 ...
 [       929        930        931 ...        958        959        960]
 [       961        962        963 ...        990        991        992]
 [       993        994        995 ...       1022       1023       1024]]
Accumulating with ACC[0:32]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[4294967281          2          3 ...         30         31          3]
 [        33         34         35 ...         62         63         64]
 [        65         66         67 ...         94         95         96]
 ...
 [       929        930        931 ...        958        959        960]
 [       961        962        963 ...        990        991        992]
 [       993        994        995 ...       1022       1023       1024]]

PC = 3
ACT: read ACC[0:32], and write to UB[32:64]. Activation function: Before activation:
[[4294967281          2          3 ...         30         31          3]
 [        33         34         35 ...         62         63         64]
 [        65         66         67 ...         94         95         96]
 ...
 [       929        930        931 ...        958        959        960]
 [       961        962        963 ...        990        991        992]
 [       993        994        995 ...       1022       1023       1024]]
After activation:
[[4294967281          2          3 ...         30         31          3]
 [        33         34         35 ...         62         63         64]
 [        65         66         67 ...         94         95         96]
 ...
 [       929        930        931 ...        958        959        960]
 [       961        962        963 ...        990        991        992]
 [       993        994        995 ...       1022       1023       1024]]
Less than check, evaluates to False (4294967281 !< 0).
After branch/comparison/jump:
[[   0    2    3 ...   30   31    0]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 4
RHM standard matrix: read host memory [64:65], write to unified buffer [64:65]. Flags? 0
[[2049 2050 2051 2052 2053 2054 2055 2056 2057 2058 2059 2060 2061 2062 2063 2064 2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 2080]]

PC = 5
H A L T
MMC Count: 1
HM Count: 2
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 4, 5]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 7_lt_check_lt0 passed
Testing 16_rhm_normal
Simulation terminated at cycle 33
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [0:32]. Flags? 0
[[   1    2    3 ...   30   31   32]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 1
H A L T
MMC Count: 0
HM Count: 1
ACT Count: 0
RW Count: 0
RW Reloads: 0
PC history:
 [0, 1]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 16_rhm_normal passed
Testing 12_act_normal
Simulation terminated at cycle 191
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [0:32]. Flags? 0
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[   1    2    3 ...   30   31   42]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 2
MMC: multiply UB[0:32] with a weight, store in ACC[0:32]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[   1    2    3 ...   30   31   42]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
MMC output: 
[[   1    2    3 ...   30   31   42]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
Accumulating with ACC[0:32]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[   1    2    3 ...   30   31   42]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 3
ACT: read ACC[0:32], and write to UB[32:64]. Activation function: Before activation:
[[   1    2    3 ...   30   31   42]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
After activation:
[[   1    2    3 ...   30   31   42]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
Normal activation.
After branch/comparison/jump:
[[   1    2    3 ...   30   31   42]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 4
RHM standard matrix: read host memory [64:65], write to unified buffer [64:65]. Flags? 0
[[2049 2050 2051 2052 2053 2054 2055 2056 2057 2058 2059 2060 2061 2062 2063 2064 2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 2080]]

PC = 5
H A L T
MMC Count: 1
HM Count: 2
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 4, 5]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 12_act_normal passed
Testing 14_rhm_vec
Simulation terminated at cycle 66
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [480:512]. Flags? 0
[[   1    2    3 ...   30   31   32]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 1
RHM vec matrix: read host memory [31:63], write to unified buffer [0:32]. Buffer addr is 993 -> [31][1]. Flags? 1
[[ 993  994  995 ... 1022 1023 1024]
 [1025 1026 1027 ... 1054 1055 1056]
 [1057 1058 1059 ... 1086 1087 1088]
 ...
 [1921 1922 1923 ... 1950 1951 1952]
 [1953 1954 1955 ... 1982 1983 1984]
 [1985 1986 1987 ... 2014 2015 2016]]
[[ 993  994  995 ... 1022 1023 1024]
 [1025 1026 1027 ... 1054 1055 1056]
 [1057 1058 1059 ... 1086 1087 1088]
 ...
 [1921 1922 1923 ... 1950 1951 1952]
 [1953 1954 1955 ... 1982 1983 1984]
 [1985 1986 1987 ... 2014 2015 2016]]

PC = 2
H A L T
MMC Count: 0
HM Count: 2
ACT Count: 0
RW Count: 0
RW Reloads: 0
PC history:
 [0, 1, 2]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 14_rhm_vec passed
Testing 5_eq_check_eq
Simulation terminated at cycle 191
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [0:32]. Flags? 0
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[   0    2    3 ...   30   31    2]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 2
MMC: multiply UB[0:32] with a weight, store in ACC[0:32]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[   0    2    3 ...   30   31    2]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
MMC output: 
[[   0    2    3 ...   30   31    2]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
Accumulating with ACC[0:32]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[   0    2    3 ...   30   31    2]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 3
ACT: read ACC[0:32], and write to UB[32:64]. Activation function: Before activation:
[[   0    2    3 ...   30   31    2]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
After activation:
[[   0    2    3 ...   30   31    2]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
Equality check, evaluates to True.
After branch/comparison/jump:
[[   1    0    3 ...   30   31    0]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 4
RHM standard matrix: read host memory [64:65], write to unified buffer [64:65]. Flags? 0
[[2049 2050 2051 2052 2053 2054 2055 2056 2057 2058 2059 2060 2061 2062 2063 2064 2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 2080]]

PC = 5
H A L T
MMC Count: 1
HM Count: 2
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 4, 5]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 5_eq_check_eq passed
Testing 8_lt_check_eq0
Simulation terminated at cycle 191
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [0:32]. Flags? 0
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[   0    2    3 ...   30   31    3]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 2
MMC: multiply UB[0:32] with a weight, store in ACC[0:32]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[   0    2    3 ...   30   31    3]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
MMC output: 
[[   0    2    3 ...   30   31    3]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
Accumulating with ACC[0:32]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[   0    2    3 ...   30   31    3]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 3
ACT: read ACC[0:32], and write to UB[32:64]. Activation function: Before activation:
[[   0    2    3 ...   30   31    3]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
After activation:
[[   0    2    3 ...   30   31    3]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
Less than check, evaluates to False (0 !< 0).
After branch/comparison/jump:
[[   0    2    3 ...   30   31    0]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 4
RHM standard matrix: read host memory [64:65], write to unified buffer [64:65]. Flags? 0
[[2049 2050 2051 2052 2053 2054 2055 2056 2057 2058 2059 2060 2061 2062 2063 2064 2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 2080]]

PC = 5
H A L T
MMC Count: 1
HM Count: 2
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 4, 5]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 8_lt_check_eq0 passed
Testing 9_lt_check_gt0
Simulation terminated at cycle 191
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [0:32]. Flags? 0
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[  15    2    3 ...   30   31    3]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 2
MMC: multiply UB[0:32] with a weight, store in ACC[0:32]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[  15    2    3 ...   30   31    3]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
MMC output: 
[[  15    2    3 ...   30   31    3]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
Accumulating with ACC[0:32]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[  15    2    3 ...   30   31    3]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 3
ACT: read ACC[0:32], and write to UB[32:64]. Activation function: Before activation:
[[  15    2    3 ...   30   31    3]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
After activation:
[[  15    2    3 ...   30   31    3]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
Less than check, evaluates to False (15 !< 0).
After branch/comparison/jump:
[[   0    2    3 ...   30   31    0]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 4
RHM standard matrix: read host memory [64:65], write to unified buffer [64:65]. Flags? 0
[[2049 2050 2051 2052 2053 2054 2055 2056 2057 2058 2059 2060 2061 2062 2063 2064 2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 2080]]

PC = 5
H A L T
MMC Count: 1
HM Count: 2
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 4, 5]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 9_lt_check_gt0 passed
Testing 6_eq_check_neq
Simulation terminated at cycle 191
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [0:32]. Flags? 0
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[  42    2    3 ...   30   31    2]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 2
MMC: multiply UB[0:32] with a weight, store in ACC[0:32]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[  42    2    3 ...   30   31    2]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
MMC output: 
[[  42    2    3 ...   30   31    2]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
Accumulating with ACC[0:32]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[  42    2    3 ...   30   31    2]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 3
ACT: read ACC[0:32], and write to UB[32:64]. Activation function: Before activation:
[[  42    2    3 ...   30   31    2]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
After activation:
[[  42    2    3 ...   30   31    2]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
Equality check, evaluates to False.
After branch/comparison/jump:
[[   0    0    3 ...   30   31    0]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 4
RHM standard matrix: read host memory [64:65], write to unified buffer [64:65]. Flags? 0
[[2049 2050 2051 2052 2053 2054 2055 2056 2057 2058 2059 2060 2061 2062 2063 2064 2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 2080]]

PC = 5
H A L T
MMC Count: 1
HM Count: 2
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 4, 5]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 6_eq_check_neq passed
Testing 15_rhm_pc_ret
Simulation terminated at cycle 2
PC = 0
RHM pc return: create curent pc vector, write to unified buffer [32]. Flags? 2
[[0. 2. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 4.]]

PC = 1
H A L T
MMC Count: 0
HM Count: 1
ACT Count: 0
RW Count: 0
RW Reloads: 0
PC history:
 [0, 1]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 15_rhm_pc_ret passed
Testing 10_jump_forward
Simulation terminated at cycle 158
PC = 0
RHM standard matrix: read host memory [0:32], write to unified buffer [0:32]. Flags? 0
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[   1  114    3 ...   30   31    4]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 2
MMC: multiply UB[0:32] with a weight, store in ACC[0:32]
MMC matrix: 
[[1 0 0 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 [0 0 1 ... 0 0 0]
 ...
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 0 1 0]
 [0 0 0 ... 0 0 1]]
MMC weight: 
[[   1  114    3 ...   30   31    4]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
MMC output: 
[[   1  114    3 ...   30   31    4]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
Accumulating with ACC[0:32]
[[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
After MMC + ACC: 
[[   1  114    3 ...   30   31    4]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]

PC = 3
ACT: read ACC[0:32], and write to UB[32:64]. Activation function: Before activation:
[[   1  114    3 ...   30   31    4]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
After activation:
[[   1  114    3 ...   30   31    4]
 [  33   34   35 ...   62   63   64]
 [  65   66   67 ...   94   95   96]
 ...
 [ 929  930  931 ...  958  959  960]
 [ 961  962  963 ...  990  991  992]
 [ 993  994  995 ... 1022 1023 1024]]
Unconditional jump from 3 to 114. No write to UB.

PC = 114
H A L T
MMC Count: 1
HM Count: 1
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 114]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 10_jump_forward passed
