Testing 19_whm_normal
Simulation terminated at cycle 34
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 1
WHM standard matrix: read unified buffer [0:16], write to host memory [16:32]. Flags? 0
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 2
H A L T
MMC Count: 0
HM Count: 2
ACT Count: 0
RW Count: 0
RW Reloads: 0
PC history:
 [0, 1, 2]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 19_whm_normal passed
Testing 18_whm_vec
Simulation terminated at cycle 34
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [240:256]. Flags? 0
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 1
WHM vec matrix: read unified buffer [240:256], write to host memory [15:31]. Buffer addr is 241 -> [15][1]. Flags? 1
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 2
H A L T
MMC Count: 0
HM Count: 2
ACT Count: 0
RW Count: 0
RW Reloads: 0
PC history:
 [0, 1, 2]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 18_whm_vec passed
Testing 11_jump_backward
Simulation terminated at cycle 147
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[  1 225   3   4   5   6   7   8   9  10  11  12  13  14  15   4]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 2
MMC: multiply UB[0:16] with a weight, store in ACC[0:16]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[  1 225   3   4   5   6   7   8   9  10  11  12  13  14  15   4]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
MMC output: 
[[  1 225   3   4   5   6   7   8   9  10  11  12  13  14  15   4]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
Accumulating with ACC[0:16]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[  1 225   3   4   5   6   7   8   9  10  11  12  13  14  15   4]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 3
ACT: read ACC[0:16], and write to UB[16:32]. Activation function: Before activation:
[[  1 225   3   4   5   6   7   8   9  10  11  12  13  14  15   4]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
After activation:
[[  1 225   3   4   5   6   7   8   9  10  11  12  13  14  15   4]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
Unconditional jump from 3 to 225. No write to UB.

PC = 225
RW 1: read weight matrix 1 into weight FIFO
[[257 114 259 260 261 262 263 264 265 266 267 268 269 270 271   4]
 [273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288]
 [289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304]
 [305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320]
 [321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336]
 [337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352]
 [353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368]
 [369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384]
 [385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400]
 [401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416]
 [417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432]
 [433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448]
 [449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464]
 [465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480]
 [481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496]
 [497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512]]

PC = 226
MMC: multiply UB[0:16] with a weight, store in ACC[16:32]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[257 114 259 260 261 262 263 264 265 266 267 268 269 270 271   4]
 [273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288]
 [289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304]
 [305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320]
 [321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336]
 [337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352]
 [353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368]
 [369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384]
 [385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400]
 [401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416]
 [417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432]
 [433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448]
 [449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464]
 [465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480]
 [481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496]
 [497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512]]
MMC output: 
[[257 114 259 260 261 262 263 264 265 266 267 268 269 270 271   4]
 [273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288]
 [289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304]
 [305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320]
 [321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336]
 [337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352]
 [353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368]
 [369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384]
 [385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400]
 [401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416]
 [417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432]
 [433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448]
 [449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464]
 [465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480]
 [481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496]
 [497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512]]
Accumulating with ACC[16:32]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[257 114 259 260 261 262 263 264 265 266 267 268 269 270 271   4]
 [273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288]
 [289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304]
 [305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320]
 [321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336]
 [337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352]
 [353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368]
 [369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384]
 [385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400]
 [401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416]
 [417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432]
 [433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448]
 [449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464]
 [465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480]
 [481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496]
 [497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512]]

PC = 227
ACT: read ACC[16:32], and write to UB[32:48]. Activation function: Before activation:
[[257 114 259 260 261 262 263 264 265 266 267 268 269 270 271   4]
 [273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288]
 [289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304]
 [305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320]
 [321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336]
 [337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352]
 [353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368]
 [369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384]
 [385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400]
 [401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416]
 [417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432]
 [433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448]
 [449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464]
 [465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480]
 [481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496]
 [497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512]]
After activation:
[[257 114 259 260 261 262 263 264 265 266 267 268 269 270 271   4]
 [273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288]
 [289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304]
 [305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320]
 [321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336]
 [337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352]
 [353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368]
 [369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384]
 [385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400]
 [401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416]
 [417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432]
 [433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448]
 [449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464]
 [465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480]
 [481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496]
 [497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512]]
Unconditional jump from 227 to 114. No write to UB.

PC = 114
H A L T
MMC Count: 2
HM Count: 1
ACT Count: 2
RW Count: 2
RW Reloads: 2
PC history:
 [0, 1, 2, 3, 225, 226, 227, 114]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 11_jump_backward passed
Testing 3_branch_forward_second
Simulation terminated at cycle 82
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[10110   110     3     4     5     6     7     8     9    10    11    12    13    14     0     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]

PC = 2
MMC: multiply UB[0:16] with a weight, store in ACC[0:16]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[10110   110     3     4     5     6     7     8     9    10    11    12    13    14     0     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
MMC output: 
[[10110   110     3     4     5     6     7     8     9    10    11    12    13    14     0     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
Accumulating with ACC[0:16]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[10110   110     3     4     5     6     7     8     9    10    11    12    13    14     0     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]

PC = 3
ACT: read ACC[0:16], and write to UB[16:32]. Activation function: Before activation:
[[10110   110     3     4     5     6     7     8     9    10    11    12    13    14     0     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
After activation:
[[10110   110     3     4     5     6     7     8     9    10    11    12    13    14     0     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
Branch from 3 to 114. No write to UB.

PC = 114
H A L T
MMC Count: 1
HM Count: 1
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 114]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 3_branch_forward_second passed
Testing 17_whm_cell
Simulation terminated at cycle 19
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [240:256]. Flags? 0
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 1
WHM vec cell: read unified buffer [240][0], write to host memory [15][1]. Buffer addr is 241 -> [15][1]. Flags? 1
UB[240]: [[ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]]
HM[15] before: [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]
HM[15]  after: [241   1 243 244 245 246 247 248 249 250 251 252 253 254 255 256]

PC = 2
H A L T
MMC Count: 0
HM Count: 2
ACT Count: 0
RW Count: 0
RW Reloads: 0
PC history:
 [0, 1, 2]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 17_whm_cell passed
Testing 4_branch_backward_second
Simulation terminated at cycle 147
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[10221   221     3     4     5     6     7     8     9    10    11    12    13    14     0     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]

PC = 2
MMC: multiply UB[0:16] with a weight, store in ACC[0:16]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[10221   221     3     4     5     6     7     8     9    10    11    12    13    14     0     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
MMC output: 
[[10221   221     3     4     5     6     7     8     9    10    11    12    13    14     0     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
Accumulating with ACC[0:16]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[10221   221     3     4     5     6     7     8     9    10    11    12    13    14     0     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]

PC = 3
ACT: read ACC[0:16], and write to UB[16:32]. Activation function: Before activation:
[[10221   221     3     4     5     6     7     8     9    10    11    12    13    14     0     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
After activation:
[[10221   221     3     4     5     6     7     8     9    10    11    12    13    14     0     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
Branch from 3 to 225. No write to UB.

PC = 225
RW 1: read weight matrix 1 into weight FIFO
[[      9886 4294967182        259        260        261        262        263        264        265        266        267        268        269        270          0          1]
 [       273        274        275        276        277        278        279        280        281        282        283        284        285        286        287        288]
 [       289        290        291        292        293        294        295        296        297        298        299        300        301        302        303        304]
 [       305        306        307        308        309        310        311        312        313        314        315        316        317        318        319        320]
 [       321        322        323        324        325        326        327        328        329        330        331        332        333        334        335        336]
 [       337        338        339        340        341        342        343        344        345        346        347        348        349        350        351        352]
 [       353        354        355        356        357        358        359        360        361        362        363        364        365        366        367        368]
 [       369        370        371        372        373        374        375        376        377        378        379        380        381        382        383        384]
 [       385        386        387        388        389        390        391        392        393        394        395        396        397        398        399        400]
 [       401        402        403        404        405        406        407        408        409        410        411        412        413        414        415        416]
 [       417        418        419        420        421        422        423        424        425        426        427        428        429        430        431        432]
 [       433        434        435        436        437        438        439        440        441        442        443        444        445        446        447        448]
 [       449        450        451        452        453        454        455        456        457        458        459        460        461        462        463        464]
 [       465        466        467        468        469        470        471        472        473        474        475        476        477        478        479        480]
 [       481        482        483        484        485        486        487        488        489        490        491        492        493        494        495        496]
 [       497        498        499        500        501        502        503        504        505        506        507        508        509        510        511        512]]

PC = 226
MMC: multiply UB[0:16] with a weight, store in ACC[16:32]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[      9886 4294967182        259        260        261        262        263        264        265        266        267        268        269        270          0          1]
 [       273        274        275        276        277        278        279        280        281        282        283        284        285        286        287        288]
 [       289        290        291        292        293        294        295        296        297        298        299        300        301        302        303        304]
 [       305        306        307        308        309        310        311        312        313        314        315        316        317        318        319        320]
 [       321        322        323        324        325        326        327        328        329        330        331        332        333        334        335        336]
 [       337        338        339        340        341        342        343        344        345        346        347        348        349        350        351        352]
 [       353        354        355        356        357        358        359        360        361        362        363        364        365        366        367        368]
 [       369        370        371        372        373        374        375        376        377        378        379        380        381        382        383        384]
 [       385        386        387        388        389        390        391        392        393        394        395        396        397        398        399        400]
 [       401        402        403        404        405        406        407        408        409        410        411        412        413        414        415        416]
 [       417        418        419        420        421        422        423        424        425        426        427        428        429        430        431        432]
 [       433        434        435        436        437        438        439        440        441        442        443        444        445        446        447        448]
 [       449        450        451        452        453        454        455        456        457        458        459        460        461        462        463        464]
 [       465        466        467        468        469        470        471        472        473        474        475        476        477        478        479        480]
 [       481        482        483        484        485        486        487        488        489        490        491        492        493        494        495        496]
 [       497        498        499        500        501        502        503        504        505        506        507        508        509        510        511        512]]
MMC output: 
[[      9886 4294967182        259        260        261        262        263        264        265        266        267        268        269        270          0          1]
 [       273        274        275        276        277        278        279        280        281        282        283        284        285        286        287        288]
 [       289        290        291        292        293        294        295        296        297        298        299        300        301        302        303        304]
 [       305        306        307        308        309        310        311        312        313        314        315        316        317        318        319        320]
 [       321        322        323        324        325        326        327        328        329        330        331        332        333        334        335        336]
 [       337        338        339        340        341        342        343        344        345        346        347        348        349        350        351        352]
 [       353        354        355        356        357        358        359        360        361        362        363        364        365        366        367        368]
 [       369        370        371        372        373        374        375        376        377        378        379        380        381        382        383        384]
 [       385        386        387        388        389        390        391        392        393        394        395        396        397        398        399        400]
 [       401        402        403        404        405        406        407        408        409        410        411        412        413        414        415        416]
 [       417        418        419        420        421        422        423        424        425        426        427        428        429        430        431        432]
 [       433        434        435        436        437        438        439        440        441        442        443        444        445        446        447        448]
 [       449        450        451        452        453        454        455        456        457        458        459        460        461        462        463        464]
 [       465        466        467        468        469        470        471        472        473        474        475        476        477        478        479        480]
 [       481        482        483        484        485        486        487        488        489        490        491        492        493        494        495        496]
 [       497        498        499        500        501        502        503        504        505        506        507        508        509        510        511        512]]
Accumulating with ACC[16:32]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[      9886 4294967182        259        260        261        262        263        264        265        266        267        268        269        270          0          1]
 [       273        274        275        276        277        278        279        280        281        282        283        284        285        286        287        288]
 [       289        290        291        292        293        294        295        296        297        298        299        300        301        302        303        304]
 [       305        306        307        308        309        310        311        312        313        314        315        316        317        318        319        320]
 [       321        322        323        324        325        326        327        328        329        330        331        332        333        334        335        336]
 [       337        338        339        340        341        342        343        344        345        346        347        348        349        350        351        352]
 [       353        354        355        356        357        358        359        360        361        362        363        364        365        366        367        368]
 [       369        370        371        372        373        374        375        376        377        378        379        380        381        382        383        384]
 [       385        386        387        388        389        390        391        392        393        394        395        396        397        398        399        400]
 [       401        402        403        404        405        406        407        408        409        410        411        412        413        414        415        416]
 [       417        418        419        420        421        422        423        424        425        426        427        428        429        430        431        432]
 [       433        434        435        436        437        438        439        440        441        442        443        444        445        446        447        448]
 [       449        450        451        452        453        454        455        456        457        458        459        460        461        462        463        464]
 [       465        466        467        468        469        470        471        472        473        474        475        476        477        478        479        480]
 [       481        482        483        484        485        486        487        488        489        490        491        492        493        494        495        496]
 [       497        498        499        500        501        502        503        504        505        506        507        508        509        510        511        512]]

PC = 227
ACT: read ACC[16:32], and write to UB[32:48]. Activation function: Before activation:
[[      9886 4294967182        259        260        261        262        263        264        265        266        267        268        269        270          0          1]
 [       273        274        275        276        277        278        279        280        281        282        283        284        285        286        287        288]
 [       289        290        291        292        293        294        295        296        297        298        299        300        301        302        303        304]
 [       305        306        307        308        309        310        311        312        313        314        315        316        317        318        319        320]
 [       321        322        323        324        325        326        327        328        329        330        331        332        333        334        335        336]
 [       337        338        339        340        341        342        343        344        345        346        347        348        349        350        351        352]
 [       353        354        355        356        357        358        359        360        361        362        363        364        365        366        367        368]
 [       369        370        371        372        373        374        375        376        377        378        379        380        381        382        383        384]
 [       385        386        387        388        389        390        391        392        393        394        395        396        397        398        399        400]
 [       401        402        403        404        405        406        407        408        409        410        411        412        413        414        415        416]
 [       417        418        419        420        421        422        423        424        425        426        427        428        429        430        431        432]
 [       433        434        435        436        437        438        439        440        441        442        443        444        445        446        447        448]
 [       449        450        451        452        453        454        455        456        457        458        459        460        461        462        463        464]
 [       465        466        467        468        469        470        471        472        473        474        475        476        477        478        479        480]
 [       481        482        483        484        485        486        487        488        489        490        491        492        493        494        495        496]
 [       497        498        499        500        501        502        503        504        505        506        507        508        509        510        511        512]]
After activation:
[[      9886 4294967182        259        260        261        262        263        264        265        266        267        268        269        270          0          1]
 [       273        274        275        276        277        278        279        280        281        282        283        284        285        286        287        288]
 [       289        290        291        292        293        294        295        296        297        298        299        300        301        302        303        304]
 [       305        306        307        308        309        310        311        312        313        314        315        316        317        318        319        320]
 [       321        322        323        324        325        326        327        328        329        330        331        332        333        334        335        336]
 [       337        338        339        340        341        342        343        344        345        346        347        348        349        350        351        352]
 [       353        354        355        356        357        358        359        360        361        362        363        364        365        366        367        368]
 [       369        370        371        372        373        374        375        376        377        378        379        380        381        382        383        384]
 [       385        386        387        388        389        390        391        392        393        394        395        396        397        398        399        400]
 [       401        402        403        404        405        406        407        408        409        410        411        412        413        414        415        416]
 [       417        418        419        420        421        422        423        424        425        426        427        428        429        430        431        432]
 [       433        434        435        436        437        438        439        440        441        442        443        444        445        446        447        448]
 [       449        450        451        452        453        454        455        456        457        458        459        460        461        462        463        464]
 [       465        466        467        468        469        470        471        472        473        474        475        476        477        478        479        480]
 [       481        482        483        484        485        486        487        488        489        490        491        492        493        494        495        496]
 [       497        498        499        500        501        502        503        504        505        506        507        508        509        510        511        512]]
Branch from 227 to 114. No write to UB.

PC = 114
H A L T
MMC Count: 2
HM Count: 1
ACT Count: 2
RW Count: 2
RW Reloads: 2
PC history:
 [0, 1, 2, 3, 225, 226, 227, 114]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 4_branch_backward_second passed
Testing 2_branch_backward_first
Simulation terminated at cycle 147
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[  221 10221     3     4     5     6     7     8     9    10    11    12    13    14     1     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]

PC = 2
MMC: multiply UB[0:16] with a weight, store in ACC[0:16]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[  221 10221     3     4     5     6     7     8     9    10    11    12    13    14     1     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
MMC output: 
[[  221 10221     3     4     5     6     7     8     9    10    11    12    13    14     1     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
Accumulating with ACC[0:16]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[  221 10221     3     4     5     6     7     8     9    10    11    12    13    14     1     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]

PC = 3
ACT: read ACC[0:16], and write to UB[16:32]. Activation function: Before activation:
[[  221 10221     3     4     5     6     7     8     9    10    11    12    13    14     1     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
After activation:
[[  221 10221     3     4     5     6     7     8     9    10    11    12    13    14     1     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
Branch from 3 to 225. No write to UB.

PC = 225
RW 1: read weight matrix 1 into weight FIFO
[[4294967182       9886        259        260        261        262        263        264        265        266        267        268        269        270          1          1]
 [       273        274        275        276        277        278        279        280        281        282        283        284        285        286        287        288]
 [       289        290        291        292        293        294        295        296        297        298        299        300        301        302        303        304]
 [       305        306        307        308        309        310        311        312        313        314        315        316        317        318        319        320]
 [       321        322        323        324        325        326        327        328        329        330        331        332        333        334        335        336]
 [       337        338        339        340        341        342        343        344        345        346        347        348        349        350        351        352]
 [       353        354        355        356        357        358        359        360        361        362        363        364        365        366        367        368]
 [       369        370        371        372        373        374        375        376        377        378        379        380        381        382        383        384]
 [       385        386        387        388        389        390        391        392        393        394        395        396        397        398        399        400]
 [       401        402        403        404        405        406        407        408        409        410        411        412        413        414        415        416]
 [       417        418        419        420        421        422        423        424        425        426        427        428        429        430        431        432]
 [       433        434        435        436        437        438        439        440        441        442        443        444        445        446        447        448]
 [       449        450        451        452        453        454        455        456        457        458        459        460        461        462        463        464]
 [       465        466        467        468        469        470        471        472        473        474        475        476        477        478        479        480]
 [       481        482        483        484        485        486        487        488        489        490        491        492        493        494        495        496]
 [       497        498        499        500        501        502        503        504        505        506        507        508        509        510        511        512]]

PC = 226
MMC: multiply UB[0:16] with a weight, store in ACC[16:32]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[4294967182       9886        259        260        261        262        263        264        265        266        267        268        269        270          1          1]
 [       273        274        275        276        277        278        279        280        281        282        283        284        285        286        287        288]
 [       289        290        291        292        293        294        295        296        297        298        299        300        301        302        303        304]
 [       305        306        307        308        309        310        311        312        313        314        315        316        317        318        319        320]
 [       321        322        323        324        325        326        327        328        329        330        331        332        333        334        335        336]
 [       337        338        339        340        341        342        343        344        345        346        347        348        349        350        351        352]
 [       353        354        355        356        357        358        359        360        361        362        363        364        365        366        367        368]
 [       369        370        371        372        373        374        375        376        377        378        379        380        381        382        383        384]
 [       385        386        387        388        389        390        391        392        393        394        395        396        397        398        399        400]
 [       401        402        403        404        405        406        407        408        409        410        411        412        413        414        415        416]
 [       417        418        419        420        421        422        423        424        425        426        427        428        429        430        431        432]
 [       433        434        435        436        437        438        439        440        441        442        443        444        445        446        447        448]
 [       449        450        451        452        453        454        455        456        457        458        459        460        461        462        463        464]
 [       465        466        467        468        469        470        471        472        473        474        475        476        477        478        479        480]
 [       481        482        483        484        485        486        487        488        489        490        491        492        493        494        495        496]
 [       497        498        499        500        501        502        503        504        505        506        507        508        509        510        511        512]]
MMC output: 
[[4294967182       9886        259        260        261        262        263        264        265        266        267        268        269        270          1          1]
 [       273        274        275        276        277        278        279        280        281        282        283        284        285        286        287        288]
 [       289        290        291        292        293        294        295        296        297        298        299        300        301        302        303        304]
 [       305        306        307        308        309        310        311        312        313        314        315        316        317        318        319        320]
 [       321        322        323        324        325        326        327        328        329        330        331        332        333        334        335        336]
 [       337        338        339        340        341        342        343        344        345        346        347        348        349        350        351        352]
 [       353        354        355        356        357        358        359        360        361        362        363        364        365        366        367        368]
 [       369        370        371        372        373        374        375        376        377        378        379        380        381        382        383        384]
 [       385        386        387        388        389        390        391        392        393        394        395        396        397        398        399        400]
 [       401        402        403        404        405        406        407        408        409        410        411        412        413        414        415        416]
 [       417        418        419        420        421        422        423        424        425        426        427        428        429        430        431        432]
 [       433        434        435        436        437        438        439        440        441        442        443        444        445        446        447        448]
 [       449        450        451        452        453        454        455        456        457        458        459        460        461        462        463        464]
 [       465        466        467        468        469        470        471        472        473        474        475        476        477        478        479        480]
 [       481        482        483        484        485        486        487        488        489        490        491        492        493        494        495        496]
 [       497        498        499        500        501        502        503        504        505        506        507        508        509        510        511        512]]
Accumulating with ACC[16:32]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[4294967182       9886        259        260        261        262        263        264        265        266        267        268        269        270          1          1]
 [       273        274        275        276        277        278        279        280        281        282        283        284        285        286        287        288]
 [       289        290        291        292        293        294        295        296        297        298        299        300        301        302        303        304]
 [       305        306        307        308        309        310        311        312        313        314        315        316        317        318        319        320]
 [       321        322        323        324        325        326        327        328        329        330        331        332        333        334        335        336]
 [       337        338        339        340        341        342        343        344        345        346        347        348        349        350        351        352]
 [       353        354        355        356        357        358        359        360        361        362        363        364        365        366        367        368]
 [       369        370        371        372        373        374        375        376        377        378        379        380        381        382        383        384]
 [       385        386        387        388        389        390        391        392        393        394        395        396        397        398        399        400]
 [       401        402        403        404        405        406        407        408        409        410        411        412        413        414        415        416]
 [       417        418        419        420        421        422        423        424        425        426        427        428        429        430        431        432]
 [       433        434        435        436        437        438        439        440        441        442        443        444        445        446        447        448]
 [       449        450        451        452        453        454        455        456        457        458        459        460        461        462        463        464]
 [       465        466        467        468        469        470        471        472        473        474        475        476        477        478        479        480]
 [       481        482        483        484        485        486        487        488        489        490        491        492        493        494        495        496]
 [       497        498        499        500        501        502        503        504        505        506        507        508        509        510        511        512]]

PC = 227
ACT: read ACC[16:32], and write to UB[32:48]. Activation function: Before activation:
[[4294967182       9886        259        260        261        262        263        264        265        266        267        268        269        270          1          1]
 [       273        274        275        276        277        278        279        280        281        282        283        284        285        286        287        288]
 [       289        290        291        292        293        294        295        296        297        298        299        300        301        302        303        304]
 [       305        306        307        308        309        310        311        312        313        314        315        316        317        318        319        320]
 [       321        322        323        324        325        326        327        328        329        330        331        332        333        334        335        336]
 [       337        338        339        340        341        342        343        344        345        346        347        348        349        350        351        352]
 [       353        354        355        356        357        358        359        360        361        362        363        364        365        366        367        368]
 [       369        370        371        372        373        374        375        376        377        378        379        380        381        382        383        384]
 [       385        386        387        388        389        390        391        392        393        394        395        396        397        398        399        400]
 [       401        402        403        404        405        406        407        408        409        410        411        412        413        414        415        416]
 [       417        418        419        420        421        422        423        424        425        426        427        428        429        430        431        432]
 [       433        434        435        436        437        438        439        440        441        442        443        444        445        446        447        448]
 [       449        450        451        452        453        454        455        456        457        458        459        460        461        462        463        464]
 [       465        466        467        468        469        470        471        472        473        474        475        476        477        478        479        480]
 [       481        482        483        484        485        486        487        488        489        490        491        492        493        494        495        496]
 [       497        498        499        500        501        502        503        504        505        506        507        508        509        510        511        512]]
After activation:
[[4294967182       9886        259        260        261        262        263        264        265        266        267        268        269        270          1          1]
 [       273        274        275        276        277        278        279        280        281        282        283        284        285        286        287        288]
 [       289        290        291        292        293        294        295        296        297        298        299        300        301        302        303        304]
 [       305        306        307        308        309        310        311        312        313        314        315        316        317        318        319        320]
 [       321        322        323        324        325        326        327        328        329        330        331        332        333        334        335        336]
 [       337        338        339        340        341        342        343        344        345        346        347        348        349        350        351        352]
 [       353        354        355        356        357        358        359        360        361        362        363        364        365        366        367        368]
 [       369        370        371        372        373        374        375        376        377        378        379        380        381        382        383        384]
 [       385        386        387        388        389        390        391        392        393        394        395        396        397        398        399        400]
 [       401        402        403        404        405        406        407        408        409        410        411        412        413        414        415        416]
 [       417        418        419        420        421        422        423        424        425        426        427        428        429        430        431        432]
 [       433        434        435        436        437        438        439        440        441        442        443        444        445        446        447        448]
 [       449        450        451        452        453        454        455        456        457        458        459        460        461        462        463        464]
 [       465        466        467        468        469        470        471        472        473        474        475        476        477        478        479        480]
 [       481        482        483        484        485        486        487        488        489        490        491        492        493        494        495        496]
 [       497        498        499        500        501        502        503        504        505        506        507        508        509        510        511        512]]
Branch from 227 to 114. No write to UB.

PC = 114
H A L T
MMC Count: 2
HM Count: 1
ACT Count: 2
RW Count: 2
RW Reloads: 2
PC history:
 [0, 1, 2, 3, 225, 226, 227, 114]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 2_branch_backward_first passed
Testing 13_rhm_cell
Simulation terminated at cycle 19
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [240:256]. Flags? 0
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 1
RHM vec cell: read host memory [15][1] and pad with 0s, write to unified buffer [0]. Buffer addr is 241 -> [15][1]. Flags? 1
[[242.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.]]

PC = 2
H A L T
MMC Count: 0
HM Count: 2
ACT Count: 0
RW Count: 0
RW Reloads: 0
PC history:
 [0, 1, 2]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 13_rhm_cell passed
Testing 1_branch_forward_first
Simulation terminated at cycle 82
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[  110 10110     3     4     5     6     7     8     9    10    11    12    13    14     1     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]

PC = 2
MMC: multiply UB[0:16] with a weight, store in ACC[0:16]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[  110 10110     3     4     5     6     7     8     9    10    11    12    13    14     1     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
MMC output: 
[[  110 10110     3     4     5     6     7     8     9    10    11    12    13    14     1     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
Accumulating with ACC[0:16]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[  110 10110     3     4     5     6     7     8     9    10    11    12    13    14     1     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]

PC = 3
ACT: read ACC[0:16], and write to UB[16:32]. Activation function: Before activation:
[[  110 10110     3     4     5     6     7     8     9    10    11    12    13    14     1     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
After activation:
[[  110 10110     3     4     5     6     7     8     9    10    11    12    13    14     1     1]
 [   17    18    19    20    21    22    23    24    25    26    27    28    29    30    31    32]
 [   33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48]
 [   49    50    51    52    53    54    55    56    57    58    59    60    61    62    63    64]
 [   65    66    67    68    69    70    71    72    73    74    75    76    77    78    79    80]
 [   81    82    83    84    85    86    87    88    89    90    91    92    93    94    95    96]
 [   97    98    99   100   101   102   103   104   105   106   107   108   109   110   111   112]
 [  113   114   115   116   117   118   119   120   121   122   123   124   125   126   127   128]
 [  129   130   131   132   133   134   135   136   137   138   139   140   141   142   143   144]
 [  145   146   147   148   149   150   151   152   153   154   155   156   157   158   159   160]
 [  161   162   163   164   165   166   167   168   169   170   171   172   173   174   175   176]
 [  177   178   179   180   181   182   183   184   185   186   187   188   189   190   191   192]
 [  193   194   195   196   197   198   199   200   201   202   203   204   205   206   207   208]
 [  209   210   211   212   213   214   215   216   217   218   219   220   221   222   223   224]
 [  225   226   227   228   229   230   231   232   233   234   235   236   237   238   239   240]
 [  241   242   243   244   245   246   247   248   249   250   251   252   253   254   255   256]]
Branch from 3 to 114. No write to UB.

PC = 114
H A L T
MMC Count: 1
HM Count: 1
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 114]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 1_branch_forward_first passed
Testing 7_lt_check_lt0
Simulation terminated at cycle 99
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[4294967281          2          3          4          5          6          7          8          9         10         11         12         13         14         15          3]
 [        17         18         19         20         21         22         23         24         25         26         27         28         29         30         31         32]
 [        33         34         35         36         37         38         39         40         41         42         43         44         45         46         47         48]
 [        49         50         51         52         53         54         55         56         57         58         59         60         61         62         63         64]
 [        65         66         67         68         69         70         71         72         73         74         75         76         77         78         79         80]
 [        81         82         83         84         85         86         87         88         89         90         91         92         93         94         95         96]
 [        97         98         99        100        101        102        103        104        105        106        107        108        109        110        111        112]
 [       113        114        115        116        117        118        119        120        121        122        123        124        125        126        127        128]
 [       129        130        131        132        133        134        135        136        137        138        139        140        141        142        143        144]
 [       145        146        147        148        149        150        151        152        153        154        155        156        157        158        159        160]
 [       161        162        163        164        165        166        167        168        169        170        171        172        173        174        175        176]
 [       177        178        179        180        181        182        183        184        185        186        187        188        189        190        191        192]
 [       193        194        195        196        197        198        199        200        201        202        203        204        205        206        207        208]
 [       209        210        211        212        213        214        215        216        217        218        219        220        221        222        223        224]
 [       225        226        227        228        229        230        231        232        233        234        235        236        237        238        239        240]
 [       241        242        243        244        245        246        247        248        249        250        251        252        253        254        255        256]]

PC = 2
MMC: multiply UB[0:16] with a weight, store in ACC[0:16]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[4294967281          2          3          4          5          6          7          8          9         10         11         12         13         14         15          3]
 [        17         18         19         20         21         22         23         24         25         26         27         28         29         30         31         32]
 [        33         34         35         36         37         38         39         40         41         42         43         44         45         46         47         48]
 [        49         50         51         52         53         54         55         56         57         58         59         60         61         62         63         64]
 [        65         66         67         68         69         70         71         72         73         74         75         76         77         78         79         80]
 [        81         82         83         84         85         86         87         88         89         90         91         92         93         94         95         96]
 [        97         98         99        100        101        102        103        104        105        106        107        108        109        110        111        112]
 [       113        114        115        116        117        118        119        120        121        122        123        124        125        126        127        128]
 [       129        130        131        132        133        134        135        136        137        138        139        140        141        142        143        144]
 [       145        146        147        148        149        150        151        152        153        154        155        156        157        158        159        160]
 [       161        162        163        164        165        166        167        168        169        170        171        172        173        174        175        176]
 [       177        178        179        180        181        182        183        184        185        186        187        188        189        190        191        192]
 [       193        194        195        196        197        198        199        200        201        202        203        204        205        206        207        208]
 [       209        210        211        212        213        214        215        216        217        218        219        220        221        222        223        224]
 [       225        226        227        228        229        230        231        232        233        234        235        236        237        238        239        240]
 [       241        242        243        244        245        246        247        248        249        250        251        252        253        254        255        256]]
MMC output: 
[[4294967281          2          3          4          5          6          7          8          9         10         11         12         13         14         15          3]
 [        17         18         19         20         21         22         23         24         25         26         27         28         29         30         31         32]
 [        33         34         35         36         37         38         39         40         41         42         43         44         45         46         47         48]
 [        49         50         51         52         53         54         55         56         57         58         59         60         61         62         63         64]
 [        65         66         67         68         69         70         71         72         73         74         75         76         77         78         79         80]
 [        81         82         83         84         85         86         87         88         89         90         91         92         93         94         95         96]
 [        97         98         99        100        101        102        103        104        105        106        107        108        109        110        111        112]
 [       113        114        115        116        117        118        119        120        121        122        123        124        125        126        127        128]
 [       129        130        131        132        133        134        135        136        137        138        139        140        141        142        143        144]
 [       145        146        147        148        149        150        151        152        153        154        155        156        157        158        159        160]
 [       161        162        163        164        165        166        167        168        169        170        171        172        173        174        175        176]
 [       177        178        179        180        181        182        183        184        185        186        187        188        189        190        191        192]
 [       193        194        195        196        197        198        199        200        201        202        203        204        205        206        207        208]
 [       209        210        211        212        213        214        215        216        217        218        219        220        221        222        223        224]
 [       225        226        227        228        229        230        231        232        233        234        235        236        237        238        239        240]
 [       241        242        243        244        245        246        247        248        249        250        251        252        253        254        255        256]]
Accumulating with ACC[0:16]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[4294967281          2          3          4          5          6          7          8          9         10         11         12         13         14         15          3]
 [        17         18         19         20         21         22         23         24         25         26         27         28         29         30         31         32]
 [        33         34         35         36         37         38         39         40         41         42         43         44         45         46         47         48]
 [        49         50         51         52         53         54         55         56         57         58         59         60         61         62         63         64]
 [        65         66         67         68         69         70         71         72         73         74         75         76         77         78         79         80]
 [        81         82         83         84         85         86         87         88         89         90         91         92         93         94         95         96]
 [        97         98         99        100        101        102        103        104        105        106        107        108        109        110        111        112]
 [       113        114        115        116        117        118        119        120        121        122        123        124        125        126        127        128]
 [       129        130        131        132        133        134        135        136        137        138        139        140        141        142        143        144]
 [       145        146        147        148        149        150        151        152        153        154        155        156        157        158        159        160]
 [       161        162        163        164        165        166        167        168        169        170        171        172        173        174        175        176]
 [       177        178        179        180        181        182        183        184        185        186        187        188        189        190        191        192]
 [       193        194        195        196        197        198        199        200        201        202        203        204        205        206        207        208]
 [       209        210        211        212        213        214        215        216        217        218        219        220        221        222        223        224]
 [       225        226        227        228        229        230        231        232        233        234        235        236        237        238        239        240]
 [       241        242        243        244        245        246        247        248        249        250        251        252        253        254        255        256]]

PC = 3
ACT: read ACC[0:16], and write to UB[16:32]. Activation function: Before activation:
[[4294967281          2          3          4          5          6          7          8          9         10         11         12         13         14         15          3]
 [        17         18         19         20         21         22         23         24         25         26         27         28         29         30         31         32]
 [        33         34         35         36         37         38         39         40         41         42         43         44         45         46         47         48]
 [        49         50         51         52         53         54         55         56         57         58         59         60         61         62         63         64]
 [        65         66         67         68         69         70         71         72         73         74         75         76         77         78         79         80]
 [        81         82         83         84         85         86         87         88         89         90         91         92         93         94         95         96]
 [        97         98         99        100        101        102        103        104        105        106        107        108        109        110        111        112]
 [       113        114        115        116        117        118        119        120        121        122        123        124        125        126        127        128]
 [       129        130        131        132        133        134        135        136        137        138        139        140        141        142        143        144]
 [       145        146        147        148        149        150        151        152        153        154        155        156        157        158        159        160]
 [       161        162        163        164        165        166        167        168        169        170        171        172        173        174        175        176]
 [       177        178        179        180        181        182        183        184        185        186        187        188        189        190        191        192]
 [       193        194        195        196        197        198        199        200        201        202        203        204        205        206        207        208]
 [       209        210        211        212        213        214        215        216        217        218        219        220        221        222        223        224]
 [       225        226        227        228        229        230        231        232        233        234        235        236        237        238        239        240]
 [       241        242        243        244        245        246        247        248        249        250        251        252        253        254        255        256]]
After activation:
[[4294967281          2          3          4          5          6          7          8          9         10         11         12         13         14         15          3]
 [        17         18         19         20         21         22         23         24         25         26         27         28         29         30         31         32]
 [        33         34         35         36         37         38         39         40         41         42         43         44         45         46         47         48]
 [        49         50         51         52         53         54         55         56         57         58         59         60         61         62         63         64]
 [        65         66         67         68         69         70         71         72         73         74         75         76         77         78         79         80]
 [        81         82         83         84         85         86         87         88         89         90         91         92         93         94         95         96]
 [        97         98         99        100        101        102        103        104        105        106        107        108        109        110        111        112]
 [       113        114        115        116        117        118        119        120        121        122        123        124        125        126        127        128]
 [       129        130        131        132        133        134        135        136        137        138        139        140        141        142        143        144]
 [       145        146        147        148        149        150        151        152        153        154        155        156        157        158        159        160]
 [       161        162        163        164        165        166        167        168        169        170        171        172        173        174        175        176]
 [       177        178        179        180        181        182        183        184        185        186        187        188        189        190        191        192]
 [       193        194        195        196        197        198        199        200        201        202        203        204        205        206        207        208]
 [       209        210        211        212        213        214        215        216        217        218        219        220        221        222        223        224]
 [       225        226        227        228        229        230        231        232        233        234        235        236        237        238        239        240]
 [       241        242        243        244        245        246        247        248        249        250        251        252        253        254        255        256]]
Less than check, evaluates to False (4294967281 !< 0).
After branch/comparison/jump:
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   0]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 4
RHM standard matrix: read host memory [32:33], write to unified buffer [32:33]. Flags? 0
[[513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528]]

PC = 5
H A L T
MMC Count: 1
HM Count: 2
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 4, 5]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 7_lt_check_lt0 passed
Testing 16_rhm_normal
Simulation terminated at cycle 17
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 1
H A L T
MMC Count: 0
HM Count: 1
ACT Count: 0
RW Count: 0
RW Reloads: 0
PC history:
 [0, 1]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 16_rhm_normal passed
Testing 12_act_normal
Simulation terminated at cycle 99
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  42]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 2
MMC: multiply UB[0:16] with a weight, store in ACC[0:16]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  42]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
MMC output: 
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  42]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
Accumulating with ACC[0:16]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  42]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 3
ACT: read ACC[0:16], and write to UB[16:32]. Activation function: Before activation:
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  42]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
After activation:
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  42]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
Normal activation.
After branch/comparison/jump:
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  42]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 4
RHM standard matrix: read host memory [32:33], write to unified buffer [32:33]. Flags? 0
[[513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528]]

PC = 5
H A L T
MMC Count: 1
HM Count: 2
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 4, 5]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 12_act_normal passed
Testing 14_rhm_vec
Simulation terminated at cycle 34
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [240:256]. Flags? 0
[[  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 1
RHM vec matrix: read host memory [15:31], write to unified buffer [0:16]. Buffer addr is 241 -> [15][1]. Flags? 1
[[241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]
 [257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272]
 [273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288]
 [289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304]
 [305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320]
 [321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336]
 [337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352]
 [353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368]
 [369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384]
 [385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400]
 [401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416]
 [417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432]
 [433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448]
 [449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464]
 [465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480]
 [481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496]]
[[241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]
 [257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272]
 [273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288]
 [289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304]
 [305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320]
 [321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336]
 [337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352]
 [353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368]
 [369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384]
 [385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400]
 [401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416]
 [417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432]
 [433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448]
 [449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464]
 [465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480]
 [481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496]]

PC = 2
H A L T
MMC Count: 0
HM Count: 2
ACT Count: 0
RW Count: 0
RW Reloads: 0
PC history:
 [0, 1, 2]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 14_rhm_vec passed
Testing 5_eq_check_eq
Simulation terminated at cycle 99
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   2]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 2
MMC: multiply UB[0:16] with a weight, store in ACC[0:16]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   2]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
MMC output: 
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   2]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
Accumulating with ACC[0:16]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   2]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 3
ACT: read ACC[0:16], and write to UB[16:32]. Activation function: Before activation:
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   2]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
After activation:
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   2]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
Equality check, evaluates to True.
After branch/comparison/jump:
[[  1   0   3   4   5   6   7   8   9  10  11  12  13  14  15   0]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 4
RHM standard matrix: read host memory [32:33], write to unified buffer [32:33]. Flags? 0
[[513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528]]

PC = 5
H A L T
MMC Count: 1
HM Count: 2
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 4, 5]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 5_eq_check_eq passed
Testing 8_lt_check_eq0
Simulation terminated at cycle 99
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   3]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 2
MMC: multiply UB[0:16] with a weight, store in ACC[0:16]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   3]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
MMC output: 
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   3]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
Accumulating with ACC[0:16]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   3]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 3
ACT: read ACC[0:16], and write to UB[16:32]. Activation function: Before activation:
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   3]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
After activation:
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   3]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
Less than check, evaluates to False (0 !< 0).
After branch/comparison/jump:
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   0]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 4
RHM standard matrix: read host memory [32:33], write to unified buffer [32:33]. Flags? 0
[[513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528]]

PC = 5
H A L T
MMC Count: 1
HM Count: 2
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 4, 5]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 8_lt_check_eq0 passed
Testing 9_lt_check_gt0
Simulation terminated at cycle 99
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[ 15   2   3   4   5   6   7   8   9  10  11  12  13  14  15   3]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 2
MMC: multiply UB[0:16] with a weight, store in ACC[0:16]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 15   2   3   4   5   6   7   8   9  10  11  12  13  14  15   3]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
MMC output: 
[[ 15   2   3   4   5   6   7   8   9  10  11  12  13  14  15   3]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
Accumulating with ACC[0:16]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[ 15   2   3   4   5   6   7   8   9  10  11  12  13  14  15   3]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 3
ACT: read ACC[0:16], and write to UB[16:32]. Activation function: Before activation:
[[ 15   2   3   4   5   6   7   8   9  10  11  12  13  14  15   3]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
After activation:
[[ 15   2   3   4   5   6   7   8   9  10  11  12  13  14  15   3]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
Less than check, evaluates to False (15 !< 0).
After branch/comparison/jump:
[[  0   2   3   4   5   6   7   8   9  10  11  12  13  14  15   0]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 4
RHM standard matrix: read host memory [32:33], write to unified buffer [32:33]. Flags? 0
[[513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528]]

PC = 5
H A L T
MMC Count: 1
HM Count: 2
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 4, 5]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 9_lt_check_gt0 passed
Testing 6_eq_check_neq
Simulation terminated at cycle 99
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[ 42   2   3   4   5   6   7   8   9  10  11  12  13  14  15   2]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 2
MMC: multiply UB[0:16] with a weight, store in ACC[0:16]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[ 42   2   3   4   5   6   7   8   9  10  11  12  13  14  15   2]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
MMC output: 
[[ 42   2   3   4   5   6   7   8   9  10  11  12  13  14  15   2]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
Accumulating with ACC[0:16]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[ 42   2   3   4   5   6   7   8   9  10  11  12  13  14  15   2]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 3
ACT: read ACC[0:16], and write to UB[16:32]. Activation function: Before activation:
[[ 42   2   3   4   5   6   7   8   9  10  11  12  13  14  15   2]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
After activation:
[[ 42   2   3   4   5   6   7   8   9  10  11  12  13  14  15   2]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
Equality check, evaluates to False.
After branch/comparison/jump:
[[  0   0   3   4   5   6   7   8   9  10  11  12  13  14  15   0]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 4
RHM standard matrix: read host memory [32:33], write to unified buffer [32:33]. Flags? 0
[[513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528]]

PC = 5
H A L T
MMC Count: 1
HM Count: 2
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 4, 5]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 6_eq_check_neq passed
Testing 15_rhm_pc_ret
Simulation terminated at cycle 2
PC = 0
RHM pc return: create curent pc vector, write to unified buffer [16]. Flags? 2
[[0. 2. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 4.]]

PC = 1
H A L T
MMC Count: 0
HM Count: 1
ACT Count: 0
RW Count: 0
RW Reloads: 0
PC history:
 [0, 1]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 15_rhm_pc_ret passed
Testing 10_jump_forward
Simulation terminated at cycle 82
PC = 0
RHM standard matrix: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]

PC = 1
RW 0: read weight matrix 0 into weight FIFO
[[  1 114   3   4   5   6   7   8   9  10  11  12  13  14  15   4]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 2
MMC: multiply UB[0:16] with a weight, store in ACC[0:16]
MMC matrix: 
[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]]
MMC weight: 
[[  1 114   3   4   5   6   7   8   9  10  11  12  13  14  15   4]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
MMC output: 
[[  1 114   3   4   5   6   7   8   9  10  11  12  13  14  15   4]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
Accumulating with ACC[0:16]
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
After MMC + ACC: 
[[  1 114   3   4   5   6   7   8   9  10  11  12  13  14  15   4]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]

PC = 3
ACT: read ACC[0:16], and write to UB[16:32]. Activation function: Before activation:
[[  1 114   3   4   5   6   7   8   9  10  11  12  13  14  15   4]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
After activation:
[[  1 114   3   4   5   6   7   8   9  10  11  12  13  14  15   4]
 [ 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32]
 [ 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48]
 [ 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64]
 [ 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80]
 [ 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96]
 [ 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112]
 [113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128]
 [129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144]
 [145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160]
 [161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176]
 [177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192]
 [193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208]
 [209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224]
 [225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240]
 [241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256]]
Unconditional jump from 3 to 114. No write to UB.

PC = 114
H A L T
MMC Count: 1
HM Count: 1
ACT Count: 1
RW Count: 1
RW Reloads: 1
PC history:
 [0, 1, 2, 3, 114]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
Test 10_jump_forward passed
