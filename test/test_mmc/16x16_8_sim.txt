PC = 0
HM shape: (16, 16)
UB shape: (96000, 16)
RHM: read host memory [0:16], write to unified buffer [0:16]. Flags? 0
[[  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15]
 [ 16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31]
 [ 32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47]
 [ 48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63]
 [ 64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79]
 [ 80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95]
 [ 96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111]
 [112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127]
 [128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143]
 [144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159]
 [160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175]
 [176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191]
 [192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207]
 [208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223]
 [224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239]
 [240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255]]

PC = 1

PC = 2

PC = 3

PC = 4

PC = 5

PC = 6

PC = 7

PC = 8

PC = 9

PC = 10

PC = 11

PC = 12

PC = 13

PC = 14

PC = 15

PC = 16

PC = 17

PC = 18

PC = 19

PC = 20

PC = 21

PC = 22

PC = 23

PC = 24

PC = 25

PC = 26

PC = 27

PC = 28

PC = 29

PC = 30

PC = 31

PC = 32

PC = 33

PC = 34

PC = 35

PC = 36

PC = 37

PC = 38

PC = 39

PC = 40

PC = 41

PC = 42

PC = 43

PC = 44

PC = 45

PC = 46

PC = 47

PC = 48

PC = 49

PC = 50
HM shape: (16, 16)
UB shape: (96000, 16)
RW 0: read weight matrix 0 into weight FIFO
[[  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15]
 [ 16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31]
 [ 32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47]
 [ 48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63]
 [ 64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79]
 [ 80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95]
 [ 96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111]
 [112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127]
 [128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143]
 [144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159]
 [160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175]
 [176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191]
 [192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207]
 [208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223]
 [224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239]
 [240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255]]

PC = 51

PC = 52

PC = 53

PC = 54

PC = 55

PC = 56

PC = 57

PC = 58

PC = 59

PC = 60

PC = 61

PC = 62

PC = 63

PC = 64

PC = 65

PC = 66

PC = 67

PC = 68

PC = 69

PC = 70

PC = 71

PC = 72

PC = 73

PC = 74

PC = 75

PC = 76

PC = 77

PC = 78

PC = 79

PC = 80

PC = 81

PC = 82

PC = 83

PC = 84

PC = 85

PC = 86

PC = 87

PC = 88

PC = 89

PC = 90

PC = 91

PC = 92

PC = 93

PC = 94

PC = 95

PC = 96

PC = 97

PC = 98

PC = 99

PC = 100
MMC: multiply UB[0:8] with a weight, store in ACC[0:8]
MMC matrix: 
[[  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15]
 [ 16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31]
 [ 32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47]
 [ 48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63]
 [ 64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79]
 [ 80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95]
 [ 96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111]
 [112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127]]
MMC weight: 
[[  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15]
 [ 16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31]
 [ 32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47]
 [ 48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63]
 [ 64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79]
 [ 80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95]
 [ 96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111]
 [112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127]
 [128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143]
 [144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159]
 [160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175]
 [176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191]
 [192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207]
 [208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223]
 [224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239]
 [240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255]]
MMC output: 
[[ 19840  19960  20080  20200  20320  20440  20560  20680  20800  20920  21040  21160  21280  21400  21520  21640]
 [ 50560  50936  51312  51688  52064  52440  52816  53192  53568  53944  54320  54696  55072  55448  55824  56200]
 [ 81280  81912  82544  83176  83808  84440  85072  85704  86336  86968  87600  88232  88864  89496  90128  90760]
 [112000 112888 113776 114664 115552 116440 117328 118216 119104 119992 120880 121768 122656 123544 124432 125320]
 [142720 143864 145008 146152 147296 148440 149584 150728 151872 153016 154160 155304 156448 157592 158736 159880]
 [173440 174840 176240 177640 179040 180440 181840 183240 184640 186040 187440 188840 190240 191640 193040 194440]
 [204160 205816 207472 209128 210784 212440 214096 215752 217408 219064 220720 222376 224032 225688 227344 229000]
 [234880 236792 238704 240616 242528 244440 246352 248264 250176 252088 254000 255912 257824 259736 261648 263560]]
Overwriting ACC[0:8]
After MMC + ACC: 
[[ 19840  19960  20080  20200  20320  20440  20560  20680  20800  20920  21040  21160  21280  21400  21520  21640]
 [ 50560  50936  51312  51688  52064  52440  52816  53192  53568  53944  54320  54696  55072  55448  55824  56200]
 [ 81280  81912  82544  83176  83808  84440  85072  85704  86336  86968  87600  88232  88864  89496  90128  90760]
 [112000 112888 113776 114664 115552 116440 117328 118216 119104 119992 120880 121768 122656 123544 124432 125320]
 [142720 143864 145008 146152 147296 148440 149584 150728 151872 153016 154160 155304 156448 157592 158736 159880]
 [173440 174840 176240 177640 179040 180440 181840 183240 184640 186040 187440 188840 190240 191640 193040 194440]
 [204160 205816 207472 209128 210784 212440 214096 215752 217408 219064 220720 222376 224032 225688 227344 229000]
 [234880 236792 238704 240616 242528 244440 246352 248264 250176 252088 254000 255912 257824 259736 261648 263560]]

PC = 101

PC = 102

PC = 103

PC = 104

PC = 105

PC = 106

PC = 107

PC = 108

PC = 109

PC = 110

PC = 111

PC = 112

PC = 113

PC = 114

PC = 115

PC = 116

PC = 117

PC = 118

PC = 119

PC = 120

PC = 121

PC = 122

PC = 123

PC = 124

PC = 125

PC = 126

PC = 127

PC = 128

PC = 129

PC = 130

PC = 131

PC = 132

PC = 133

PC = 134

PC = 135

PC = 136

PC = 137

PC = 138

PC = 139

PC = 140

PC = 141

PC = 142

PC = 143

PC = 144

PC = 145

PC = 146

PC = 147

PC = 148

PC = 149

PC = 150
H A L T
Final host memory:
[[  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15]
 [ 16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31]
 [ 32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47]
 [ 48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63]
 [ 64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79]
 [ 80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95]
 [ 96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111]
 [112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127]
 [128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143]
 [144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159]
 [160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175]
 [176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191]
 [192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207]
 [208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223]
 [224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239]
 [240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255]]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
