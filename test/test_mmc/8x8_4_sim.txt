PC = 0
HM shape: (8, 8)
UB shape: (96000, 8)
RHM: read host memory [0:8], write to unified buffer [0:8]. Flags? 0
[[ 0  1  2  3  4  5  6  7]
 [ 8  9 10 11 12 13 14 15]
 [16 17 18 19 20 21 22 23]
 [24 25 26 27 28 29 30 31]
 [32 33 34 35 36 37 38 39]
 [40 41 42 43 44 45 46 47]
 [48 49 50 51 52 53 54 55]
 [56 57 58 59 60 61 62 63]]

PC = 1

PC = 2

PC = 3

PC = 4

PC = 5

PC = 6

PC = 7

PC = 8

PC = 9

PC = 10

PC = 11

PC = 12

PC = 13

PC = 14

PC = 15

PC = 16

PC = 17

PC = 18

PC = 19

PC = 20

PC = 21

PC = 22

PC = 23

PC = 24

PC = 25

PC = 26

PC = 27

PC = 28

PC = 29

PC = 30

PC = 31

PC = 32

PC = 33

PC = 34

PC = 35

PC = 36

PC = 37

PC = 38

PC = 39

PC = 40

PC = 41

PC = 42

PC = 43

PC = 44

PC = 45

PC = 46

PC = 47

PC = 48

PC = 49

PC = 50
HM shape: (8, 8)
UB shape: (96000, 8)
RW 0: read weight matrix 0 into weight FIFO
[[ 0  1  2  3  4  5  6  7]
 [ 8  9 10 11 12 13 14 15]
 [16 17 18 19 20 21 22 23]
 [24 25 26 27 28 29 30 31]
 [32 33 34 35 36 37 38 39]
 [40 41 42 43 44 45 46 47]
 [48 49 50 51 52 53 54 55]
 [56 57 58 59 60 61 62 63]]

PC = 51

PC = 52

PC = 53

PC = 54

PC = 55

PC = 56

PC = 57

PC = 58

PC = 59

PC = 60

PC = 61

PC = 62

PC = 63

PC = 64

PC = 65

PC = 66

PC = 67

PC = 68

PC = 69

PC = 70

PC = 71

PC = 72

PC = 73

PC = 74

PC = 75

PC = 76

PC = 77

PC = 78

PC = 79

PC = 80

PC = 81

PC = 82

PC = 83

PC = 84

PC = 85

PC = 86

PC = 87

PC = 88

PC = 89

PC = 90

PC = 91

PC = 92

PC = 93

PC = 94

PC = 95

PC = 96

PC = 97

PC = 98

PC = 99

PC = 100
MMC: multiply UB[0:4] with a weight, store in ACC[0:4]
MMC matrix: 
[[ 0  1  2  3  4  5  6  7]
 [ 8  9 10 11 12 13 14 15]
 [16 17 18 19 20 21 22 23]
 [24 25 26 27 28 29 30 31]]
MMC weight: 
[[ 0  1  2  3  4  5  6  7]
 [ 8  9 10 11 12 13 14 15]
 [16 17 18 19 20 21 22 23]
 [24 25 26 27 28 29 30 31]
 [32 33 34 35 36 37 38 39]
 [40 41 42 43 44 45 46 47]
 [48 49 50 51 52 53 54 55]
 [56 57 58 59 60 61 62 63]]
MMC output: 
[[1120 1148 1176 1204 1232 1260 1288 1316]
 [2912 3004 3096 3188 3280 3372 3464 3556]
 [4704 4860 5016 5172 5328 5484 5640 5796]
 [6496 6716 6936 7156 7376 7596 7816 8036]]
Overwriting ACC[0:4]
After MMC + ACC: 
[[1120 1148 1176 1204 1232 1260 1288 1316]
 [2912 3004 3096 3188 3280 3372 3464 3556]
 [4704 4860 5016 5172 5328 5484 5640 5796]
 [6496 6716 6936 7156 7376 7596 7816 8036]]

PC = 101

PC = 102

PC = 103

PC = 104

PC = 105

PC = 106

PC = 107

PC = 108

PC = 109

PC = 110

PC = 111

PC = 112

PC = 113

PC = 114

PC = 115

PC = 116

PC = 117

PC = 118

PC = 119

PC = 120

PC = 121

PC = 122

PC = 123

PC = 124

PC = 125

PC = 126

PC = 127

PC = 128

PC = 129

PC = 130

PC = 131

PC = 132

PC = 133

PC = 134

PC = 135

PC = 136

PC = 137

PC = 138

PC = 139

PC = 140

PC = 141

PC = 142

PC = 143

PC = 144

PC = 145

PC = 146

PC = 147

PC = 148

PC = 149

PC = 150
H A L T
Final host memory:
[[ 0  1  2  3  4  5  6  7]
 [ 8  9 10 11 12 13 14 15]
 [16 17 18 19 20 21 22 23]
 [24 25 26 27 28 29 30 31]
 [32 33 34 35 36 37 38 39]
 [40 41 42 43 44 45 46 47]
 [48 49 50 51 52 53 54 55]
 [56 57 58 59 60 61 62 63]]

ALL DONE!
        (•_•)
        ( •_•)>⌐■-■
        (⌐■_■)
